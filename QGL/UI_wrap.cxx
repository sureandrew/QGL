/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */


#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC)
#   if (__SUNPRO_CC <= 0x560)
#     define SWIGTEMPLATEDISAMBIGUATOR template
#   else
#     define SWIGTEMPLATEDISAMBIGUATOR 
#   endif
# else
#   define SWIGTEMPLATEDISAMBIGUATOR 
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic CAPI SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "3"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the swig runtime code.
  In 99.9% of the cases, swig just needs to declare them as 'static'.
  
  But only do this if is strictly necessary, ie, if you have problems
  with your compiler or so.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/* 
   Flags/methods for returning states.
   
   The swig conversion methods, as ConvertPtr, return and integer 
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).
   
   Use the following macros/flags to set or process the returning
   states.
   
   In old swig versions, you usually write code as:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit as:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   that seems to be the same, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }
    
   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   requires also to SWIG_ConvertPtr to return new result values, as

      int SWIG_ConvertPtr(obj, ptr,...) {         
        if (<obj is ok>) {			       
          if (<need new object>) {		       
            *ptr = <ptr to new allocated object>; 
            return SWIG_NEWOBJ;		       
          } else {				       
            *ptr = <ptr to old object>;	       
            return SWIG_OLDOBJ;		       
          } 				       
        } else {				       
          return SWIG_BADOBJ;		       
        }					       
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   swig errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call
 
      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()


 */
#define SWIG_OK                    (0) 
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)  

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))


/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) { 
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) { 
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0; 
}
#else /* no cast-rank mode */
#  define SWIG_AddCast
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif




#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store inforomation on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (l1 - f1) - (l2 - f2);
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/* think of this as a c++ template<> or a scheme macro */
#define SWIG_TypeCheck_Template(comparison, ty)         \
  if (ty) {                                             \
    swig_cast_info *iter = ty->cast;                    \
    while (iter) {                                      \
      if (comparison) {                                 \
        if (iter == ty->cast) return iter;              \
        /* Move iter to the top of the linked list */   \
        iter->prev->next = iter->next;                  \
        if (iter->next)                                 \
          iter->next->prev = iter->prev;                \
        iter->next = ty->cast;                          \
        iter->prev = 0;                                 \
        if (ty->cast) ty->cast->prev = iter;            \
        ty->cast = iter;                                \
        return iter;                                    \
      }                                                 \
      iter = iter->next;                                \
    }                                                   \
  }                                                     \
  return 0

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  SWIG_TypeCheck_Template(strcmp(iter->type->name, c) == 0, ty);
}

/* Same as previous function, except strcmp is replaced with a pointer comparison */
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *into) {
  SWIG_TypeCheck_Template(iter->type == from, into);
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}
  
/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------
 * See the LICENSE file for information on copyright, usage and redistribution
 * of SWIG, and the README file for authors - http://www.swig.org/release.html.
 *
 * luarun.swg
 *
 * This file contains the runtime support for Lua modules
 * and includes code for managing global variables and pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

#include "lua.h"
#include "lauxlib.h"
#include <malloc.h>
#include <assert.h>	/* for a few sanity tests */

/* -----------------------------------------------------------------------------
 * global swig types
 * ----------------------------------------------------------------------------- */
/* Constant table */
#define SWIG_LUA_INT     1
#define SWIG_LUA_FLOAT   2
#define SWIG_LUA_STRING  3
#define SWIG_LUA_POINTER 4
#define SWIG_LUA_BINARY  5
#define SWIG_LUA_CHAR    6

/* Structure for variable linking table */
typedef struct {
  const char *name;
  lua_CFunction get;
  lua_CFunction set;
} swig_lua_var_info;

/* Constant information structure */
typedef struct {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_lua_const_info;

typedef struct {
  const char     *name;
  lua_CFunction   method;
} swig_lua_method;

typedef struct {
  const char     *name;
  lua_CFunction   getmethod;
  lua_CFunction   setmethod;
} swig_lua_attribute;

typedef struct swig_lua_class {
  const char         *name;
  swig_type_info   **type;
  lua_CFunction       constructor;
  void              (*destructor)(void *);
  swig_lua_method        *methods;
  swig_lua_attribute     *attributes;
  struct swig_lua_class **bases;
} swig_lua_class;

/* this is the struct for wrappering all pointers in SwigLua
*/
typedef struct {
  swig_type_info   *type;
  int               own;	/* 1 if owned & must be destroyed */
  void             *ptr;
} swig_lua_userdata;

/* this is the struct for wrappering arbitary packed binary data
(currently it is only used for member fn pointers)
the data ordering is similar to swig_lua_userdata, but its currently not possible
to tell the two structres apart within Swig, other than by looking at the type
*/
typedef struct {
  swig_type_info   *type;
  int               own;	/* 1 if owned & must be destroyed */
  char data[1];            /* arbitary amount of data */    
} swig_lua_rawdata;

/* Common SWIG API */
#define SWIG_NewPointerObj(L, ptr, type, owner)            SWIG_Lua_NewPointerObj(L, (void *)ptr, type, owner)
#define SWIG_ConvertPtr(L,idx, ptr, type, flags)	       SWIG_Lua_ConvertPtr(L,idx,ptr,type,flags)
#define SWIG_MustGetPtr(L,idx, type,flags, argnum,fnname)  SWIG_Lua_MustGetPtr(L,idx, type,flags, argnum,fnname)
/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(L, idx, ptr, sz, ty)            SWIG_Lua_ConvertPacked(L, idx, ptr, sz, ty)
#define SWIG_NewMemberObj(L, ptr, sz, type)                SWIG_Lua_NewPackedObj(L, ptr, sz, type)

/* Runtime API */
#define SWIG_GetModule(clientdata) SWIG_Lua_GetModule((lua_State*)(clientdata))
#define SWIG_SetModule(clientdata, pointer) SWIG_Lua_SetModule((lua_State*) (clientdata), pointer)
#define SWIG_MODULE_CLIENTDATA_TYPE lua_State*

/* Contract support */
#define SWIG_contract_assert(expr, msg)  \
  if (!(expr)) { lua_pushstring(L, (char *) msg); goto fail; } else

/* helper #defines */
#define SWIG_fail {goto fail;}
#define SWIG_fail_arg(I) {lua_pushfstring(L,"argument %d incorrect/missing",I);goto fail;}
#define SWIG_fail_ptr(func_name,argnum,type) \
	{lua_pushfstring(L,"Error in %s, expected a %s at argument number %d\n",\
	func_name,(type && type->str)?type->str:"void*",argnum);\
	goto fail;}

#define SWIG_Lua_get_table(L,n) \
	(lua_pushstring(L, n), lua_rawget(L,-2))

#define SWIG_Lua_add_function(L,n,f) \
		   (lua_pushstring(L, n), \
			lua_pushcfunction(L, f), \
			lua_rawset(L,-3))

/* special helper for allowing 'nil' for usertypes */
#define SWIG_isptrtype(L,I) (lua_isuserdata(L,I) || lua_isnil(L,I))

#ifdef __cplusplus
/* Special helper for member function pointers 
it gets the address, casts it, then dereferences it */
#define SWIG_mem_fn_as_voidptr(a)  (*((char**)&(a)))
#endif

/* -----------------------------------------------------------------------------
 * global variable support code: modules
 * ----------------------------------------------------------------------------- */

/* the module.get method used for getting linked data */
SWIGINTERN int SWIG_Lua_module_get(lua_State* L)
{
/*	there should be 2 params passed in
	(1) table (not the meta table)
	(2) string name of the attribute
	printf("SWIG_Lua_module_get %p(%s) '%s'\n",
				lua_topointer(L,1),lua_typename(L,lua_type(L,1)),
				lua_tostring(L,2));
*/
	/* get the metatable */
	assert(lua_istable(L,1));	/* just in case */
	lua_getmetatable(L,1);	/* get the metatable */
	assert(lua_istable(L,-1));	/* just in case */
	SWIG_Lua_get_table(L,".get");	/* get the .get table */
	lua_remove(L,3);	/* remove metatable */
	if (lua_istable(L,-1))
	{
		/* look for the key in the .get table */
		lua_pushvalue(L,2);  /* key */
		lua_rawget(L,-2);
		lua_remove(L,3);	/* remove .get */
		if (lua_iscfunction(L,-1))
		{	/* found it so call the fn & return its value */
			lua_call(L,0,1);
			return 1;
		}
		lua_pop(L,1);	/* remove the top */
	}
	lua_pop(L,1);	/* remove the .get */
	lua_pushnil(L);	/* return a nil */
    return 1;
}

/* the module.set method used for setting linked data */
SWIGINTERN int SWIG_Lua_module_set(lua_State* L)
{
/*	there should be 3 params passed in
	(1) table (not the meta table)
	(2) string name of the attribute
	(3) any for the new value
*/
	/* get the metatable */
	assert(lua_istable(L,1));	/* just in case */
	lua_getmetatable(L,1);	/* get the metatable */
	assert(lua_istable(L,-1));	/* just in case */
	SWIG_Lua_get_table(L,".set");	/* get the .set table */
	lua_remove(L,4);	/* remove metatable */
	if (lua_istable(L,-1))
	{
		/* look for the key in the .set table */
		lua_pushvalue(L,2);  /* key */
		lua_rawget(L,-2);
		lua_remove(L,4);	/* remove .set */
		if (lua_iscfunction(L,-1))
		{	/* found it so call the fn & return its value */
			lua_pushvalue(L,3);  /* value */
			lua_call(L,1,0);
			return 0;
		}
		lua_pop(L,1);	/* remove the top */
	}
	lua_pop(L,1);	/* remove the .set */
    return 0;
}

/* registering a module in lua */
SWIGINTERN void  SWIG_Lua_module_begin(lua_State* L,const char* name)
{
	assert(lua_istable(L,-1));	/* just in case */
	lua_pushstring(L,name);
	lua_newtable(L);				/* the table */
	/* add meta table */
	lua_newtable(L);		/* the meta table */
	SWIG_Lua_add_function(L,"__index",SWIG_Lua_module_get);
	SWIG_Lua_add_function(L,"__newindex",SWIG_Lua_module_set);
	lua_pushstring(L,".get");
	lua_newtable(L);		/* the .get table */
	lua_rawset(L,-3);       /* add .get into metatable */
	lua_pushstring(L,".set");
	lua_newtable(L);		/* the .set table */
	lua_rawset(L,-3);       /* add .set into metatable */
	lua_setmetatable(L,-2);	/* sets meta table in module */
	lua_rawset(L,-3);                  /* add module into parent */
	SWIG_Lua_get_table(L,name);				/* get the table back out */
}

/* ending the register */
SWIGINTERN void  SWIG_Lua_module_end(lua_State* L)
{
	lua_pop(L,1);                      /* tidy stack (remove module) */
}

/* adding a linked variable to the module */
SWIGINTERN void SWIG_Lua_module_add_variable(lua_State* L,const char* name,lua_CFunction getFn,lua_CFunction setFn)
{
	assert(lua_istable(L,-1));	/* just in case */
	lua_getmetatable(L,-1);	/* get the metatable */
	assert(lua_istable(L,-1));	/* just in case */
	SWIG_Lua_get_table(L,".get"); /* find the .get table */
	assert(lua_istable(L,-1));	/* should be a table: */
	SWIG_Lua_add_function(L,name,getFn);
	lua_pop(L,1);                      /* tidy stack (remove table) */
	if (setFn)	/* if there is a set fn */
	{
		SWIG_Lua_get_table(L,".set"); /* find the .set table */
		assert(lua_istable(L,-1));	/* should be a table: */
		SWIG_Lua_add_function(L,name,setFn);
		lua_pop(L,1);                      /* tidy stack (remove table) */
	}
	lua_pop(L,1);                      /* tidy stack (remove meta) */
}

/* adding a function module */
SWIGINTERN void  SWIG_Lua_module_add_function(lua_State* L,const char* name,lua_CFunction fn)
{
	SWIG_Lua_add_function(L,name,fn);
}

/* -----------------------------------------------------------------------------
 * global variable support code: classes
 * ----------------------------------------------------------------------------- */

/* the class.get method, performs the lookup of class attributes */
SWIGINTERN int  SWIG_Lua_class_get(lua_State* L)
{
/*	there should be 2 params passed in
	(1) userdata (not the meta table)
	(2) string name of the attribute
*/
	assert(lua_isuserdata(L,-2));	/* just in case */
	lua_getmetatable(L,-2);		/* get the meta table */
	assert(lua_istable(L,-1));	/* just in case */
	SWIG_Lua_get_table(L,".get"); /* find the .get table */
	assert(lua_istable(L,-1));	/* just in case */
	/* look for the key in the .get table */
	lua_pushvalue(L,2);  /* key */
	lua_rawget(L,-2);
	lua_remove(L,-2); /* stack tidy, remove .get table */
	if (lua_iscfunction(L,-1))
	{	/* found it so call the fn & return its value */
		lua_pushvalue(L,1);  /* the userdata */
		lua_call(L,1,1);	/* 1 value in (userdata),1 out (result) */
		lua_remove(L,-2); /* stack tidy, remove metatable */
		return 1;
	}
	lua_pop(L,1);	/* remove whatever was there */
	/* ok, so try the .fn table */
	SWIG_Lua_get_table(L,".fn"); /* find the .get table */
	assert(lua_istable(L,-1));	/* just in case */
	lua_pushvalue(L,2);  /* key */
	lua_rawget(L,-2);	/* look for the fn */
	lua_remove(L,-2); /* stack tidy, remove .fn table */
	if (lua_iscfunction(L,-1))
	{	/* found it so return the fn & let lua call it */
		lua_remove(L,-2); /* stack tidy, remove metatable */
		return 1;
	}
	lua_pop(L,1);	/* remove whatever was there */
	/* NEW: looks for the __getitem() fn
	this is a user provided get fn */
	SWIG_Lua_get_table(L,"__getitem"); /* find the __getitem fn */
	if (lua_iscfunction(L,-1))	/* if its there */
	{	/* found it so call the fn & return its value */
		lua_pushvalue(L,1);  /* the userdata */
		lua_pushvalue(L,2);  /* the parameter */
		lua_call(L,2,1);	/* 2 value in (userdata),1 out (result) */
		lua_remove(L,-2); /* stack tidy, remove metatable */
		return 1;
	}
	return 0;	/* sorry not known */
}

/* the class.set method, performs the lookup of class attributes */
SWIGINTERN int  SWIG_Lua_class_set(lua_State* L)
{
/*	there should be 3 params passed in
	(1) table (not the meta table)
	(2) string name of the attribute
	(3) any for the new value
printf("SWIG_Lua_class_set %p(%s) '%s' %p(%s)\n",
			lua_topointer(L,1),lua_typename(L,lua_type(L,1)),
			lua_tostring(L,2),
			lua_topointer(L,3),lua_typename(L,lua_type(L,3)));*/

	assert(lua_isuserdata(L,1));	/* just in case */
	lua_getmetatable(L,1);		/* get the meta table */
	assert(lua_istable(L,-1));	/* just in case */

	SWIG_Lua_get_table(L,".set"); /* find the .set table */
	if (lua_istable(L,-1))
	{
		/* look for the key in the .set table */
		lua_pushvalue(L,2);  /* key */
		lua_rawget(L,-2);
		if (lua_iscfunction(L,-1))
		{	/* found it so call the fn & return its value */
			lua_pushvalue(L,1);  /* userdata */
			lua_pushvalue(L,3);  /* value */
			lua_call(L,2,0);
			return 0;
		}
		lua_pop(L,1);	/* remove the value */
	}
	lua_pop(L,1);	/* remove the value .set table */
	/* NEW: looks for the __setitem() fn
	this is a user provided set fn */
	SWIG_Lua_get_table(L,"__setitem"); /* find the fn */
	if (lua_iscfunction(L,-1))	/* if its there */
	{	/* found it so call the fn & return its value */
		lua_pushvalue(L,1);  /* the userdata */
		lua_pushvalue(L,2);  /* the parameter */
		lua_pushvalue(L,3);  /* the value */
		lua_call(L,3,0);	/* 3 values in ,0 out */
		lua_remove(L,-2); /* stack tidy, remove metatable */
		return 1;
	}
	return 0;
}

/* the class.destruct method called by the interpreter */
SWIGINTERN int  SWIG_Lua_class_destruct(lua_State* L)
{
/*	there should be 1 params passed in
	(1) userdata (not the meta table) */
	swig_lua_userdata* usr;
	swig_lua_class* clss;
	assert(lua_isuserdata(L,-1));	/* just in case */
	usr=(swig_lua_userdata*)lua_touserdata(L,-1);	/* get it */
	/* if must be destroyed & has a destructor */
	if (usr->own) /* if must be destroyed */
	{
		clss=(swig_lua_class*)usr->type->clientdata;	/* get the class */
		if (clss && clss->destructor)	/* there is a destroy fn */
		{
			clss->destructor(usr->ptr);	/* bye bye */
		}
	}
	return 0;
}

/* gets the swig class registry (or creates it) */
SWIGINTERN void  SWIG_Lua_get_class_registry(lua_State* L)
{
	/* add this all into the swig registry: */
	lua_pushstring(L,"SWIG");
	lua_rawget(L,LUA_REGISTRYINDEX);	/* get the registry */
	if (!lua_istable(L,-1))	/* not there */
	{	/* must be first time, so add it */
		lua_pop(L,1);	/* remove the result */
		lua_pushstring(L,"SWIG");
		lua_newtable(L);
		lua_rawset(L,LUA_REGISTRYINDEX);
		/* then get it */
		lua_pushstring(L,"SWIG");
		lua_rawget(L,LUA_REGISTRYINDEX);
	}
}

/* helper fn to get the classes metatable from the register */
SWIGINTERN void  SWIG_Lua_get_class_metatable(lua_State* L,const char* cname)
{
	SWIG_Lua_get_class_registry(L);	/* get the registry */
	lua_pushstring(L,cname);	/* get the name */
	lua_rawget(L,-2);		/* get it */
	lua_remove(L,-2);		/* tidy up (remove registry) */
}

/* helper add a variable to a registered class */
SWIGINTERN void  SWIG_Lua_add_class_variable(lua_State* L,const char* name,lua_CFunction getFn,lua_CFunction setFn)
{
	assert(lua_istable(L,-1));	/* just in case */
	SWIG_Lua_get_table(L,".get"); /* find the .get table */
	assert(lua_istable(L,-1));	/* just in case */
	SWIG_Lua_add_function(L,name,getFn);
	lua_pop(L,1);                      /* tidy stack (remove table) */
	if (setFn)
	{
		SWIG_Lua_get_table(L,".set"); /* find the .set table */
		assert(lua_istable(L,-1));	/* just in case */
		SWIG_Lua_add_function(L,name,setFn);
		lua_pop(L,1);                      /* tidy stack (remove table) */
	}
}

/* helper to recursively add class details (attributes & operations) */
SWIGINTERN void  SWIG_Lua_add_class_details(lua_State* L,swig_lua_class* clss)
{
	int i;
	/* call all the base classes first: we can then override these later: */
	for(i=0;clss->bases[i];i++)
	{
		SWIG_Lua_add_class_details(L,clss->bases[i]);
	}
	/* add fns */
	for(i=0;clss->attributes[i].name;i++){
		SWIG_Lua_add_class_variable(L,clss->attributes[i].name,clss->attributes[i].getmethod,clss->attributes[i].setmethod);
	}
	/* add methods to the metatable */
	SWIG_Lua_get_table(L,".fn"); /* find the .fn table */
	assert(lua_istable(L,-1));	/* just in case */
	for(i=0;clss->methods[i].name;i++){
		SWIG_Lua_add_function(L,clss->methods[i].name,clss->methods[i].method);
	}
	lua_pop(L,1);                      /* tidy stack (remove table) */
	/* 	add operator overloads
		these look ANY method which start with "__" and assume they
		are operator overloads & add them to the metatable
		(this might mess up is someone defines a method __gc (the destructor)*/
	for(i=0;clss->methods[i].name;i++){
		if (clss->methods[i].name[0]=='_' && clss->methods[i].name[1]=='_'){
			SWIG_Lua_add_function(L,clss->methods[i].name,clss->methods[i].method);
		}
	}
}

/* performs the entire class registration process */
SWIGINTERN void  SWIG_Lua_class_register(lua_State* L,swig_lua_class* clss)
{
/*	add its constructor to module with the name of the class
	so you can do MyClass(...) as well as new_MyClass(...)
	BUT only if a constructor is defined
	(this overcomes the problem of pure virtual classes without constructors)*/
	if (clss->constructor)
		SWIG_Lua_add_function(L,clss->name,clss->constructor);

	SWIG_Lua_get_class_registry(L);	/* get the registry */
	lua_pushstring(L,clss->name);	/* get the name */
	lua_newtable(L);		/* create the metatable */
	/* add string of class name called ".type" */
	lua_pushstring(L,".type");
	lua_pushstring(L,clss->name);
	lua_rawset(L,-3);
	/* add a table called ".get" */
	lua_pushstring(L,".get");
	lua_newtable(L);
	lua_rawset(L,-3);
	/* add a table called ".set" */
	lua_pushstring(L,".set");
	lua_newtable(L);
	lua_rawset(L,-3);
	/* add a table called ".fn" */
	lua_pushstring(L,".fn");
	lua_newtable(L);
	lua_rawset(L,-3);
	/* add accessor fns for using the .get,.set&.fn */
	SWIG_Lua_add_function(L,"__index",SWIG_Lua_class_get);
	SWIG_Lua_add_function(L,"__newindex",SWIG_Lua_class_set);
	SWIG_Lua_add_function(L,"__gc",SWIG_Lua_class_destruct);
	/* add it */
	lua_rawset(L,-3);	/* metatable into registry */
	lua_pop(L,1);           /* tidy stack (remove registry) */

	SWIG_Lua_get_class_metatable(L,clss->name);
	SWIG_Lua_add_class_details(L,clss);	/* recursive adding of details (atts & ops) */
	lua_pop(L,1);           /* tidy stack (remove class metatable) */
}

/* -----------------------------------------------------------------------------
 * Class/structure conversion fns
 * ----------------------------------------------------------------------------- */

/* helper to add metatable to new lua object */
SWIGINTERN void _SWIG_Lua_AddMetatable(lua_State* L,swig_type_info *type)
{
	if (type->clientdata)	/* there is clientdata: so add the metatable */
	{
		SWIG_Lua_get_class_metatable(L,((swig_lua_class*)(type->clientdata))->name);
		if (lua_istable(L,-1))
		{
			lua_setmetatable(L,-2);
		}
		else
		{
			lua_pop(L,1);
		}
	}
}

/* pushes a new object into the lua stack */
SWIGRUNTIME void SWIG_Lua_NewPointerObj(lua_State* L,void* ptr,swig_type_info *type, int own)
{
	swig_lua_userdata* usr;
	if (!ptr){
		lua_pushnil(L);
		return;
	}
	usr=(swig_lua_userdata*)lua_newuserdata(L,sizeof(swig_lua_userdata));	/* get data */
	usr->ptr=ptr;	/* set the ptr */
	usr->type=type;
	usr->own=own;
    _SWIG_Lua_AddMetatable(L,type); /* add metatable */
}

/* takes a object from the lua stack & converts it into an object of the correct type
 (if possible) */
SWIGRUNTIME int  SWIG_Lua_ConvertPtr(lua_State* L,int index,void** ptr,swig_type_info *type,int flags)
{
	swig_lua_userdata* usr;
	swig_cast_info *cast;
	if (lua_isnil(L,index)){*ptr=0; return SWIG_OK;}    /* special case: lua nil => NULL pointer */
	usr=(swig_lua_userdata*)lua_touserdata(L,index);	/* get data */
	if (usr)
	{
                if (!type)                           /* special cast void*, no casting fn */
                {
                    *ptr=usr->ptr;
                    return SWIG_OK; /* ok */
                }
		cast=SWIG_TypeCheckStruct(usr->type,type); /* performs normal type checking */
		if (cast)
		{
			*ptr=SWIG_TypeCast(cast,usr->ptr);
			return SWIG_OK;	/* ok */
		}
	}
	return SWIG_ERROR;	/* error */
}

SWIGRUNTIME void* SWIG_Lua_MustGetPtr(lua_State* L,int index,swig_type_info *type,int flags,
						int argnum,const char* func_name){
	void* result;
	if (!SWIG_IsOK(SWIG_ConvertPtr(L,index,&result,type,flags))){
		lua_pushfstring(L,"Error in %s, expected a %s at argument number %d\n",
			func_name,(type && type->str)?type->str:"void*",argnum);
		lua_error(L);
	}
	return result;
}

/* pushes a packed userdata. user for member fn pointers only */
SWIGRUNTIME void SWIG_Lua_NewPackedObj(lua_State* L,void* ptr,size_t size,swig_type_info *type)
{
	swig_lua_rawdata* raw;
	assert(ptr); /* not acceptable to pass in a NULL value */
	raw=(swig_lua_rawdata*)lua_newuserdata(L,sizeof(swig_lua_rawdata)-1+size);	/* alloc data */
	raw->type=type;
	raw->own=0;
    memcpy(raw->data,ptr,size); /* copy the data */
    _SWIG_Lua_AddMetatable(L,type); /* add metatable */
}
    
/* converts a packed userdata. user for member fn pointers only */
SWIGRUNTIME int  SWIG_Lua_ConvertPacked(lua_State* L,int index,void* ptr,size_t size,swig_type_info *type)
{
	swig_lua_rawdata* raw;
	swig_cast_info *cast;
	raw=(swig_lua_rawdata*)lua_touserdata(L,index);	/* get data */
	if (!raw) return SWIG_ERROR;	/* error */
    if (type==0 || type==raw->type) /* void* or identical type */
    {
        memcpy(ptr,raw->data,size); /* copy it */
        return SWIG_OK; /* ok */
    }
    return SWIG_ERROR;	/* error */
}

/* lua callable function to get the userdata's type */
SWIGRUNTIME int SWIG_Lua_type(lua_State* L)
{
	swig_lua_userdata* usr;
	if (!lua_isuserdata(L,1))	/* just in case */
		return 0;	/* nil reply */
	usr=(swig_lua_userdata*)lua_touserdata(L,1);	/* get data */
	lua_pushstring(L,usr->type->name);
	return 1;
}

/* lua callable function to compare userdata's value
the issue is that two userdata may point to the same thing
but to lua, they are different objects */
SWIGRUNTIME int SWIG_Lua_equal(lua_State* L)
{
	int result;
	swig_lua_userdata *usr1,*usr2;
	if (!lua_isuserdata(L,1) || !lua_isuserdata(L,2))	/* just in case */
		return 0;	/* nil reply */
	usr1=(swig_lua_userdata*)lua_touserdata(L,1);	/* get data */
	usr2=(swig_lua_userdata*)lua_touserdata(L,2);	/* get data */
	/*result=(usr1->ptr==usr2->ptr && usr1->type==usr2->type); only works if type is the same*/
	result=(usr1->ptr==usr2->ptr);
        lua_pushboolean(L,result);
	return 1;
}


/* -----------------------------------------------------------------------------
 * global variable support code: class/struct typemap functions
 * ----------------------------------------------------------------------------- */

/* Install Constants */
SWIGINTERN void
SWIG_Lua_InstallConstants(lua_State* L, swig_lua_const_info constants[]) {
  int i;
  for (i = 0; constants[i].type; i++) {
    switch(constants[i].type) {
    case SWIG_LUA_INT:
      lua_pushstring(L,constants[i].name);
      lua_pushnumber(L,(lua_Number)constants[i].lvalue);
      lua_rawset(L,-3);
      break;
    case SWIG_LUA_FLOAT:
      lua_pushstring(L,constants[i].name);
      lua_pushnumber(L,(lua_Number)constants[i].dvalue);
      lua_rawset(L,-3);
      break;
    case SWIG_LUA_CHAR:
      lua_pushstring(L,constants[i].name);
      lua_pushfstring(L,"%c",(char)constants[i].lvalue);
      lua_rawset(L,-3);
      break;
    case SWIG_LUA_STRING:
      lua_pushstring(L,constants[i].name);
      lua_pushstring(L,(char *) constants[i].pvalue);
      lua_rawset(L,-3);
      break;
    case SWIG_LUA_POINTER:
      lua_pushstring(L,constants[i].name);
      SWIG_NewPointerObj(L,constants[i].pvalue, *(constants[i]).ptype,0);
      lua_rawset(L,-3);
      break;
    case SWIG_LUA_BINARY:
    /* TODO?? */
/*      obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype)); */
      break;
    default:
      break;
    }
  }
}

/* storing/access of swig_module_info */
SWIGRUNTIME swig_module_info *
SWIG_Lua_GetModule(lua_State* L) {
  swig_module_info *ret = 0;
  lua_pushstring(L,"swig_runtime_data_type_pointer" SWIG_RUNTIME_VERSION SWIG_TYPE_TABLE_NAME);
  lua_rawget(L,LUA_REGISTRYINDEX);
  if (lua_islightuserdata(L,-1))
  	ret=(swig_module_info*)lua_touserdata(L,-1);
  lua_pop(L,1);	/* tidy */
  return ret;
}

SWIGRUNTIME void
SWIG_Lua_SetModule(lua_State* L, swig_module_info *module) {
  /* add this all into the Lua registry: */
  lua_pushstring(L,"swig_runtime_data_type_pointer" SWIG_RUNTIME_VERSION SWIG_TYPE_TABLE_NAME);
  lua_pushlightuserdata(L,(void*)module);
  lua_rawset(L,LUA_REGISTRYINDEX);
}

#ifdef __cplusplus
}
#endif

/* ------------------------------ end luarun.swg  ------------------------------ */


/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_UInt swig_types[0]
#define SWIGTYPE_WORD swig_types[1]
#define SWIGTYPE_WPARAM swig_types[2]
#define SWIGTYPE_p_CAccShopProcess swig_types[3]
#define SWIGTYPE_p_CAnimatedEntity swig_types[4]
#define SWIGTYPE_p_CAntiHack swig_types[5]
#define SWIGTYPE_p_CBatBubbleControl swig_types[6]
#define SWIGTYPE_p_CBigMap swig_types[7]
#define SWIGTYPE_p_CEntityBase swig_types[8]
#define SWIGTYPE_p_CGenerationProcess swig_types[9]
#define SWIGTYPE_p_CImage swig_types[10]
#define SWIGTYPE_p_CMenuAutoWalkProcess swig_types[11]
#define SWIGTYPE_p_CMenuBankService swig_types[12]
#define SWIGTYPE_p_CMenuBuffIconProcess swig_types[13]
#define SWIGTYPE_p_CMenuFriendProcess swig_types[14]
#define SWIGTYPE_p_CMenuGiftBox swig_types[15]
#define SWIGTYPE_p_CMenuGivenProcess swig_types[16]
#define SWIGTYPE_p_CMenuGuildProcess swig_types[17]
#define SWIGTYPE_p_CMenuHawkerProcess swig_types[18]
#define SWIGTYPE_p_CMenuHelpProcess swig_types[19]
#define SWIGTYPE_p_CMenuItemProcess swig_types[20]
#define SWIGTYPE_p_CMenuMixProcess swig_types[21]
#define SWIGTYPE_p_CMenuOnlineShopProcess swig_types[22]
#define SWIGTYPE_p_CMenuPartnerCultivationUpProcess swig_types[23]
#define SWIGTYPE_p_CMenuPartnerProcess swig_types[24]
#define SWIGTYPE_p_CMenuPetProcess swig_types[25]
#define SWIGTYPE_p_CMenuQuestJournal swig_types[26]
#define SWIGTYPE_p_CMenuQuestLogProcess swig_types[27]
#define SWIGTYPE_p_CMenuRankProcess swig_types[28]
#define SWIGTYPE_p_CMenuSellYuanBaoProcess swig_types[29]
#define SWIGTYPE_p_CMenuSkillProcess swig_types[30]
#define SWIGTYPE_p_CMenuSystemSetting swig_types[31]
#define SWIGTYPE_p_CMenuTargetEquipProcess swig_types[32]
#define SWIGTYPE_p_CMenuTargetProcess swig_types[33]
#define SWIGTYPE_p_CMenuTitleProcess swig_types[34]
#define SWIGTYPE_p_CMenuTradingProcess swig_types[35]
#define SWIGTYPE_p_CMenuWareHouseProcess swig_types[36]
#define SWIGTYPE_p_CPointsShopProcess swig_types[37]
#define SWIGTYPE_p_CQuestionProcess swig_types[38]
#define SWIGTYPE_p_CRelationSystemProcess swig_types[39]
#define SWIGTYPE_p_CTeamDescription swig_types[40]
#define SWIGTYPE_p_CWantedProcess swig_types[41]
#define SWIGTYPE_p_CWeaponsRank swig_types[42]
#define SWIGTYPE_p_ChatLst swig_types[43]
#define SWIGTYPE_p_ChatPool swig_types[44]
#define SWIGTYPE_p_FSOUND_Manager swig_types[45]
#define SWIGTYPE_p_FSound swig_types[46]
#define SWIGTYPE_p_RECT swig_types[47]
#define SWIGTYPE_p_StringA swig_types[48]
#define SWIGTYPE_p_StringW swig_types[49]
#define SWIGTYPE_p_UIAniIcon swig_types[50]
#define SWIGTYPE_p_UIButton swig_types[51]
#define SWIGTYPE_p_UIChatEditPanel swig_types[52]
#define SWIGTYPE_p_UIChatItem swig_types[53]
#define SWIGTYPE_p_UIChatLink swig_types[54]
#define SWIGTYPE_p_UIChatPanel swig_types[55]
#define SWIGTYPE_p_UIChatRow swig_types[56]
#define SWIGTYPE_p_UIChatString swig_types[57]
#define SWIGTYPE_p_UICheckBox swig_types[58]
#define SWIGTYPE_p_UIDynamicText swig_types[59]
#define SWIGTYPE_p_UIEditBox swig_types[60]
#define SWIGTYPE_p_UIEditBoxEx swig_types[61]
#define SWIGTYPE_p_UIImage swig_types[62]
#define SWIGTYPE_p_UIItem swig_types[63]
#define SWIGTYPE_p_UILinerImage swig_types[64]
#define SWIGTYPE_p_UILinerImageV swig_types[65]
#define SWIGTYPE_p_UIListBox swig_types[66]
#define SWIGTYPE_p_UIManager swig_types[67]
#define SWIGTYPE_p_UIMiniMap swig_types[68]
#define SWIGTYPE_p_UIPanel swig_types[69]
#define SWIGTYPE_p_UIPanelEx swig_types[70]
#define SWIGTYPE_p_UIPopUpMenu swig_types[71]
#define SWIGTYPE_p_UIScrollBarH swig_types[72]
#define SWIGTYPE_p_UIScrollBarV swig_types[73]
#define SWIGTYPE_p_UIScrollListBox swig_types[74]
#define SWIGTYPE_p_UIStaticText swig_types[75]
#define SWIGTYPE_p_UInt swig_types[76]
#define SWIGTYPE_p_WORD swig_types[77]
#define SWIGTYPE_p_WPARAM swig_types[78]
#define SWIGTYPE_p_bool swig_types[79]
#define SWIGTYPE_p_int swig_types[80]
#define SWIGTYPE_p_lua_State swig_types[81]
#define SWIGTYPE_p_short swig_types[82]
#define SWIGTYPE_p_signed_char swig_types[83]
#define SWIGTYPE_p_size_t swig_types[84]
#define SWIGTYPE_p_unsigned_char swig_types[85]
#define SWIGTYPE_p_unsigned_short swig_types[86]
#define SWIGTYPE_p_wchar_t swig_types[87]
#define SWIGTYPE_size_t swig_types[88]
static swig_type_info *swig_types[90];
static swig_module_info swig_module = {swig_types, 89, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#define SWIG_init    Luaui_Init
#define SWIG_name    "LuaUI"
#define SWIG_import  luaopen_LuaUI


// LxC: fix link error LNK2005: _SWIG_init_user already defined ...
// http://lua.2524044.n2.nabble.com/Using-multiple-modules-with-Swig-gt-Lua-td7585945.html
#define SWIG_init_user SWIG_init_user_LuaUI

#include "Common.h"
#include "QGL.h"
#include "UI.h"
#include "PlayOggVorbis.h"
#include "EntityBase.h"
#include "AnimatedEntity.h"
#include "MenuSkillProcess.h"
#include "MenuQuestLogProcess.h"
#include "BatBubbleControl.h"
#include "CharacterControl.h"
#include "MenuPartnerProcess.h"
#include "MenuGivenProcess.h"
#include "MenuItemProcess.h"
#include "MenuTargetProcess.h"
#include "BigMap.h"
#include "MenuBuffIconProcess.h"
#include "MenuSystemSetting.h"
#include "MenuFriendProcess.h"
#include "MenuTradingProcess.h"
#include "MenuHelpProcess.h"
#include "MenuOnlineShopProcess.h"
#include "MenuRankProcess.h"
#include "MenuPetProcess.h"
#include "MenuMixProcess.h"
#include "MenuTitleProcess.h"
#include "MenuCharProcess.h"
#include "AntiHack.h"
#include "MenuHawkerProcess.h"
#include "MenuGuildProcess.h"
#include "MenuBankService.h"
#include "Common/common_binary.h"
#include "MenuGiftBox.h"
#include "MenuQuestJournal.h"

#include "WeaponsRank.h"
#include "TeamDescription.h"
//#include "WeaponsPointSystem.h"


#include "QuestionProcess.h"
#include "MenuWareHouseProcess.h"
#include "MenuAutoWalkProcess.h"
#include "MenuSellYuanBaoProcess.h"
#include "MenuTargetEquipProcess.h"
#include "RelationSystemProcess.h"
#include "WantedProcess.h"
#include "GenerationProcess.h"
#include "MenuPartnerCultivationUpProcess.h"
#include "AccShopProcess.h"
#include "PointsShopProcess.h"

UIManager *GetUIManager();
void GetPlayerPos(int &X, int &Y);

UInt32 GetMapWidth();
UInt32 GetMapHeight();

void QGLApplicationLogin();
void OpenSubWindow();
void CloseSubWindow();

void BattleAction();
void BattleSkill();
void BattleSpecial();
void BattleItem();
void BattleDefence();
void BattleFriend();
void BattleProtect();
void BattleCatch();
void BattleHelp();
void BattleAuto();
void BattleEscape();
void CancelAuto();
void BattleJoin();
void BattleWatchLeave();

void SetCharacterIndex(Int32 Index);
void SetLineIndex(Int32 Index);

void BBAttack();
void BBTrade();
void BBGive();
void BBParty();
void BBChar();
void BBFriend();
void BBItem();
void BBSkill();
void BBHousen();
void BBMission();
void BBFriendShip();
void BBEmotion();
void BBSystem();
void BBGeneration();

void PartyPrivateCall(int memPos);
void PartyKick(int memPos);
void PartyPromote(int memPos);
void PartyQuit();

void PartySelectLineup();
void PartySetKeyPos(int iKeyPos);
void UpdateLineupSelectMenu();
void ForgetLearnedLineup();
void PartySetSelectLineupResualt();
void OpenLineupInfoView();
void LeaveTemporarily();
void ReturnParty();

void UpdateCharMenu();

void UpdateBattleItemMenu(bool wine = false);

void CopyToShortCut(int itemPos, int targetPos);
void CopySkillToShortCut(int SkillID, int targetPos);
void  DelShortCutSlot(int Ref, int Type);
Int32 GetShortCutRefType(Int32 Index);
Int32 GetShortCutRefNum(Int32 Index);
void EquipItemUse(int itemPos);
void BattleItemUse(int itemPos);
void MoveEquipToBag(int itemPos, int targetPos);
void MoveToBag(int itemPos, int bag, int target = -1);
void DropItem(int itemPos, int dropSize);

void ChangeChannel(int i);
void ReceiveChannel(int i);
void RejectChannel(int i);
void InitChannelEnable();
bool IsChannelMsg(PCSTRING msg, int Type);
void AddChatIconToPanel();
void AddChatIconToEditLine();
void ChangeEditLineColor(int index);
bool GetLisentToChannel(int index);
void SendPrivateMessageTo(PCSTRINGW Name);
void InitRecentChatListBox();

void UpdateClockPanel(bool bInit);
void UpdateRightUpTimeInfo();

void MBChangeNextPage();
void PlayerChooseResult(int opt);

void BatDialogNextPage();
void PlayerChooseResultInBat(int opt);

bool HasParty();
bool HasTempParty();
void UpdatePartyPanel();
void CopyImageForUIImage(PCSTRINGA src, PCSTRINGA des);

void BattleItemDrag(int itemPos);
void BattleItemMove(int SrcBagIndex, int DesBagIndex);

bool HasItem(int itemPos);
int GetMaxStack(int itemPos);
void SetDropItemText(int itemPos, PCSTRINGA srcStaticText);
void ShowErrMessage(PCSTRINGA pText, bool center = false);
bool InviteComing();

bool HasCharacter(Int32 Index);
void ShowPartyByIndex(int index=0);
void InviteConfirm(bool confirm);
int GetPartyListSize();
void UpdateApplicationMenu();
void JoinConfirm(int index, bool confirm);
void ShowOtherParty(int next);
void ClearAllRequest();
void ApplicantPanelScroll(int scroll);

void BattleJoinConfirm(int index, bool confirm);
void JoinBattleClearAllRequestUp();
void JoinBattleScroll(int scroll);
void UpdateJoinBattleMenu();

bool IsJoinRequestExist();
void ShowCreateCharacter(int sex = 0, int cclass = 1);

void ChangeCharacterHairCol(bool next);
void ChangeCharacterHead(bool next);
void ChangeCharacterCloth(bool next);
void ChangeCharacterClothCol(bool next);

void CreateCharacter();
PCSTRINGW GetTempMsg();
bool IsFullScreen();
void SetHighLightInLogin(int index, bool highLight);
bool IsBattle();
bool IsPvP();

UInt32 GetBGMVolume();
UInt32 GetSFXVolume();

void LoadLua(PCSTRINGA luafilename);

void CharacterLevelUp();
void CharAttOk();
void CharAttUp(int Index, int Count);
void CharAttDown(int Index, int Count);

void ShowMidMap();
void MidMapMoveCharTo(int index);

void MidMapMoveOut();
void ResetMidMapValue();
void MidMapShowName(int index);
void MidMapClickNPC();
void UpdateSearchList(int index);

void NPCSearchListUpOrDown(int up);

void MidMapShowLocationBox();
void NPCSearchClickList(int index);
void PartySearchClickList(int index);
void CharSearchClickList(int index);
void ShowLeaderInfo();
void ShowLeaderInfoChar();

void SearchNPCList(int lang);

void WeaponsRankSearchList(int lang);

void ShowPartySearchList(int searchBy);
void ShowCharSearchList(int searchBy);

void OnPartySearchPagePrev();
void OnCharSearchPagePrev();

void OnPartySearchPageNext();
void OnCharSearchPageNext();

void OnJoinPartySearch();
void OnJoinCharSearch();

void OnShowPartyInfo();
void OnShowCharInfo();
bool IsIndoor();


void ConfirmPK();
void CancelPK();
void ConfirmMatch();
void CancelMatch();

void PartnerAttrUp(int index);
void PartnerAttrDown(int index);
void PartnerAddConfirm();
bool haveParty();
bool IsLeader();
bool GetHelpEnable();
bool GetActionEnable();
bool GetSkillEnable();
bool GetItemEnable();
bool GetDefenceEnable();
bool GetFriendEnable();
bool GetProtectEnable();
bool GetCatchEnable();
bool GetAutoEnable();
bool GetEscapeEnable();

bool GetPartnerSkillEnable();
bool GetPartnerItemEnable();
bool GetPartnerDefenceEnable();
bool GetPartnerProtectEnable();
bool GetPartnerEscapeEnable();

void DeleteCharacter();
void RetrieveCharacter(UInt32 Index);
Boolean CheckCharacterFrozen(UInt32 index);

void NPCSearchListScroll();

void UpdateShopItemDetail(int pos);
//void UpdateQuestItemDetail(int pos);
void ResetSearchValue();
void ShopOpenConfirmBox(int pos = -1, int nMode = 2);
void ShopEnterItemCount(bool bSell, int nPos);
void ShopSetItemCount(bool bMax);
void ShopAdjustItemCount(bool bInc);
void ShopConfirmAction();
void ShopResetAction();
void ShopDragItemAction(int pos);
void ShopOnClickSellButton();
void ShopCloseMainMenu();
void ShopOnEditBoxKeyUp(int keyCode);
void ShopUpdatePrice();


void InitLoginScreen();
void SaveLoginDefault();
UInt32 GetDefaultCharacter();
void SetDefaultCharacter(int pos);
UInt32 GetDefaultLine();
void SetDefaultLine(int pos);

void SetAniStateInLogin(int index, int state);
void ShowPartyButton();

void BattlePartnerEscape();
void TestingFunction();
bool IsBattlePartnerTurn();

void LockItem(UInt32 index, UInt32 assetType);
void UnlockItem(UInt32 index, UInt32 assetType);
void SetLockCursor(Boolean lock);
void SetUnLockCursor(Boolean unlock);

UIManager* GetSubUIManager();
CMenuSkillProcess * GetSkillProcess();
void CheckCharacterName();
CMenuQuestLogProcess * GetQuestLogProcess();
CMenuPartnerProcess * GetPartnerProcess();
CMenuGivenProcess* GetGivenProcess();
CMenuItemProcess* GetItemProcess();
CMenuTargetProcess* GetMenuTargetProcess();
CBigMap* GetBigMap();
CMenuBuffIconProcess* GetMenuBuffIconProcess();
CMenuSystemSetting* GetMenuSystemSetting();
CMenuFriendProcess* GetMenuFriendProcess();
CMenuTradingProcess* GetTradingProcess();
CMenuBankService* GetBankProcess();
CMenuHelpProcess* GetMenuHelpProcess();
CMenuOnlineShopProcess* GetOnlineShopProcess();
CMenuRankProcess* GetMenuRankProcess();
CMenuPetProcess* GetMenuPetProcess();
CMenuMixProcess* GetMixProcess();
CMenuTitleProcess* GetTitleProcess();
CAntiHack* GetAntiHackProcess();
CMenuHawkerProcess* GetHawkerProcess();
CMenuGuildProcess* GetMenuGuildProcess();
CMenuGiftBox* GetGiftBoxProcess();
CMenuQuestJournal* GetQuestJournalProcess();

CWeaponsRank* GetWeaponsRankProcess();
CTeamDescription* GetTeamDescriptionProcess();
//CWeaponsPointSystem* GetWeaponsPointSystemProcess();


CQuestionProcess* GetQuestionProcess();
CMenuWareHouseProcess* GetWareHouseProcess();
CMenuAutoWalkProcess* GetAutoWalkProcess();
CMenuSellYuanBaoProcess* GetSellYBProcess();
CMenuTargetEquipProcess* GetTargetEquipProcess();
CRelationSystemProcess* GetRelationSystemProcess();
CWantedProcess* GetWantedProcess();
CGenerationProcess* GetGenerationProcess();
CMenuPartnerCultivationUpProcess* GetPartnerCultivationUpProcess();
CAccShopProcess* GetAccShopProcess();
CPointsShopProcess* GetPointsShopProcess();


void AddXMLFile2UIManger(PCSTRINGA Filename);
void UIMangerLoadUI(UIManager *pUIManager, PCSTRINGA Filename);

void FormatToSkillString(PCSTRINGA Text);

void SkillFail(PCSTRINGA Text);

void SubChatScroll();

bool CanLevelUp();

void SelectItemPartner(UInt8 index);

void UpdateChangeLine();
void ApplicantPrivateCall(int index);
bool IsTalking();

void ChangeMapLine(UInt8 lineIndex);
void ConfirmChangeLineSec();
void TeammatePrivateCall(int index);
void TeammateKick(int index);
void TeammatePromote(int index);
void ItemScroll(int index);
void OnCloseBattleItem();

void QuestCancelCancel();
void QuestCancelConfirm();
void ShowRemoveCharacterName();

bool IsOpenSkillShop();

void SetTempResult(double result);
double GetTempResult();

void ChangeFriendIcon();
void CloseFriendBox();
void CloseQuestionBox();
void OpenFactionDetail();
void LuaSetBPShortCutFlag(bool Flag);
bool LuaGetBPShortCutFlag();
void CreateCharRotate(bool left);

void OpenFriendChatBox(PSTRINGA msg, PSTRINGA function);
void OpenGuildBox();
void OpenDeleteMemberGuildBox();
void OpenLeaveGuildBox();
void ClsoeGuildBox();
UIPanel *LuaCreateUIPanel();
UIPanelEx *LuaCreateUIPanelEx();
UIImage *LuaCreateUIImage();
UIStaticText *LuaCreateUIStaticText();
UIButton *LuaCreateUIButton();
UICheckBox *LuaCreateUICheckBox();
UIListBox *LuaCreateUIListBox();
UIPopUpMenu *LuaCreateUIPopUpMenu();
UIScrollBarH *LuaCreateUIScrollBarH();
UIScrollBarV *LuaCreateUIScrollBarV();
UIScrollListBox *LuaCreateUIScrollListBox();
UIEditBox *LuaCreateUIEditBox();
UIChatPanel *LuaCreateUIChatPanel();
UIChatString *LuaCreateUIChatString();
UIChatLink *LuaCreateUIChatLink();
UIMiniMap *LuaCreateUIMiniMap();
UILinerImage *LuaCreateUILinerImage();
UILinerImageV *LuaCreateUILinerImageV();
UIAniIcon *LuaCreateUIAniIcon();

void RunNewGame();
void OpenHomePage();
void ChangeChatIcon(int index);

UInt32 LuaGetChar_id();
UInt32 LuaGetBag(UInt32 itemPos);
PCSTRING LuaGetItemName(UInt32 itemPos);
UInt32 LuaGetItemColor(UInt32 itemPos);
UInt32 GetFirstNum(PCSTRINGW Str);
UInt32 GetLastNum(PCSTRINGW Str);
void LuaSetShopSkillFlag(bool flag);
bool LuaGetShopSkillFlag();
bool CharSetMapPos(PCSTRINGW pStr);
bool CharOpenQuestMenu(PCSTRINGW pStr);
bool IsHawking();
UInt32 LuaGetCharPosX();
UInt32 LuaGetCharPosY();
PCSTRING LuaGetPartnerName(UInt32 Index);
PCSTRING LuaGetPartnerOriginName(UInt32 Index);
UInt32 LuaGetPartnerID(UInt32 Index);
PCSTRING LuaGetPetName(UInt32 Index);
PCSTRING LuaGetPetOriginName(UInt32 Index);
UInt32 LuaGetPetID(UInt32 Index);
void LuaAddAlertBox(PCSTRINGA Msg, bool ButtonFlag);
PCSTRING LuaGetLineTextName();

void ShowPartyPopUp(UInt8 index);
void SelectPartyPopUp(UInt8 popSelect, UInt8 index);
void ShowTeammatePopUp(UInt8 index);
void AutoAcceptCheckBox(bool on);

void SelectTeammatePopUp(UInt8 popSelect, UInt8 index);
void SetChangePos(UInt8 index);
void ChangePartyDesc();
void StopCharacter();
void ShowAlertOK();
void ConfirmReplyString();
void ReplyStringNULL();
bool IsCurrMsgIcon(int index);
void SetHotKeyEnable(bool value);
void OpenWebLink();
void SetWebLink(PCSTRINGA link, int typeno);
void CharEatFastFood(UInt8 foodType);

#pragma warning( disable : 4101 4102 4800 4101)

bool CheckShiftDown();


template <typename T>
T ConvertVoidto(void *Ptr)
{
	return (T)(Ptr);
}



int Div(int a, int b)
{
	return (a / b);
}

inline UInt32 DivUInt32(UInt32 a, UInt32 b)
{
	return (a / b);
}


inline bool LAnd(bool a, bool b)
{
	return (a && b);
}


inline bool LOr(bool a, bool b)
{
	return (a || b);
}

inline int LMod(int a, int b)
{
	return (a % b);
}


#define  DEF_LuaPush(type)									\
void LuaPush(lua_State *L, type *Ptr)						\
{															\
	SWIG_NewPointerObj(L, Ptr, SWIGTYPE_p_##type, 0);		\
}


DEF_LuaPush(UIItem)
DEF_LuaPush(UIStaticText)
DEF_LuaPush(UIPopUpMenu)
DEF_LuaPush(UIButton)
DEF_LuaPush(UIEditBox)
DEF_LuaPush(UIEditBoxEx)
DEF_LuaPush(UIScrollBarV)
DEF_LuaPush(UIChatItem)
DEF_LuaPush(UIChatLink)
DEF_LuaPush(UIChatRow)
DEF_LuaPush(UIChatPanel)
DEF_LuaPush(UIChatEditPanel)
DEF_LuaPush(UIMiniMap)
DEF_LuaPush(UIPanel)
DEF_LuaPush(UIImage)
DEF_LuaPush(UILinerImage)
DEF_LuaPush(UIPanelEx)
DEF_LuaPush(UICheckBox)
DEF_LuaPush(UIManager)
DEF_LuaPush(UIAniIcon);

//DEF_LuaPush(ALSound)
DEF_LuaPush(FSOUND_Manager)
//DEF_LuaPush(ALOggPlayer)

DEF_LuaPush(CEntityBase)
DEF_LuaPush(CAnimatedEntity)
DEF_LuaPush(ChatLst)

DEF_LuaPush(CMenuSkillProcess)
DEF_LuaPush(CMenuQuestLogProcess)
DEF_LuaPush(CMenuPartnerProcess)
DEF_LuaPush(CMenuGivenProcess)
DEF_LuaPush(CMenuItemProcess)
DEF_LuaPush(CBigMap)


DEF_LuaPush(CBatBubbleControl)

DEF_LuaPush(CMenuBuffIconProcess)
DEF_LuaPush(CMenuSystemSetting)
DEF_LuaPush(CMenuTradingProcess)
DEF_LuaPush(CMenuBankService)
DEF_LuaPush(CMenuOnlineShopProcess)
DEF_LuaPush(CMenuMixProcess)
DEF_LuaPush(CMenuTitleProcess)
DEF_LuaPush(CAntiHack)

DEF_LuaPush(CMenuHawkerProcess)
DEF_LuaPush(CMenuGiftBox)
DEF_LuaPush(CMenuQuestJournal)

DEF_LuaPush(CWeaponsRank)
DEF_LuaPush(CTeamDescription)
//DEF_LuaPush(CWeaponsPointSystem)


DEF_LuaPush(CQuestionProcess)
DEF_LuaPush(CMenuWareHouseProcess)
DEF_LuaPush(CMenuAutoWalkProcess)
DEF_LuaPush(CMenuSellYuanBaoProcess)
DEF_LuaPush(CMenuTargetEquipProcess)
DEF_LuaPush(CRelationSystemProcess)
DEF_LuaPush(CWantedProcess)
DEF_LuaPush(CGenerationProcess)
DEF_LuaPush(CMenuPartnerCultivationUpProcess)

#ifdef __cplusplus
extern "C" {
#endif
static int _wrap_HexToDWORD(lua_State* L) {
  int SWIG_arg = -1;
  char *arg1 = (char *) 0 ;
  unsigned int result;
  
  if(!lua_isstring(L,1)) SWIG_fail_arg(1);
  arg1 = (char *)lua_tostring(L, 1);
  result = (unsigned int)HexToDWORD((char const *)arg1);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_UIItem(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *result = 0 ;
  
  result = (UIItem *)new UIItem();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIItem,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UIItem(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("delete_UIItem",1,SWIGTYPE_p_UIItem);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_Create(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_Create",1,SWIGTYPE_p_UIItem);
  }
  
  (arg1)->Create();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_Dispose(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_Dispose",1,SWIGTYPE_p_UIItem);
  }
  
  (arg1)->Dispose();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_Validate(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  CImage *arg2 = (CImage *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_Validate",1,SWIGTYPE_p_UIItem);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_CImage,0))){
    SWIG_fail_ptr("UIItem_Validate",2,SWIGTYPE_p_CImage);
  }
  
  (arg1)->Validate(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_Invalidate(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_Invalidate",1,SWIGTYPE_p_UIItem);
  }
  
  (arg1)->Invalidate();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_Update(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_Update",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->Update(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_Render(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  CImage *arg2 = (CImage *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_Render",1,SWIGTYPE_p_UIItem);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_CImage,0))){
    SWIG_fail_ptr("UIItem_Render",2,SWIGTYPE_p_CImage);
  }
  
  (arg1)->Render(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetPos(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  int arg2 ;
  int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetPos",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->SetPos(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_MovePos(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  int arg2 ;
  int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_MovePos",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->MovePos(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_GetX(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_GetX",1,SWIGTYPE_p_UIItem);
  }
  
  result = (int)(arg1)->GetX();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_GetY(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_GetY",1,SWIGTYPE_p_UIItem);
  }
  
  result = (int)(arg1)->GetY();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_GetOffsetX(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_GetOffsetX",1,SWIGTYPE_p_UIItem);
  }
  
  result = (unsigned int)(arg1)->GetOffsetX();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_GetOffsetY(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_GetOffsetY",1,SWIGTYPE_p_UIItem);
  }
  
  result = (unsigned int)(arg1)->GetOffsetY();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_GetWidth(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_GetWidth",1,SWIGTYPE_p_UIItem);
  }
  
  result = (unsigned int)(arg1)->GetWidth();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_GetHeight(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_GetHeight",1,SWIGTYPE_p_UIItem);
  }
  
  result = (unsigned int)(arg1)->GetHeight();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_IsPickUp(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_IsPickUp",1,SWIGTYPE_p_UIItem);
  }
  
  result = (unsigned int)(arg1)->IsPickUp();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_PickUp(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_PickUp",1,SWIGTYPE_p_UIItem);
  }
  
  (arg1)->PickUp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_UnPickUp(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_UnPickUp",1,SWIGTYPE_p_UIItem);
  }
  
  (arg1)->UnPickUp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetOffsetXY(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  int arg2 ;
  int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetOffsetXY",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->SetOffsetXY(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetOffsetXYOnly(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  int arg2 ;
  int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetOffsetXYOnly",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->SetOffsetXYOnly(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetOffsetPos(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  int arg2 ;
  int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetOffsetPos",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->SetOffsetPos(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetLuaState(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  lua_State *arg2 = (lua_State *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetLuaState",1,SWIGTYPE_p_UIItem);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_lua_State,0))){
    SWIG_fail_ptr("UIItem_SetLuaState",2,SWIGTYPE_p_lua_State);
  }
  
  (arg1)->SetLuaState(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetFocus(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetFocus",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetFocus(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_GetFocus(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_GetFocus",1,SWIGTYPE_p_UIItem);
  }
  
  result = (bool)(arg1)->GetFocus();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_GetHotSpot(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  UIItem *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_GetHotSpot",1,SWIGTYPE_p_UIItem);
  }
  
  result = (UIItem *)(arg1)->GetHotSpot();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIItem,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_GetMouseOver(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  UIItem *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_GetMouseOver",1,SWIGTYPE_p_UIItem);
  }
  
  result = (UIItem *)(arg1)->GetMouseOver();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIItem,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetName(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetName",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->SetName((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetLastKey(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  WPARAM arg2 ;
  WPARAM *argp2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isuserdata(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetLastKey",1,SWIGTYPE_p_UIItem);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_WPARAM,0))){
    SWIG_fail_ptr("UIItem_SetLastKey",2,SWIGTYPE_WPARAM);
  }
  arg2 = *argp2;
  
  (arg1)->SetLastKey(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_GetLastKey(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  WPARAM result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_GetLastKey",1,SWIGTYPE_p_UIItem);
  }
  
  result = (arg1)->GetLastKey();
  SWIG_arg=0;
  {
    WPARAM * resultptr = new WPARAM((WPARAM &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_WPARAM,1); SWIG_arg++;
  }
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetLastWndMsg(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetLastWndMsg",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetLastWndMsg(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_GetLastWndMsg(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_GetLastWndMsg",1,SWIGTYPE_p_UIItem);
  }
  
  result = (unsigned int)(arg1)->GetLastWndMsg();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetEnable(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetEnable",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetEnable(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_IsEnable(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_IsEnable",1,SWIGTYPE_p_UIItem);
  }
  
  result = (bool)(arg1)->IsEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_CheckName__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  StringA *arg2 = 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isuserdata(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_CheckName",1,SWIGTYPE_p_UIItem);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_StringA,0))){
    SWIG_fail_ptr("UIItem_CheckName",2,SWIGTYPE_p_StringA);
  }
  
  result = (bool)(arg1)->CheckName(*arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_CheckName__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_CheckName",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  result = (bool)(arg1)->CheckName((char const *)arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_CheckName(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_UIItem, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_StringA, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_UIItem_CheckName__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_UIItem, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_UIItem_CheckName__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'UIItem_CheckName'");
  lua_error(L);return 0;
}


static int _wrap_UIItem_Equal(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  UIItem *arg2 = (UIItem *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_Equal",1,SWIGTYPE_p_UIItem);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_Equal",2,SWIGTYPE_p_UIItem);
  }
  
  result = (bool)(arg1)->Equal(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetNotDetected(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetNotDetected",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetNotDetected(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetDetectRect__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetDetectRect",1,SWIGTYPE_p_UIItem);
  }
  
  (arg1)->SetDetectRect();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetDetectRect__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetDetectRect",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  arg4 = (unsigned int)lua_tonumber(L, 4);
  arg5 = (unsigned int)lua_tonumber(L, 5);
  (arg1)->SetDetectRect(arg2,arg3,arg4,arg5);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetDetectRect(lua_State* L) {
  int argc;
  int argv[6]={
    1,2,3,4,5,6
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_UIItem, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_UIItem_SetDetectRect__SWIG_0(L);
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_UIItem, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_UIItem_SetDetectRect__SWIG_1(L);
            }
          }
        }
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'UIItem_SetDetectRect'");
  lua_error(L);return 0;
}


static int _wrap_UIItem_SetDragRect(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetDragRect",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  arg4 = (unsigned int)lua_tonumber(L, 4);
  arg5 = (unsigned int)lua_tonumber(L, 5);
  (arg1)->SetDragRect(arg2,arg3,arg4,arg5);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetColor(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetColor",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetColor(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetNext(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetNext",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->SetNext((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_GetNext(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  char *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_GetNext",1,SWIGTYPE_p_UIItem);
  }
  
  result = (char *)(arg1)->GetNext();
  SWIG_arg=0;
  lua_pushstring(L,(const char*)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetPrev(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetPrev",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->SetPrev((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_GetPrev(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  char *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_GetPrev",1,SWIGTYPE_p_UIItem);
  }
  
  result = (char *)(arg1)->GetPrev();
  SWIG_arg=0;
  lua_pushstring(L,(const char*)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetCanDrag(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetCanDrag",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetCanDrag(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetDetectImage(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetDetectImage",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetDetectImage(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_IsDelectImage(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_IsDelectImage",1,SWIGTYPE_p_UIItem);
  }
  
  result = (bool)(arg1)->IsDelectImage();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetRenderStyle(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetRenderStyle",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetRenderStyle(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_GetRenderStyle(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_GetRenderStyle",1,SWIGTYPE_p_UIItem);
  }
  
  result = (unsigned int)(arg1)->GetRenderStyle();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetTimeOutCount(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetTimeOutCount",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetTimeOutCount(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetTimeOutPreTime(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetTimeOutPreTime",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetTimeOutPreTime(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetTimeOutState(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  Int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetTimeOutState",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (Int)lua_tonumber(L, 2);
  (arg1)->SetTimeOutState(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetEnableTimeOutEvent(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetEnableTimeOutEvent",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetEnableTimeOutEvent(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_ResetTimer(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_ResetTimer",1,SWIGTYPE_p_UIItem);
  }
  
  (arg1)->ResetTimer();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_GetTimeOutCount(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_GetTimeOutCount",1,SWIGTYPE_p_UIItem);
  }
  
  result = (unsigned int)(arg1)->GetTimeOutCount();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_GetTimeOutPreTime(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_GetTimeOutPreTime",1,SWIGTYPE_p_UIItem);
  }
  
  result = (unsigned int)(arg1)->GetTimeOutPreTime();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_GetTimeOutState(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  Int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_GetTimeOutState",1,SWIGTYPE_p_UIItem);
  }
  
  result = (Int)(arg1)->GetTimeOutState();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_GetEnableTimeOutEvent(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_GetEnableTimeOutEvent",1,SWIGTYPE_p_UIItem);
  }
  
  result = (bool)(arg1)->GetEnableTimeOutEvent();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_GetUIItemPtr(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  UIItem *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_GetUIItemPtr",1,SWIGTYPE_p_UIItem);
  }
  
  result = (UIItem *)(arg1)->GetUIItemPtr();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIItem,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_GetLuaState(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  lua_State *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_GetLuaState",1,SWIGTYPE_p_UIItem);
  }
  
  result = (lua_State *)(arg1)->GetLuaState();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_lua_State,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_SetLuaFunc(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  unsigned int arg2 ;
  char *arg3 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isstring(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_SetLuaFunc",1,SWIGTYPE_p_UIItem);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  arg3 = (char *)lua_tostring(L, 3);
  (arg1)->SetLuaFunc(arg2,(char const *)arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIItem_ChangeParent(lua_State* L) {
  int SWIG_arg = -1;
  UIItem *arg1 = (UIItem *) 0 ;
  UIItem *arg2 = (UIItem *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_ChangeParent",1,SWIGTYPE_p_UIItem);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIItem_ChangeParent",2,SWIGTYPE_p_UIItem);
  }
  
  (arg1)->ChangeParent(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UIItem(void *obj) {
UIItem *arg1 = (UIItem *) obj;
delete arg1;
}
static swig_lua_method swig_UIItem_methods[] = {
    {"Create", _wrap_UIItem_Create}, 
    {"Dispose", _wrap_UIItem_Dispose}, 
    {"Validate", _wrap_UIItem_Validate}, 
    {"Invalidate", _wrap_UIItem_Invalidate}, 
    {"Update", _wrap_UIItem_Update}, 
    {"Render", _wrap_UIItem_Render}, 
    {"SetPos", _wrap_UIItem_SetPos}, 
    {"MovePos", _wrap_UIItem_MovePos}, 
    {"GetX", _wrap_UIItem_GetX}, 
    {"GetY", _wrap_UIItem_GetY}, 
    {"GetOffsetX", _wrap_UIItem_GetOffsetX}, 
    {"GetOffsetY", _wrap_UIItem_GetOffsetY}, 
    {"GetWidth", _wrap_UIItem_GetWidth}, 
    {"GetHeight", _wrap_UIItem_GetHeight}, 
    {"IsPickUp", _wrap_UIItem_IsPickUp}, 
    {"PickUp", _wrap_UIItem_PickUp}, 
    {"UnPickUp", _wrap_UIItem_UnPickUp}, 
    {"SetOffsetXY", _wrap_UIItem_SetOffsetXY}, 
    {"SetOffsetXYOnly", _wrap_UIItem_SetOffsetXYOnly}, 
    {"SetOffsetPos", _wrap_UIItem_SetOffsetPos}, 
    {"SetLuaState", _wrap_UIItem_SetLuaState}, 
    {"SetFocus", _wrap_UIItem_SetFocus}, 
    {"GetFocus", _wrap_UIItem_GetFocus}, 
    {"GetHotSpot", _wrap_UIItem_GetHotSpot}, 
    {"GetMouseOver", _wrap_UIItem_GetMouseOver}, 
    {"SetName", _wrap_UIItem_SetName}, 
    {"SetLastKey", _wrap_UIItem_SetLastKey}, 
    {"GetLastKey", _wrap_UIItem_GetLastKey}, 
    {"SetLastWndMsg", _wrap_UIItem_SetLastWndMsg}, 
    {"GetLastWndMsg", _wrap_UIItem_GetLastWndMsg}, 
    {"SetEnable", _wrap_UIItem_SetEnable}, 
    {"IsEnable", _wrap_UIItem_IsEnable}, 
    {"CheckName", _wrap_UIItem_CheckName}, 
    {"Equal", _wrap_UIItem_Equal}, 
    {"SetNotDetected", _wrap_UIItem_SetNotDetected}, 
    {"SetDetectRect", _wrap_UIItem_SetDetectRect}, 
    {"SetDragRect", _wrap_UIItem_SetDragRect}, 
    {"SetColor", _wrap_UIItem_SetColor}, 
    {"SetNext", _wrap_UIItem_SetNext}, 
    {"GetNext", _wrap_UIItem_GetNext}, 
    {"SetPrev", _wrap_UIItem_SetPrev}, 
    {"GetPrev", _wrap_UIItem_GetPrev}, 
    {"SetCanDrag", _wrap_UIItem_SetCanDrag}, 
    {"SetDetectImage", _wrap_UIItem_SetDetectImage}, 
    {"IsDelectImage", _wrap_UIItem_IsDelectImage}, 
    {"SetRenderStyle", _wrap_UIItem_SetRenderStyle}, 
    {"GetRenderStyle", _wrap_UIItem_GetRenderStyle}, 
    {"SetTimeOutCount", _wrap_UIItem_SetTimeOutCount}, 
    {"SetTimeOutPreTime", _wrap_UIItem_SetTimeOutPreTime}, 
    {"SetTimeOutState", _wrap_UIItem_SetTimeOutState}, 
    {"SetEnableTimeOutEvent", _wrap_UIItem_SetEnableTimeOutEvent}, 
    {"ResetTimer", _wrap_UIItem_ResetTimer}, 
    {"GetTimeOutCount", _wrap_UIItem_GetTimeOutCount}, 
    {"GetTimeOutPreTime", _wrap_UIItem_GetTimeOutPreTime}, 
    {"GetTimeOutState", _wrap_UIItem_GetTimeOutState}, 
    {"GetEnableTimeOutEvent", _wrap_UIItem_GetEnableTimeOutEvent}, 
    {"GetUIItemPtr", _wrap_UIItem_GetUIItemPtr}, 
    {"GetLuaState", _wrap_UIItem_GetLuaState}, 
    {"SetLuaFunc", _wrap_UIItem_SetLuaFunc}, 
    {"ChangeParent", _wrap_UIItem_ChangeParent}, 
    {0,0}
};
static swig_lua_attribute swig_UIItem_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UIItem_bases[] = {0};
swig_lua_class _wrap_class_UIItem = { "UIItem", &SWIGTYPE_p_UIItem,_wrap_new_UIItem, swig_delete_UIItem, swig_UIItem_methods, swig_UIItem_attributes, swig_UIItem_bases };

static int _wrap_UIStaticText_SetFont(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_SetFont",1,SWIGTYPE_p_UIStaticText);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  arg4 = (unsigned int)lua_tonumber(L, 4);
  (arg1)->SetFont((char const *)arg2,arg3,arg4);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_SetText(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_SetText",1,SWIGTYPE_p_UIStaticText);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("UIStaticText_SetText",2,SWIGTYPE_p_wchar_t);
  }
  
  (arg1)->SetText((wchar_t const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_LuaSetText(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_LuaSetText",1,SWIGTYPE_p_UIStaticText);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->LuaSetText((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_SetFontStyle(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_SetFontStyle",1,SWIGTYPE_p_UIStaticText);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetFontStyle(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_SetFontColor(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_SetFontColor",1,SWIGTYPE_p_UIStaticText);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetFontColor(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_SetShadowColor(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_SetShadowColor",1,SWIGTYPE_p_UIStaticText);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetShadowColor(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_SetImage(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_SetImage",1,SWIGTYPE_p_UIStaticText);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  (arg1)->SetImage(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_SetImageWH(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_SetImageWH",1,SWIGTYPE_p_UIStaticText);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  (arg1)->SetImageWH(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_FillImage(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_FillImage",1,SWIGTYPE_p_UIStaticText);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->FillImage(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_DrawFont(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_DrawFont",1,SWIGTYPE_p_UIStaticText);
  }
  
  (arg1)->DrawFont();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_Redraw(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_Redraw",1,SWIGTYPE_p_UIStaticText);
  }
  
  (arg1)->Redraw();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_SetPassword(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_SetPassword",1,SWIGTYPE_p_UIStaticText);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetPassword(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_ClearText(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_ClearText",1,SWIGTYPE_p_UIStaticText);
  }
  
  (arg1)->ClearText();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_GetText(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  wchar_t *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_GetText",1,SWIGTYPE_p_UIStaticText);
  }
  
  result = (wchar_t *)(arg1)->GetText();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_wchar_t,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_GetTextSize(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_GetTextSize",1,SWIGTYPE_p_UIStaticText);
  }
  
  result = (unsigned int)(arg1)->GetTextSize();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_Empty(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_Empty",1,SWIGTYPE_p_UIStaticText);
  }
  
  result = (bool)(arg1)->Empty();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_SetAlign(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_SetAlign",1,SWIGTYPE_p_UIStaticText);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetAlign(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_SetLinePitch(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_SetLinePitch",1,SWIGTYPE_p_UIStaticText);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetLinePitch(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_SetRenderStyle(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_SetRenderStyle",1,SWIGTYPE_p_UIStaticText);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetRenderStyle(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_GetRenderStyle(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_GetRenderStyle",1,SWIGTYPE_p_UIStaticText);
  }
  
  result = (unsigned int)(arg1)->GetRenderStyle();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_GetUIStaticText(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  UIStaticText *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_GetUIStaticText",1,SWIGTYPE_p_UIStaticText);
  }
  
  result = (UIStaticText *)(arg1)->GetUIStaticText();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIStaticText,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_SetNumOnly(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_SetNumOnly",1,SWIGTYPE_p_UIStaticText);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetNumOnly(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_SetSelColor(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_SetSelColor",1,SWIGTYPE_p_UIStaticText);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetSelColor(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_GetSelColor(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_GetSelColor",1,SWIGTYPE_p_UIStaticText);
  }
  
  result = (unsigned int)(arg1)->GetSelColor();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_SetSelStart(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_SetSelStart",1,SWIGTYPE_p_UIStaticText);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetSelStart(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_GetSelStart(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_GetSelStart",1,SWIGTYPE_p_UIStaticText);
  }
  
  result = (unsigned int)(arg1)->GetSelStart();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_SetSelEnd(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_SetSelEnd",1,SWIGTYPE_p_UIStaticText);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetSelEnd(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIStaticText_GetSelEnd(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("UIStaticText_GetSelEnd",1,SWIGTYPE_p_UIStaticText);
  }
  
  result = (unsigned int)(arg1)->GetSelEnd();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_UIStaticText(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *result = 0 ;
  
  result = (UIStaticText *)new UIStaticText();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIStaticText,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UIStaticText(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *arg1 = (UIStaticText *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIStaticText,0))){
    SWIG_fail_ptr("delete_UIStaticText",1,SWIGTYPE_p_UIStaticText);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UIStaticText(void *obj) {
UIStaticText *arg1 = (UIStaticText *) obj;
delete arg1;
}
static swig_lua_method swig_UIStaticText_methods[] = {
    {"SetFont", _wrap_UIStaticText_SetFont}, 
    {"SetText", _wrap_UIStaticText_SetText}, 
    {"LuaSetText", _wrap_UIStaticText_LuaSetText}, 
    {"SetFontStyle", _wrap_UIStaticText_SetFontStyle}, 
    {"SetFontColor", _wrap_UIStaticText_SetFontColor}, 
    {"SetShadowColor", _wrap_UIStaticText_SetShadowColor}, 
    {"SetImage", _wrap_UIStaticText_SetImage}, 
    {"SetImageWH", _wrap_UIStaticText_SetImageWH}, 
    {"FillImage", _wrap_UIStaticText_FillImage}, 
    {"DrawFont", _wrap_UIStaticText_DrawFont}, 
    {"Redraw", _wrap_UIStaticText_Redraw}, 
    {"SetPassword", _wrap_UIStaticText_SetPassword}, 
    {"ClearText", _wrap_UIStaticText_ClearText}, 
    {"GetText", _wrap_UIStaticText_GetText}, 
    {"GetTextSize", _wrap_UIStaticText_GetTextSize}, 
    {"Empty", _wrap_UIStaticText_Empty}, 
    {"SetAlign", _wrap_UIStaticText_SetAlign}, 
    {"SetLinePitch", _wrap_UIStaticText_SetLinePitch}, 
    {"SetRenderStyle", _wrap_UIStaticText_SetRenderStyle}, 
    {"GetRenderStyle", _wrap_UIStaticText_GetRenderStyle}, 
    {"GetUIStaticText", _wrap_UIStaticText_GetUIStaticText}, 
    {"SetNumOnly", _wrap_UIStaticText_SetNumOnly}, 
    {"SetSelColor", _wrap_UIStaticText_SetSelColor}, 
    {"GetSelColor", _wrap_UIStaticText_GetSelColor}, 
    {"SetSelStart", _wrap_UIStaticText_SetSelStart}, 
    {"GetSelStart", _wrap_UIStaticText_GetSelStart}, 
    {"SetSelEnd", _wrap_UIStaticText_SetSelEnd}, 
    {"GetSelEnd", _wrap_UIStaticText_GetSelEnd}, 
    {0,0}
};
static swig_lua_attribute swig_UIStaticText_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UIStaticText_bases[] = {&_wrap_class_UIItem,0};
swig_lua_class _wrap_class_UIStaticText = { "UIStaticText", &SWIGTYPE_p_UIStaticText,_wrap_new_UIStaticText, swig_delete_UIStaticText, swig_UIStaticText_methods, swig_UIStaticText_attributes, swig_UIStaticText_bases };

static int _wrap_UIButton_SetDetectRect__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *arg1 = (UIButton *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIButton_SetDetectRect",1,SWIGTYPE_p_UIButton);
  }
  
  (arg1)->SetDetectRect();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIButton_SetDetectRect__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *arg1 = (UIButton *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIButton_SetDetectRect",1,SWIGTYPE_p_UIButton);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  arg4 = (unsigned int)lua_tonumber(L, 4);
  arg5 = (unsigned int)lua_tonumber(L, 5);
  (arg1)->SetDetectRect(arg2,arg3,arg4,arg5);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIButton_SetDetectRect(lua_State* L) {
  int argc;
  int argv[6]={
    1,2,3,4,5,6
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_UIButton, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_UIButton_SetDetectRect__SWIG_0(L);
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_UIButton, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_UIButton_SetDetectRect__SWIG_1(L);
            }
          }
        }
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'UIButton_SetDetectRect'");
  lua_error(L);return 0;
}


static int _wrap_UIButton_SetStateDetectRect(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *arg1 = (UIButton *) 0 ;
  BUTTON_STATE arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIButton_SetStateDetectRect",1,SWIGTYPE_p_UIButton);
  }
  
  arg2 = (BUTTON_STATE)(int)lua_tonumber(L, 2);
  (arg1)->SetStateDetectRect(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIButton_GetX(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *arg1 = (UIButton *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIButton_GetX",1,SWIGTYPE_p_UIButton);
  }
  
  result = (int)(arg1)->GetX();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIButton_GetY(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *arg1 = (UIButton *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIButton_GetY",1,SWIGTYPE_p_UIButton);
  }
  
  result = (int)(arg1)->GetY();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIButton_SetPos(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *arg1 = (UIButton *) 0 ;
  int arg2 ;
  int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIButton_SetPos",1,SWIGTYPE_p_UIButton);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->SetPos(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIButton_SetNormalState(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *arg1 = (UIButton *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIButton_SetNormalState",1,SWIGTYPE_p_UIButton);
  }
  
  (arg1)->SetNormalState();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIButton_SetDisableState(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *arg1 = (UIButton *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIButton_SetDisableState",1,SWIGTYPE_p_UIButton);
  }
  
  (arg1)->SetDisableState();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIButton_SetMouseOverState(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *arg1 = (UIButton *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIButton_SetMouseOverState",1,SWIGTYPE_p_UIButton);
  }
  
  (arg1)->SetMouseOverState();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIButton_SetClickState(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *arg1 = (UIButton *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIButton_SetClickState",1,SWIGTYPE_p_UIButton);
  }
  
  (arg1)->SetClickState();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIButton_SetNoticeState(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *arg1 = (UIButton *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIButton_SetNoticeState",1,SWIGTYPE_p_UIButton);
  }
  
  (arg1)->SetNoticeState();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIButton_SetSubOffSet(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *arg1 = (UIButton *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIButton_SetSubOffSet",1,SWIGTYPE_p_UIButton);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  (arg1)->SetSubOffSet(arg2,arg3,arg4);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIButton_SetOffsetPos(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *arg1 = (UIButton *) 0 ;
  int arg2 ;
  int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIButton_SetOffsetPos",1,SWIGTYPE_p_UIButton);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->SetOffsetPos(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIButton_SetLockState(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *arg1 = (UIButton *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIButton_SetLockState",1,SWIGTYPE_p_UIButton);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetLockState(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIButton_SetRenderStyle(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *arg1 = (UIButton *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIButton_SetRenderStyle",1,SWIGTYPE_p_UIButton);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetRenderStyle(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIButton_GetRenderStyle(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *arg1 = (UIButton *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIButton_GetRenderStyle",1,SWIGTYPE_p_UIButton);
  }
  
  result = (unsigned int)(arg1)->GetRenderStyle();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIButton_IsLockState(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *arg1 = (UIButton *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIButton_IsLockState",1,SWIGTYPE_p_UIButton);
  }
  
  result = (bool)(arg1)->IsLockState();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIButton_SetState(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *arg1 = (UIButton *) 0 ;
  BUTTON_STATE arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIButton_SetState",1,SWIGTYPE_p_UIButton);
  }
  
  arg2 = (BUTTON_STATE)(int)lua_tonumber(L, 2);
  (arg1)->SetState(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIButton_SetImageFileA(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *arg1 = (UIButton *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIButton_SetImageFileA",1,SWIGTYPE_p_UIButton);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->SetImageFileA((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIButton_SetRect(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *arg1 = (UIButton *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  if(!lua_isnumber(L,6)) SWIG_fail_arg(6);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIButton_SetRect",1,SWIGTYPE_p_UIButton);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->SetRect(arg2,arg3,arg4,arg5,arg6);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIButton_SetAniIcon(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *arg1 = (UIButton *) 0 ;
  int arg2 ;
  UIAniIcon *arg3 = (UIAniIcon *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIButton_SetAniIcon",1,SWIGTYPE_p_UIButton);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_UIAniIcon,0))){
    SWIG_fail_ptr("UIButton_SetAniIcon",3,SWIGTYPE_p_UIAniIcon);
  }
  
  (arg1)->SetAniIcon(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIButton_GetState(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *arg1 = (UIButton *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIButton_GetState",1,SWIGTYPE_p_UIButton);
  }
  
  result = (int)(arg1)->GetState();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_UIButton(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *result = 0 ;
  
  result = (UIButton *)new UIButton();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIButton,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UIButton(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *arg1 = (UIButton *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("delete_UIButton",1,SWIGTYPE_p_UIButton);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UIButton(void *obj) {
UIButton *arg1 = (UIButton *) obj;
delete arg1;
}
static swig_lua_method swig_UIButton_methods[] = {
    {"SetDetectRect", _wrap_UIButton_SetDetectRect}, 
    {"SetStateDetectRect", _wrap_UIButton_SetStateDetectRect}, 
    {"GetX", _wrap_UIButton_GetX}, 
    {"GetY", _wrap_UIButton_GetY}, 
    {"SetPos", _wrap_UIButton_SetPos}, 
    {"SetNormalState", _wrap_UIButton_SetNormalState}, 
    {"SetDisableState", _wrap_UIButton_SetDisableState}, 
    {"SetMouseOverState", _wrap_UIButton_SetMouseOverState}, 
    {"SetClickState", _wrap_UIButton_SetClickState}, 
    {"SetNoticeState", _wrap_UIButton_SetNoticeState}, 
    {"SetSubOffSet", _wrap_UIButton_SetSubOffSet}, 
    {"SetOffsetPos", _wrap_UIButton_SetOffsetPos}, 
    {"SetLockState", _wrap_UIButton_SetLockState}, 
    {"SetRenderStyle", _wrap_UIButton_SetRenderStyle}, 
    {"GetRenderStyle", _wrap_UIButton_GetRenderStyle}, 
    {"IsLockState", _wrap_UIButton_IsLockState}, 
    {"SetState", _wrap_UIButton_SetState}, 
    {"SetImageFileA", _wrap_UIButton_SetImageFileA}, 
    {"SetRect", _wrap_UIButton_SetRect}, 
    {"SetAniIcon", _wrap_UIButton_SetAniIcon}, 
    {"GetState", _wrap_UIButton_GetState}, 
    {0,0}
};
static swig_lua_attribute swig_UIButton_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UIButton_bases[] = {&_wrap_class_UIItem,0};
swig_lua_class _wrap_class_UIButton = { "UIButton", &SWIGTYPE_p_UIButton,_wrap_new_UIButton, swig_delete_UIButton, swig_UIButton_methods, swig_UIButton_attributes, swig_UIButton_bases };

static int _wrap_UICheckBox_SetState(lua_State* L) {
  int SWIG_arg = -1;
  UICheckBox *arg1 = (UICheckBox *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UICheckBox,0))){
    SWIG_fail_ptr("UICheckBox_SetState",1,SWIGTYPE_p_UICheckBox);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetState(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UICheckBox_GetState(lua_State* L) {
  int SWIG_arg = -1;
  UICheckBox *arg1 = (UICheckBox *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UICheckBox,0))){
    SWIG_fail_ptr("UICheckBox_GetState",1,SWIGTYPE_p_UICheckBox);
  }
  
  result = (bool)(arg1)->GetState();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UICheckBox_SetRenderStyle(lua_State* L) {
  int SWIG_arg = -1;
  UICheckBox *arg1 = (UICheckBox *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UICheckBox,0))){
    SWIG_fail_ptr("UICheckBox_SetRenderStyle",1,SWIGTYPE_p_UICheckBox);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetRenderStyle(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UICheckBox_GetRenderStyle(lua_State* L) {
  int SWIG_arg = -1;
  UICheckBox *arg1 = (UICheckBox *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UICheckBox,0))){
    SWIG_fail_ptr("UICheckBox_GetRenderStyle",1,SWIGTYPE_p_UICheckBox);
  }
  
  result = (unsigned int)(arg1)->GetRenderStyle();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UICheckBox_SetCheckXY(lua_State* L) {
  int SWIG_arg = -1;
  UICheckBox *arg1 = (UICheckBox *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UICheckBox,0))){
    SWIG_fail_ptr("UICheckBox_SetCheckXY",1,SWIGTYPE_p_UICheckBox);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  (arg1)->SetCheckXY(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UICheckBox_SetImageFileA(lua_State* L) {
  int SWIG_arg = -1;
  UICheckBox *arg1 = (UICheckBox *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UICheckBox,0))){
    SWIG_fail_ptr("UICheckBox_SetImageFileA",1,SWIGTYPE_p_UICheckBox);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->SetImageFileA((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UICheckBox_SetRect(lua_State* L) {
  int SWIG_arg = -1;
  UICheckBox *arg1 = (UICheckBox *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  if(!lua_isnumber(L,6)) SWIG_fail_arg(6);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UICheckBox,0))){
    SWIG_fail_ptr("UICheckBox_SetRect",1,SWIGTYPE_p_UICheckBox);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->SetRect(arg2,arg3,arg4,arg5,arg6);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_UICheckBox(lua_State* L) {
  int SWIG_arg = -1;
  UICheckBox *result = 0 ;
  
  result = (UICheckBox *)new UICheckBox();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UICheckBox,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UICheckBox(lua_State* L) {
  int SWIG_arg = -1;
  UICheckBox *arg1 = (UICheckBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UICheckBox,0))){
    SWIG_fail_ptr("delete_UICheckBox",1,SWIGTYPE_p_UICheckBox);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UICheckBox(void *obj) {
UICheckBox *arg1 = (UICheckBox *) obj;
delete arg1;
}
static swig_lua_method swig_UICheckBox_methods[] = {
    {"SetState", _wrap_UICheckBox_SetState}, 
    {"GetState", _wrap_UICheckBox_GetState}, 
    {"SetRenderStyle", _wrap_UICheckBox_SetRenderStyle}, 
    {"GetRenderStyle", _wrap_UICheckBox_GetRenderStyle}, 
    {"SetCheckXY", _wrap_UICheckBox_SetCheckXY}, 
    {"SetImageFileA", _wrap_UICheckBox_SetImageFileA}, 
    {"SetRect", _wrap_UICheckBox_SetRect}, 
    {0,0}
};
static swig_lua_attribute swig_UICheckBox_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UICheckBox_bases[] = {&_wrap_class_UIItem,0};
swig_lua_class _wrap_class_UICheckBox = { "UICheckBox", &SWIGTYPE_p_UICheckBox,_wrap_new_UICheckBox, swig_delete_UICheckBox, swig_UICheckBox_methods, swig_UICheckBox_attributes, swig_UICheckBox_bases };

static int _wrap_UIScrollBarV_InitButton(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("UIScrollBarV_InitButton",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  (arg1)->InitButton();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollBarV_GetPrevBtn(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  UIButton *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("UIScrollBarV_GetPrevBtn",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  result = (UIButton *)(arg1)->GetPrevBtn();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIButton,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollBarV_GetNextBtn(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  UIButton *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("UIScrollBarV_GetNextBtn",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  result = (UIButton *)(arg1)->GetNextBtn();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIButton,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollBarV_GetMoveBtn(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  UIButton *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("UIScrollBarV_GetMoveBtn",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  result = (UIButton *)(arg1)->GetMoveBtn();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIButton,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollBarV_SetPrevButton(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  UIButton *arg2 = (UIButton *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("UIScrollBarV_SetPrevButton",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIScrollBarV_SetPrevButton",2,SWIGTYPE_p_UIButton);
  }
  
  (arg1)->SetPrevButton(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollBarV_SetNextButton(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  UIButton *arg2 = (UIButton *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("UIScrollBarV_SetNextButton",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIScrollBarV_SetNextButton",2,SWIGTYPE_p_UIButton);
  }
  
  (arg1)->SetNextButton(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollBarV_SetMoveButton(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  UIButton *arg2 = (UIButton *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("UIScrollBarV_SetMoveButton",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIButton,0))){
    SWIG_fail_ptr("UIScrollBarV_SetMoveButton",2,SWIGTYPE_p_UIButton);
  }
  
  (arg1)->SetMoveButton(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollBarV_SetBarRect(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("UIScrollBarV_SetBarRect",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->SetBarRect(arg2,arg3,arg4,arg5);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollBarV_SetBarWH(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  unsigned int arg2 ;
  UInt16 arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("UIScrollBarV_SetBarWH",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  arg3 = (UInt16)lua_tonumber(L, 3);
  (arg1)->SetBarWH(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollBarV_SetBarHeight(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("UIScrollBarV_SetBarHeight",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetBarHeight(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollBarV_SetNumCount(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("UIScrollBarV_SetNumCount",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetNumCount(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollBarV_GetNumCount(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("UIScrollBarV_GetNumCount",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  result = (unsigned int)(arg1)->GetNumCount();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollBarV_GetSelNum(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("UIScrollBarV_GetSelNum",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  result = (unsigned int)(arg1)->GetSelNum();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollBarV_SetSelNum(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("UIScrollBarV_SetSelNum",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetSelNum(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollBarV_MoveUp(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("UIScrollBarV_MoveUp",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  (arg1)->MoveUp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollBarV_MoveDown(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("UIScrollBarV_MoveDown",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  (arg1)->MoveDown();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollBarV_HomeScroll(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("UIScrollBarV_HomeScroll",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  (arg1)->HomeScroll();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollBarV_EndScroll(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("UIScrollBarV_EndScroll",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  (arg1)->EndScroll();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollBarV_ResetNumCount(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("UIScrollBarV_ResetNumCount",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->ResetNumCount(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollBarV_SetBarRenderType(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("UIScrollBarV_SetBarRenderType",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetBarRenderType(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollBarV_SetBarColor(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("UIScrollBarV_SetBarColor",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetBarColor(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollBarV_SetBarInfo(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("UIScrollBarV_SetBarInfo",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  (arg1)->SetBarInfo();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollBarV_OnMouseWheel(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("UIScrollBarV_OnMouseWheel",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  result = (int)(arg1)->OnMouseWheel(arg2,arg3,arg4);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_UIScrollBarV(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *result = 0 ;
  
  result = (UIScrollBarV *)new UIScrollBarV();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIScrollBarV,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UIScrollBarV(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *arg1 = (UIScrollBarV *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarV,0))){
    SWIG_fail_ptr("delete_UIScrollBarV",1,SWIGTYPE_p_UIScrollBarV);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UIScrollBarV(void *obj) {
UIScrollBarV *arg1 = (UIScrollBarV *) obj;
delete arg1;
}
static swig_lua_method swig_UIScrollBarV_methods[] = {
    {"InitButton", _wrap_UIScrollBarV_InitButton}, 
    {"GetPrevBtn", _wrap_UIScrollBarV_GetPrevBtn}, 
    {"GetNextBtn", _wrap_UIScrollBarV_GetNextBtn}, 
    {"GetMoveBtn", _wrap_UIScrollBarV_GetMoveBtn}, 
    {"SetPrevButton", _wrap_UIScrollBarV_SetPrevButton}, 
    {"SetNextButton", _wrap_UIScrollBarV_SetNextButton}, 
    {"SetMoveButton", _wrap_UIScrollBarV_SetMoveButton}, 
    {"SetBarRect", _wrap_UIScrollBarV_SetBarRect}, 
    {"SetBarWH", _wrap_UIScrollBarV_SetBarWH}, 
    {"SetBarHeight", _wrap_UIScrollBarV_SetBarHeight}, 
    {"SetNumCount", _wrap_UIScrollBarV_SetNumCount}, 
    {"GetNumCount", _wrap_UIScrollBarV_GetNumCount}, 
    {"GetSelNum", _wrap_UIScrollBarV_GetSelNum}, 
    {"SetSelNum", _wrap_UIScrollBarV_SetSelNum}, 
    {"MoveUp", _wrap_UIScrollBarV_MoveUp}, 
    {"MoveDown", _wrap_UIScrollBarV_MoveDown}, 
    {"HomeScroll", _wrap_UIScrollBarV_HomeScroll}, 
    {"EndScroll", _wrap_UIScrollBarV_EndScroll}, 
    {"ResetNumCount", _wrap_UIScrollBarV_ResetNumCount}, 
    {"SetBarRenderType", _wrap_UIScrollBarV_SetBarRenderType}, 
    {"SetBarColor", _wrap_UIScrollBarV_SetBarColor}, 
    {"SetBarInfo", _wrap_UIScrollBarV_SetBarInfo}, 
    {"OnMouseWheel", _wrap_UIScrollBarV_OnMouseWheel}, 
    {0,0}
};
static swig_lua_attribute swig_UIScrollBarV_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UIScrollBarV_bases[] = {&_wrap_class_UIItem,0};
swig_lua_class _wrap_class_UIScrollBarV = { "UIScrollBarV", &SWIGTYPE_p_UIScrollBarV,_wrap_new_UIScrollBarV, swig_delete_UIScrollBarV, swig_UIScrollBarV_methods, swig_UIScrollBarV_attributes, swig_UIScrollBarV_bases };

static int _wrap_new_UIScrollBarH(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarH *result = 0 ;
  
  result = (UIScrollBarH *)new UIScrollBarH();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIScrollBarH,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UIScrollBarH(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarH *arg1 = (UIScrollBarH *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollBarH,0))){
    SWIG_fail_ptr("delete_UIScrollBarH",1,SWIGTYPE_p_UIScrollBarH);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UIScrollBarH(void *obj) {
UIScrollBarH *arg1 = (UIScrollBarH *) obj;
delete arg1;
}
static swig_lua_method swig_UIScrollBarH_methods[] = {
    {0,0}
};
static swig_lua_attribute swig_UIScrollBarH_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UIScrollBarH_bases[] = {&_wrap_class_UIScrollBarV,0};
swig_lua_class _wrap_class_UIScrollBarH = { "UIScrollBarH", &SWIGTYPE_p_UIScrollBarH,_wrap_new_UIScrollBarH, swig_delete_UIScrollBarH, swig_UIScrollBarH_methods, swig_UIScrollBarH_attributes, swig_UIScrollBarH_bases };

static int _wrap_UIScrollListBox_SetupScrollBarV(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollListBox *arg1 = (UIScrollListBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollListBox,0))){
    SWIG_fail_ptr("UIScrollListBox_SetupScrollBarV",1,SWIGTYPE_p_UIScrollListBox);
  }
  
  (arg1)->SetupScrollBarV();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollListBox_SetupScrollBarH(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollListBox *arg1 = (UIScrollListBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollListBox,0))){
    SWIG_fail_ptr("UIScrollListBox_SetupScrollBarH",1,SWIGTYPE_p_UIScrollListBox);
  }
  
  (arg1)->SetupScrollBarH();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollListBox_SetPos(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollListBox *arg1 = (UIScrollListBox *) 0 ;
  int arg2 ;
  int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollListBox,0))){
    SWIG_fail_ptr("UIScrollListBox_SetPos",1,SWIGTYPE_p_UIScrollListBox);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->SetPos(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollListBox_MovePos(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollListBox *arg1 = (UIScrollListBox *) 0 ;
  int arg2 ;
  int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollListBox,0))){
    SWIG_fail_ptr("UIScrollListBox_MovePos",1,SWIGTYPE_p_UIScrollListBox);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->MovePos(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollListBox_GetListBox(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollListBox *arg1 = (UIScrollListBox *) 0 ;
  UIListBox *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollListBox,0))){
    SWIG_fail_ptr("UIScrollListBox_GetListBox",1,SWIGTYPE_p_UIScrollListBox);
  }
  
  result = (UIListBox *)(arg1)->GetListBox();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIListBox,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollListBox_GetScrollBarV(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollListBox *arg1 = (UIScrollListBox *) 0 ;
  UIScrollBarV *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollListBox,0))){
    SWIG_fail_ptr("UIScrollListBox_GetScrollBarV",1,SWIGTYPE_p_UIScrollListBox);
  }
  
  result = (UIScrollBarV *)(arg1)->GetScrollBarV();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIScrollBarV,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollListBox_GetScrollBarH(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollListBox *arg1 = (UIScrollListBox *) 0 ;
  UIScrollBarH *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollListBox,0))){
    SWIG_fail_ptr("UIScrollListBox_GetScrollBarH",1,SWIGTYPE_p_UIScrollListBox);
  }
  
  result = (UIScrollBarH *)(arg1)->GetScrollBarH();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIScrollBarH,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIScrollListBox_UnPickUp(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollListBox *arg1 = (UIScrollListBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollListBox,0))){
    SWIG_fail_ptr("UIScrollListBox_UnPickUp",1,SWIGTYPE_p_UIScrollListBox);
  }
  
  (arg1)->UnPickUp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_UIScrollListBox(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollListBox *result = 0 ;
  
  result = (UIScrollListBox *)new UIScrollListBox();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIScrollListBox,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UIScrollListBox(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollListBox *arg1 = (UIScrollListBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIScrollListBox,0))){
    SWIG_fail_ptr("delete_UIScrollListBox",1,SWIGTYPE_p_UIScrollListBox);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UIScrollListBox(void *obj) {
UIScrollListBox *arg1 = (UIScrollListBox *) obj;
delete arg1;
}
static swig_lua_method swig_UIScrollListBox_methods[] = {
    {"SetupScrollBarV", _wrap_UIScrollListBox_SetupScrollBarV}, 
    {"SetupScrollBarH", _wrap_UIScrollListBox_SetupScrollBarH}, 
    {"SetPos", _wrap_UIScrollListBox_SetPos}, 
    {"MovePos", _wrap_UIScrollListBox_MovePos}, 
    {"GetListBox", _wrap_UIScrollListBox_GetListBox}, 
    {"GetScrollBarV", _wrap_UIScrollListBox_GetScrollBarV}, 
    {"GetScrollBarH", _wrap_UIScrollListBox_GetScrollBarH}, 
    {"UnPickUp", _wrap_UIScrollListBox_UnPickUp}, 
    {0,0}
};
static swig_lua_attribute swig_UIScrollListBox_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UIScrollListBox_bases[] = {&_wrap_class_UIItem,0};
swig_lua_class _wrap_class_UIScrollListBox = { "UIScrollListBox", &SWIGTYPE_p_UIScrollListBox,_wrap_new_UIScrollListBox, swig_delete_UIScrollListBox, swig_UIScrollListBox_methods, swig_UIScrollListBox_attributes, swig_UIScrollListBox_bases };

static int _wrap_UIListBox_SetBarWidth(lua_State* L) {
  int SWIG_arg = -1;
  UIListBox *arg1 = (UIListBox *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIListBox,0))){
    SWIG_fail_ptr("UIListBox_SetBarWidth",1,SWIGTYPE_p_UIListBox);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetBarWidth(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIListBox_SetDetectRect(lua_State* L) {
  int SWIG_arg = -1;
  UIListBox *arg1 = (UIListBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIListBox,0))){
    SWIG_fail_ptr("UIListBox_SetDetectRect",1,SWIGTYPE_p_UIListBox);
  }
  
  (arg1)->SetDetectRect();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIListBox_SetBarRect(lua_State* L) {
  int SWIG_arg = -1;
  UIListBox *arg1 = (UIListBox *) 0 ;
  RECT *arg2 = 0 ;
  int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isuserdata(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIListBox,0))){
    SWIG_fail_ptr("UIListBox_SetBarRect",1,SWIGTYPE_p_UIListBox);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_RECT,0))){
    SWIG_fail_ptr("UIListBox_SetBarRect",2,SWIGTYPE_p_RECT);
  }
  
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->SetBarRect(*arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIListBox_AddString(lua_State* L) {
  int SWIG_arg = -1;
  UIListBox *arg1 = (UIListBox *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIListBox,0))){
    SWIG_fail_ptr("UIListBox_AddString",1,SWIGTYPE_p_UIListBox);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("UIListBox_AddString",2,SWIGTYPE_p_wchar_t);
  }
  
  (arg1)->AddString((wchar_t const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIListBox_AddStringA(lua_State* L) {
  int SWIG_arg = -1;
  UIListBox *arg1 = (UIListBox *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIListBox,0))){
    SWIG_fail_ptr("UIListBox_AddStringA",1,SWIGTYPE_p_UIListBox);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->AddStringA((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIListBox_DelString(lua_State* L) {
  int SWIG_arg = -1;
  UIListBox *arg1 = (UIListBox *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIListBox,0))){
    SWIG_fail_ptr("UIListBox_DelString",1,SWIGTYPE_p_UIListBox);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->DelString(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIListBox_DrawFont(lua_State* L) {
  int SWIG_arg = -1;
  UIListBox *arg1 = (UIListBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIListBox,0))){
    SWIG_fail_ptr("UIListBox_DrawFont",1,SWIGTYPE_p_UIListBox);
  }
  
  (arg1)->DrawFont();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIListBox_UpSel(lua_State* L) {
  int SWIG_arg = -1;
  UIListBox *arg1 = (UIListBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIListBox,0))){
    SWIG_fail_ptr("UIListBox_UpSel",1,SWIGTYPE_p_UIListBox);
  }
  
  (arg1)->UpSel();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIListBox_DownSel(lua_State* L) {
  int SWIG_arg = -1;
  UIListBox *arg1 = (UIListBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIListBox,0))){
    SWIG_fail_ptr("UIListBox_DownSel",1,SWIGTYPE_p_UIListBox);
  }
  
  (arg1)->DownSel();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIListBox_Home(lua_State* L) {
  int SWIG_arg = -1;
  UIListBox *arg1 = (UIListBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIListBox,0))){
    SWIG_fail_ptr("UIListBox_Home",1,SWIGTYPE_p_UIListBox);
  }
  
  (arg1)->Home();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIListBox_End(lua_State* L) {
  int SWIG_arg = -1;
  UIListBox *arg1 = (UIListBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIListBox,0))){
    SWIG_fail_ptr("UIListBox_End",1,SWIGTYPE_p_UIListBox);
  }
  
  (arg1)->End();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIListBox_PageUp(lua_State* L) {
  int SWIG_arg = -1;
  UIListBox *arg1 = (UIListBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIListBox,0))){
    SWIG_fail_ptr("UIListBox_PageUp",1,SWIGTYPE_p_UIListBox);
  }
  
  (arg1)->PageUp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIListBox_PageDown(lua_State* L) {
  int SWIG_arg = -1;
  UIListBox *arg1 = (UIListBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIListBox,0))){
    SWIG_fail_ptr("UIListBox_PageDown",1,SWIGTYPE_p_UIListBox);
  }
  
  (arg1)->PageDown();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIListBox_GetBarPos(lua_State* L) {
  int SWIG_arg = -1;
  UIListBox *arg1 = (UIListBox *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIListBox,0))){
    SWIG_fail_ptr("UIListBox_GetBarPos",1,SWIGTYPE_p_UIListBox);
  }
  
  result = (int)(arg1)->GetBarPos();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIListBox_GetBarString(lua_State* L) {
  int SWIG_arg = -1;
  UIListBox *arg1 = (UIListBox *) 0 ;
  wchar_t *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIListBox,0))){
    SWIG_fail_ptr("UIListBox_GetBarString",1,SWIGTYPE_p_UIListBox);
  }
  
  result = (wchar_t *)(arg1)->GetBarString();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_wchar_t,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIListBox_GetStringListSize(lua_State* L) {
  int SWIG_arg = -1;
  UIListBox *arg1 = (UIListBox *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIListBox,0))){
    SWIG_fail_ptr("UIListBox_GetStringListSize",1,SWIGTYPE_p_UIListBox);
  }
  
  result = (unsigned int)(arg1)->GetStringListSize();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_UIListBox(lua_State* L) {
  int SWIG_arg = -1;
  UIListBox *result = 0 ;
  
  result = (UIListBox *)new UIListBox();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIListBox,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UIListBox(lua_State* L) {
  int SWIG_arg = -1;
  UIListBox *arg1 = (UIListBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIListBox,0))){
    SWIG_fail_ptr("delete_UIListBox",1,SWIGTYPE_p_UIListBox);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UIListBox(void *obj) {
UIListBox *arg1 = (UIListBox *) obj;
delete arg1;
}
static swig_lua_method swig_UIListBox_methods[] = {
    {"SetBarWidth", _wrap_UIListBox_SetBarWidth}, 
    {"SetDetectRect", _wrap_UIListBox_SetDetectRect}, 
    {"SetBarRect", _wrap_UIListBox_SetBarRect}, 
    {"AddString", _wrap_UIListBox_AddString}, 
    {"AddStringA", _wrap_UIListBox_AddStringA}, 
    {"DelString", _wrap_UIListBox_DelString}, 
    {"DrawFont", _wrap_UIListBox_DrawFont}, 
    {"UpSel", _wrap_UIListBox_UpSel}, 
    {"DownSel", _wrap_UIListBox_DownSel}, 
    {"Home", _wrap_UIListBox_Home}, 
    {"End", _wrap_UIListBox_End}, 
    {"PageUp", _wrap_UIListBox_PageUp}, 
    {"PageDown", _wrap_UIListBox_PageDown}, 
    {"GetBarPos", _wrap_UIListBox_GetBarPos}, 
    {"GetBarString", _wrap_UIListBox_GetBarString}, 
    {"GetStringListSize", _wrap_UIListBox_GetStringListSize}, 
    {0,0}
};
static swig_lua_attribute swig_UIListBox_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UIListBox_bases[] = {&_wrap_class_UIStaticText,0};
swig_lua_class _wrap_class_UIListBox = { "UIListBox", &SWIGTYPE_p_UIListBox,_wrap_new_UIListBox, swig_delete_UIListBox, swig_UIListBox_methods, swig_UIListBox_attributes, swig_UIListBox_bases };

static int _wrap_UIPopUpMenu_GetBarPos(lua_State* L) {
  int SWIG_arg = -1;
  UIPopUpMenu *arg1 = (UIPopUpMenu *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPopUpMenu,0))){
    SWIG_fail_ptr("UIPopUpMenu_GetBarPos",1,SWIGTYPE_p_UIPopUpMenu);
  }
  
  result = (int)(arg1)->GetBarPos();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPopUpMenu_GetBarString(lua_State* L) {
  int SWIG_arg = -1;
  UIPopUpMenu *arg1 = (UIPopUpMenu *) 0 ;
  wchar_t *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPopUpMenu,0))){
    SWIG_fail_ptr("UIPopUpMenu_GetBarString",1,SWIGTYPE_p_UIPopUpMenu);
  }
  
  result = (wchar_t *)(arg1)->GetBarString();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_wchar_t,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPopUpMenu_GetBarCode(lua_State* L) {
  int SWIG_arg = -1;
  UIPopUpMenu *arg1 = (UIPopUpMenu *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPopUpMenu,0))){
    SWIG_fail_ptr("UIPopUpMenu_GetBarCode",1,SWIGTYPE_p_UIPopUpMenu);
  }
  
  result = (int)(arg1)->GetBarCode();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPopUpMenu_GetStringListSize(lua_State* L) {
  int SWIG_arg = -1;
  UIPopUpMenu *arg1 = (UIPopUpMenu *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPopUpMenu,0))){
    SWIG_fail_ptr("UIPopUpMenu_GetStringListSize",1,SWIGTYPE_p_UIPopUpMenu);
  }
  
  result = (unsigned int)(arg1)->GetStringListSize();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPopUpMenu_SetRenderStyle(lua_State* L) {
  int SWIG_arg = -1;
  UIPopUpMenu *arg1 = (UIPopUpMenu *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPopUpMenu,0))){
    SWIG_fail_ptr("UIPopUpMenu_SetRenderStyle",1,SWIGTYPE_p_UIPopUpMenu);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetRenderStyle(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPopUpMenu_GetRenderStyle(lua_State* L) {
  int SWIG_arg = -1;
  UIPopUpMenu *arg1 = (UIPopUpMenu *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPopUpMenu,0))){
    SWIG_fail_ptr("UIPopUpMenu_GetRenderStyle",1,SWIGTYPE_p_UIPopUpMenu);
  }
  
  result = (unsigned int)(arg1)->GetRenderStyle();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPopUpMenu_GetUIStaticText(lua_State* L) {
  int SWIG_arg = -1;
  UIPopUpMenu *arg1 = (UIPopUpMenu *) 0 ;
  UIStaticText *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPopUpMenu,0))){
    SWIG_fail_ptr("UIPopUpMenu_GetUIStaticText",1,SWIGTYPE_p_UIPopUpMenu);
  }
  
  result = (UIStaticText *)(arg1)->GetUIStaticText();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIStaticText,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPopUpMenu_SetLinePitch(lua_State* L) {
  int SWIG_arg = -1;
  UIPopUpMenu *arg1 = (UIPopUpMenu *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPopUpMenu,0))){
    SWIG_fail_ptr("UIPopUpMenu_SetLinePitch",1,SWIGTYPE_p_UIPopUpMenu);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetLinePitch(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPopUpMenu_SetBarWidth(lua_State* L) {
  int SWIG_arg = -1;
  UIPopUpMenu *arg1 = (UIPopUpMenu *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPopUpMenu,0))){
    SWIG_fail_ptr("UIPopUpMenu_SetBarWidth",1,SWIGTYPE_p_UIPopUpMenu);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetBarWidth(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPopUpMenu_SetSelBarColor(lua_State* L) {
  int SWIG_arg = -1;
  UIPopUpMenu *arg1 = (UIPopUpMenu *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPopUpMenu,0))){
    SWIG_fail_ptr("UIPopUpMenu_SetSelBarColor",1,SWIGTYPE_p_UIPopUpMenu);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetSelBarColor(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPopUpMenu_SetSelFontColor(lua_State* L) {
  int SWIG_arg = -1;
  UIPopUpMenu *arg1 = (UIPopUpMenu *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPopUpMenu,0))){
    SWIG_fail_ptr("UIPopUpMenu_SetSelFontColor",1,SWIGTYPE_p_UIPopUpMenu);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetSelFontColor(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_UIPopUpMenu(lua_State* L) {
  int SWIG_arg = -1;
  UIPopUpMenu *result = 0 ;
  
  result = (UIPopUpMenu *)new UIPopUpMenu();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIPopUpMenu,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UIPopUpMenu(lua_State* L) {
  int SWIG_arg = -1;
  UIPopUpMenu *arg1 = (UIPopUpMenu *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPopUpMenu,0))){
    SWIG_fail_ptr("delete_UIPopUpMenu",1,SWIGTYPE_p_UIPopUpMenu);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UIPopUpMenu(void *obj) {
UIPopUpMenu *arg1 = (UIPopUpMenu *) obj;
delete arg1;
}
static swig_lua_method swig_UIPopUpMenu_methods[] = {
    {"GetBarPos", _wrap_UIPopUpMenu_GetBarPos}, 
    {"GetBarString", _wrap_UIPopUpMenu_GetBarString}, 
    {"GetBarCode", _wrap_UIPopUpMenu_GetBarCode}, 
    {"GetStringListSize", _wrap_UIPopUpMenu_GetStringListSize}, 
    {"SetRenderStyle", _wrap_UIPopUpMenu_SetRenderStyle}, 
    {"GetRenderStyle", _wrap_UIPopUpMenu_GetRenderStyle}, 
    {"GetUIStaticText", _wrap_UIPopUpMenu_GetUIStaticText}, 
    {"SetLinePitch", _wrap_UIPopUpMenu_SetLinePitch}, 
    {"SetBarWidth", _wrap_UIPopUpMenu_SetBarWidth}, 
    {"SetSelBarColor", _wrap_UIPopUpMenu_SetSelBarColor}, 
    {"SetSelFontColor", _wrap_UIPopUpMenu_SetSelFontColor}, 
    {0,0}
};
static swig_lua_attribute swig_UIPopUpMenu_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UIPopUpMenu_bases[] = {&_wrap_class_UIListBox,0};
swig_lua_class _wrap_class_UIPopUpMenu = { "UIPopUpMenu", &SWIGTYPE_p_UIPopUpMenu,_wrap_new_UIPopUpMenu, swig_delete_UIPopUpMenu, swig_UIPopUpMenu_methods, swig_UIPopUpMenu_attributes, swig_UIPopUpMenu_bases };

static int _wrap_UIDynamicText_SetSpeed(lua_State* L) {
  int SWIG_arg = -1;
  UIDynamicText *arg1 = (UIDynamicText *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIDynamicText,0))){
    SWIG_fail_ptr("UIDynamicText_SetSpeed",1,SWIGTYPE_p_UIDynamicText);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SetSpeed(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_UIDynamicText(lua_State* L) {
  int SWIG_arg = -1;
  UIDynamicText *result = 0 ;
  
  result = (UIDynamicText *)new UIDynamicText();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIDynamicText,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UIDynamicText(lua_State* L) {
  int SWIG_arg = -1;
  UIDynamicText *arg1 = (UIDynamicText *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIDynamicText,0))){
    SWIG_fail_ptr("delete_UIDynamicText",1,SWIGTYPE_p_UIDynamicText);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UIDynamicText(void *obj) {
UIDynamicText *arg1 = (UIDynamicText *) obj;
delete arg1;
}
static swig_lua_method swig_UIDynamicText_methods[] = {
    {"SetSpeed", _wrap_UIDynamicText_SetSpeed}, 
    {0,0}
};
static swig_lua_attribute swig_UIDynamicText_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UIDynamicText_bases[] = {&_wrap_class_UIStaticText,0};
swig_lua_class _wrap_class_UIDynamicText = { "UIDynamicText", &SWIGTYPE_p_UIDynamicText,_wrap_new_UIDynamicText, swig_delete_UIDynamicText, swig_UIDynamicText_methods, swig_UIDynamicText_attributes, swig_UIDynamicText_bases };

static int _wrap_UIEditBox_SetText__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_SetText",1,SWIGTYPE_p_UIEditBox);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("UIEditBox_SetText",2,SWIGTYPE_p_wchar_t);
  }
  
  (arg1)->SetText((wchar_t const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_ClearText(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_ClearText",1,SWIGTYPE_p_UIEditBox);
  }
  
  (arg1)->ClearText();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_GetEditLimit(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_GetEditLimit",1,SWIGTYPE_p_UIEditBox);
  }
  
  result = (unsigned int)(arg1)->GetEditLimit();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_GetText(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  wchar_t *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_GetText",1,SWIGTYPE_p_UIEditBox);
  }
  
  result = (wchar_t *)(arg1)->GetText();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_wchar_t,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_GetTextSize(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_GetTextSize",1,SWIGTYPE_p_UIEditBox);
  }
  
  result = (unsigned int)(arg1)->GetTextSize();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_Empty(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_Empty",1,SWIGTYPE_p_UIEditBox);
  }
  
  result = (bool)(arg1)->Empty();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_BackSpace(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_BackSpace",1,SWIGTYPE_p_UIEditBox);
  }
  
  (arg1)->BackSpace();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_InsertText(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_InsertText",1,SWIGTYPE_p_UIEditBox);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->InsertText((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_SetText__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_SetText",1,SWIGTYPE_p_UIEditBox);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->SetText((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_AddText__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_AddText",1,SWIGTYPE_p_UIEditBox);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("UIEditBox_AddText",2,SWIGTYPE_p_wchar_t);
  }
  
  (arg1)->AddText((wchar_t const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_AddText__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_AddText",1,SWIGTYPE_p_UIEditBox);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->AddText((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_AddText(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_UIEditBox, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_wchar_t, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_UIEditBox_AddText__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_UIEditBox, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_UIEditBox_AddText__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'UIEditBox_AddText'");
  lua_error(L);return 0;
}


static int _wrap_UIEditBox_SetText__SWIG_2(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  StringW *arg2 = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isuserdata(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_SetText",1,SWIGTYPE_p_UIEditBox);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_StringW,0))){
    SWIG_fail_ptr("UIEditBox_SetText",2,SWIGTYPE_p_StringW);
  }
  
  (arg1)->SetText(*arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_SetText(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_UIEditBox, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_wchar_t, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_UIEditBox_SetText__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_UIEditBox, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_StringW, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_UIEditBox_SetText__SWIG_2(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_UIEditBox, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_UIEditBox_SetText__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'UIEditBox_SetText'");
  lua_error(L);return 0;
}


static int _wrap_UIEditBox_ClearWaitText(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_ClearWaitText",1,SWIGTYPE_p_UIEditBox);
  }
  
  (arg1)->ClearWaitText();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_AddWaitText__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_AddWaitText",1,SWIGTYPE_p_UIEditBox);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("UIEditBox_AddWaitText",2,SWIGTYPE_p_wchar_t);
  }
  
  (arg1)->AddWaitText((wchar_t const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_AddWaitText__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_AddWaitText",1,SWIGTYPE_p_UIEditBox);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->AddWaitText((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_AddWaitText(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_UIEditBox, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_wchar_t, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_UIEditBox_AddWaitText__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_UIEditBox, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_UIEditBox_AddWaitText__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'UIEditBox_AddWaitText'");
  lua_error(L);return 0;
}


static int _wrap_UIEditBox_SendWaitText(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_SendWaitText",1,SWIGTYPE_p_UIEditBox);
  }
  
  (arg1)->SendWaitText();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_SetFontColor(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_SetFontColor",1,SWIGTYPE_p_UIEditBox);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetFontColor(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_Redraw(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_Redraw",1,SWIGTYPE_p_UIEditBox);
  }
  
  (arg1)->Redraw();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_SetRenderStyle(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_SetRenderStyle",1,SWIGTYPE_p_UIEditBox);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetRenderStyle(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_GetRenderStyle(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_GetRenderStyle",1,SWIGTYPE_p_UIEditBox);
  }
  
  result = (unsigned int)(arg1)->GetRenderStyle();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_GetInt(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_GetInt",1,SWIGTYPE_p_UIEditBox);
  }
  
  result = (int)(arg1)->GetInt();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_SetEditLimit(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_SetEditLimit",1,SWIGTYPE_p_UIEditBox);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetEditLimit(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_Home(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_Home",1,SWIGTYPE_p_UIEditBox);
  }
  
  result = (unsigned int)(arg1)->Home();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_End(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_End",1,SWIGTYPE_p_UIEditBox);
  }
  
  result = (unsigned int)(arg1)->End();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_CursorMoveLeft(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  UInt arg2 ;
  UInt *argp2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isuserdata(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_CursorMoveLeft",1,SWIGTYPE_p_UIEditBox);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_UInt,0))){
    SWIG_fail_ptr("UIEditBox_CursorMoveLeft",2,SWIGTYPE_UInt);
  }
  arg2 = *argp2;
  
  (arg1)->CursorMoveLeft(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBox_CursorMoveRight(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  UInt arg2 ;
  UInt *argp2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isuserdata(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("UIEditBox_CursorMoveRight",1,SWIGTYPE_p_UIEditBox);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_UInt,0))){
    SWIG_fail_ptr("UIEditBox_CursorMoveRight",2,SWIGTYPE_UInt);
  }
  arg2 = *argp2;
  
  (arg1)->CursorMoveRight(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_UIEditBox(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *result = 0 ;
  
  result = (UIEditBox *)new UIEditBox();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIEditBox,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UIEditBox(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *arg1 = (UIEditBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBox,0))){
    SWIG_fail_ptr("delete_UIEditBox",1,SWIGTYPE_p_UIEditBox);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UIEditBox(void *obj) {
UIEditBox *arg1 = (UIEditBox *) obj;
delete arg1;
}
static swig_lua_method swig_UIEditBox_methods[] = {
    {"ClearText", _wrap_UIEditBox_ClearText}, 
    {"GetEditLimit", _wrap_UIEditBox_GetEditLimit}, 
    {"GetText", _wrap_UIEditBox_GetText}, 
    {"GetTextSize", _wrap_UIEditBox_GetTextSize}, 
    {"Empty", _wrap_UIEditBox_Empty}, 
    {"BackSpace", _wrap_UIEditBox_BackSpace}, 
    {"InsertText", _wrap_UIEditBox_InsertText}, 
    {"AddText", _wrap_UIEditBox_AddText}, 
    {"SetText", _wrap_UIEditBox_SetText}, 
    {"ClearWaitText", _wrap_UIEditBox_ClearWaitText}, 
    {"AddWaitText", _wrap_UIEditBox_AddWaitText}, 
    {"SendWaitText", _wrap_UIEditBox_SendWaitText}, 
    {"SetFontColor", _wrap_UIEditBox_SetFontColor}, 
    {"Redraw", _wrap_UIEditBox_Redraw}, 
    {"SetRenderStyle", _wrap_UIEditBox_SetRenderStyle}, 
    {"GetRenderStyle", _wrap_UIEditBox_GetRenderStyle}, 
    {"GetInt", _wrap_UIEditBox_GetInt}, 
    {"SetEditLimit", _wrap_UIEditBox_SetEditLimit}, 
    {"Home", _wrap_UIEditBox_Home}, 
    {"End", _wrap_UIEditBox_End}, 
    {"CursorMoveLeft", _wrap_UIEditBox_CursorMoveLeft}, 
    {"CursorMoveRight", _wrap_UIEditBox_CursorMoveRight}, 
    {0,0}
};
static swig_lua_attribute swig_UIEditBox_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UIEditBox_bases[] = {&_wrap_class_UIStaticText,0};
swig_lua_class _wrap_class_UIEditBox = { "UIEditBox", &SWIGTYPE_p_UIEditBox,_wrap_new_UIEditBox, swig_delete_UIEditBox, swig_UIEditBox_methods, swig_UIEditBox_attributes, swig_UIEditBox_bases };

static int _wrap_UIEditBoxEx_GetText(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBoxEx *arg1 = (UIEditBoxEx *) 0 ;
  wchar_t *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBoxEx,0))){
    SWIG_fail_ptr("UIEditBoxEx_GetText",1,SWIGTYPE_p_UIEditBoxEx);
  }
  
  result = (wchar_t *)(arg1)->GetText();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_wchar_t,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIEditBoxEx_GetTextSize(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBoxEx *arg1 = (UIEditBoxEx *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBoxEx,0))){
    SWIG_fail_ptr("UIEditBoxEx_GetTextSize",1,SWIGTYPE_p_UIEditBoxEx);
  }
  
  result = (unsigned int)(arg1)->GetTextSize();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_UIEditBoxEx(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBoxEx *result = 0 ;
  
  result = (UIEditBoxEx *)new UIEditBoxEx();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIEditBoxEx,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UIEditBoxEx(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBoxEx *arg1 = (UIEditBoxEx *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIEditBoxEx,0))){
    SWIG_fail_ptr("delete_UIEditBoxEx",1,SWIGTYPE_p_UIEditBoxEx);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UIEditBoxEx(void *obj) {
UIEditBoxEx *arg1 = (UIEditBoxEx *) obj;
delete arg1;
}
static swig_lua_method swig_UIEditBoxEx_methods[] = {
    {"GetText", _wrap_UIEditBoxEx_GetText}, 
    {"GetTextSize", _wrap_UIEditBoxEx_GetTextSize}, 
    {0,0}
};
static swig_lua_attribute swig_UIEditBoxEx_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UIEditBoxEx_bases[] = {&_wrap_class_UIEditBox,0};
swig_lua_class _wrap_class_UIEditBoxEx = { "UIEditBoxEx", &SWIGTYPE_p_UIEditBoxEx,_wrap_new_UIEditBoxEx, swig_delete_UIEditBoxEx, swig_UIEditBoxEx_methods, swig_UIEditBoxEx_attributes, swig_UIEditBoxEx_bases };

static int _wrap_UIChatItem_SetPos(lua_State* L) {
  int SWIG_arg = -1;
  UIChatItem *arg1 = (UIChatItem *) 0 ;
  int arg2 ;
  int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatItem,0))){
    SWIG_fail_ptr("UIChatItem_SetPos",1,SWIGTYPE_p_UIChatItem);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->SetPos(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatItem_GetWidth(lua_State* L) {
  int SWIG_arg = -1;
  UIChatItem *arg1 = (UIChatItem *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatItem,0))){
    SWIG_fail_ptr("UIChatItem_GetWidth",1,SWIGTYPE_p_UIChatItem);
  }
  
  result = (unsigned int)(arg1)->GetWidth();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatItem_GetHeight(lua_State* L) {
  int SWIG_arg = -1;
  UIChatItem *arg1 = (UIChatItem *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatItem,0))){
    SWIG_fail_ptr("UIChatItem_GetHeight",1,SWIGTYPE_p_UIChatItem);
  }
  
  result = (unsigned int)(arg1)->GetHeight();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatItem_Detect(lua_State* L) {
  int SWIG_arg = -1;
  UIChatItem *arg1 = (UIChatItem *) 0 ;
  int arg2 ;
  int arg3 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatItem,0))){
    SWIG_fail_ptr("UIChatItem_Detect",1,SWIGTYPE_p_UIChatItem);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  result = (bool)(arg1)->Detect(arg2,arg3);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatItem_UpdateDetectRect(lua_State* L) {
  int SWIG_arg = -1;
  UIChatItem *arg1 = (UIChatItem *) 0 ;
  int arg2 ;
  int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatItem,0))){
    SWIG_fail_ptr("UIChatItem_UpdateDetectRect",1,SWIGTYPE_p_UIChatItem);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->UpdateDetectRect(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatItem_GetString(lua_State* L) {
  int SWIG_arg = -1;
  UIChatItem *arg1 = (UIChatItem *) 0 ;
  wchar_t *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatItem,0))){
    SWIG_fail_ptr("UIChatItem_GetString",1,SWIGTYPE_p_UIChatItem);
  }
  
  result = (wchar_t *)(arg1)->GetString();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_wchar_t,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatItem_GetLinkString(lua_State* L) {
  int SWIG_arg = -1;
  UIChatItem *arg1 = (UIChatItem *) 0 ;
  wchar_t *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatItem,0))){
    SWIG_fail_ptr("UIChatItem_GetLinkString",1,SWIGTYPE_p_UIChatItem);
  }
  
  result = (wchar_t *)(arg1)->GetLinkString();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_wchar_t,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatItem_GetLinkSubString(lua_State* L) {
  int SWIG_arg = -1;
  UIChatItem *arg1 = (UIChatItem *) 0 ;
  unsigned int arg2 ;
  wchar_t *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatItem,0))){
    SWIG_fail_ptr("UIChatItem_GetLinkSubString",1,SWIGTYPE_p_UIChatItem);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  result = (wchar_t *)(arg1)->GetLinkSubString(arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_wchar_t,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatItem_SetLinkType(lua_State* L) {
  int SWIG_arg = -1;
  UIChatItem *arg1 = (UIChatItem *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatItem,0))){
    SWIG_fail_ptr("UIChatItem_SetLinkType",1,SWIGTYPE_p_UIChatItem);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetLinkType(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatItem_GetLinkType(lua_State* L) {
  int SWIG_arg = -1;
  UIChatItem *arg1 = (UIChatItem *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatItem,0))){
    SWIG_fail_ptr("UIChatItem_GetLinkType",1,SWIGTYPE_p_UIChatItem);
  }
  
  result = (unsigned int)(arg1)->GetLinkType();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_UIChatItem(lua_State* L) {
  int SWIG_arg = -1;
  UIChatItem *result = 0 ;
  
  result = (UIChatItem *)new UIChatItem();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIChatItem,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UIChatItem(lua_State* L) {
  int SWIG_arg = -1;
  UIChatItem *arg1 = (UIChatItem *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatItem,0))){
    SWIG_fail_ptr("delete_UIChatItem",1,SWIGTYPE_p_UIChatItem);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UIChatItem(void *obj) {
UIChatItem *arg1 = (UIChatItem *) obj;
delete arg1;
}
static swig_lua_method swig_UIChatItem_methods[] = {
    {"SetPos", _wrap_UIChatItem_SetPos}, 
    {"GetWidth", _wrap_UIChatItem_GetWidth}, 
    {"GetHeight", _wrap_UIChatItem_GetHeight}, 
    {"Detect", _wrap_UIChatItem_Detect}, 
    {"UpdateDetectRect", _wrap_UIChatItem_UpdateDetectRect}, 
    {"GetString", _wrap_UIChatItem_GetString}, 
    {"GetLinkString", _wrap_UIChatItem_GetLinkString}, 
    {"GetLinkSubString", _wrap_UIChatItem_GetLinkSubString}, 
    {"SetLinkType", _wrap_UIChatItem_SetLinkType}, 
    {"GetLinkType", _wrap_UIChatItem_GetLinkType}, 
    {0,0}
};
static swig_lua_attribute swig_UIChatItem_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UIChatItem_bases[] = {0};
swig_lua_class _wrap_class_UIChatItem = { "UIChatItem", &SWIGTYPE_p_UIChatItem,_wrap_new_UIChatItem, swig_delete_UIChatItem, swig_UIChatItem_methods, swig_UIChatItem_attributes, swig_UIChatItem_bases };

static int _wrap_UIChatString_SetString(lua_State* L) {
  int SWIG_arg = -1;
  UIChatString *arg1 = (UIChatString *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatString,0))){
    SWIG_fail_ptr("UIChatString_SetString",1,SWIGTYPE_p_UIChatString);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("UIChatString_SetString",2,SWIGTYPE_p_wchar_t);
  }
  
  (arg1)->SetString((wchar_t const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatString_SetStringA(lua_State* L) {
  int SWIG_arg = -1;
  UIChatString *arg1 = (UIChatString *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatString,0))){
    SWIG_fail_ptr("UIChatString_SetStringA",1,SWIGTYPE_p_UIChatString);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->SetStringA((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatString_GetUIChatItemPtr(lua_State* L) {
  int SWIG_arg = -1;
  UIChatString *arg1 = (UIChatString *) 0 ;
  UIChatItem *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatString,0))){
    SWIG_fail_ptr("UIChatString_GetUIChatItemPtr",1,SWIGTYPE_p_UIChatString);
  }
  
  result = (UIChatItem *)(arg1)->GetUIChatItemPtr();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIChatItem,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatString_GetString(lua_State* L) {
  int SWIG_arg = -1;
  UIChatString *arg1 = (UIChatString *) 0 ;
  wchar_t *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatString,0))){
    SWIG_fail_ptr("UIChatString_GetString",1,SWIGTYPE_p_UIChatString);
  }
  
  result = (wchar_t *)(arg1)->GetString();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_wchar_t,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_UIChatString(lua_State* L) {
  int SWIG_arg = -1;
  UIChatString *result = 0 ;
  
  result = (UIChatString *)new UIChatString();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIChatString,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UIChatString(lua_State* L) {
  int SWIG_arg = -1;
  UIChatString *arg1 = (UIChatString *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatString,0))){
    SWIG_fail_ptr("delete_UIChatString",1,SWIGTYPE_p_UIChatString);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UIChatString(void *obj) {
UIChatString *arg1 = (UIChatString *) obj;
delete arg1;
}
static swig_lua_method swig_UIChatString_methods[] = {
    {"SetString", _wrap_UIChatString_SetString}, 
    {"SetStringA", _wrap_UIChatString_SetStringA}, 
    {"GetUIChatItemPtr", _wrap_UIChatString_GetUIChatItemPtr}, 
    {"GetString", _wrap_UIChatString_GetString}, 
    {0,0}
};
static swig_lua_attribute swig_UIChatString_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UIChatString_bases[] = {&_wrap_class_UIChatItem,0};
swig_lua_class _wrap_class_UIChatString = { "UIChatString", &SWIGTYPE_p_UIChatString,_wrap_new_UIChatString, swig_delete_UIChatString, swig_UIChatString_methods, swig_UIChatString_attributes, swig_UIChatString_bases };

static int _wrap_UIChatLink_GetLinkString(lua_State* L) {
  int SWIG_arg = -1;
  UIChatLink *arg1 = (UIChatLink *) 0 ;
  wchar_t *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatLink,0))){
    SWIG_fail_ptr("UIChatLink_GetLinkString",1,SWIGTYPE_p_UIChatLink);
  }
  
  result = (wchar_t *)(arg1)->GetLinkString();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_wchar_t,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatLink_GetUIChatItemPtr(lua_State* L) {
  int SWIG_arg = -1;
  UIChatLink *arg1 = (UIChatLink *) 0 ;
  UIChatItem *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatLink,0))){
    SWIG_fail_ptr("UIChatLink_GetUIChatItemPtr",1,SWIGTYPE_p_UIChatLink);
  }
  
  result = (UIChatItem *)(arg1)->GetUIChatItemPtr();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIChatItem,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatLink_GetUIChatStringPtr(lua_State* L) {
  int SWIG_arg = -1;
  UIChatLink *arg1 = (UIChatLink *) 0 ;
  UIChatString *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatLink,0))){
    SWIG_fail_ptr("UIChatLink_GetUIChatStringPtr",1,SWIGTYPE_p_UIChatLink);
  }
  
  result = (UIChatString *)(arg1)->GetUIChatStringPtr();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIChatString,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_UIChatLink(lua_State* L) {
  int SWIG_arg = -1;
  UIChatLink *result = 0 ;
  
  result = (UIChatLink *)new UIChatLink();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIChatLink,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UIChatLink(lua_State* L) {
  int SWIG_arg = -1;
  UIChatLink *arg1 = (UIChatLink *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatLink,0))){
    SWIG_fail_ptr("delete_UIChatLink",1,SWIGTYPE_p_UIChatLink);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UIChatLink(void *obj) {
UIChatLink *arg1 = (UIChatLink *) obj;
delete arg1;
}
static swig_lua_method swig_UIChatLink_methods[] = {
    {"GetLinkString", _wrap_UIChatLink_GetLinkString}, 
    {"GetUIChatItemPtr", _wrap_UIChatLink_GetUIChatItemPtr}, 
    {"GetUIChatStringPtr", _wrap_UIChatLink_GetUIChatStringPtr}, 
    {0,0}
};
static swig_lua_attribute swig_UIChatLink_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UIChatLink_bases[] = {&_wrap_class_UIChatString,0};
swig_lua_class _wrap_class_UIChatLink = { "UIChatLink", &SWIGTYPE_p_UIChatLink,_wrap_new_UIChatLink, swig_delete_UIChatLink, swig_UIChatLink_methods, swig_UIChatLink_attributes, swig_UIChatLink_bases };

static int _wrap_UIChatRow_AddItem(lua_State* L) {
  int SWIG_arg = -1;
  UIChatRow *arg1 = (UIChatRow *) 0 ;
  UIChatItem *arg2 = (UIChatItem *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatRow,0))){
    SWIG_fail_ptr("UIChatRow_AddItem",1,SWIGTYPE_p_UIChatRow);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIChatItem,0))){
    SWIG_fail_ptr("UIChatRow_AddItem",2,SWIGTYPE_p_UIChatItem);
  }
  
  (arg1)->AddItem(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatRow_GetChatItem(lua_State* L) {
  int SWIG_arg = -1;
  UIChatRow *arg1 = (UIChatRow *) 0 ;
  unsigned int arg2 ;
  UIChatItem *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatRow,0))){
    SWIG_fail_ptr("UIChatRow_GetChatItem",1,SWIGTYPE_p_UIChatRow);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  result = (UIChatItem *)(arg1)->GetChatItem(arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIChatItem,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatRow_AddStringW(lua_State* L) {
  int SWIG_arg = -1;
  UIChatRow *arg1 = (UIChatRow *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  unsigned int arg6 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  if(!lua_isnumber(L,6)) SWIG_fail_arg(6);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatRow,0))){
    SWIG_fail_ptr("UIChatRow_AddStringW",1,SWIGTYPE_p_UIChatRow);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("UIChatRow_AddStringW",2,SWIGTYPE_p_wchar_t);
  }
  
  arg3 = (unsigned int)lua_tonumber(L, 3);
  arg4 = (unsigned int)lua_tonumber(L, 4);
  arg5 = (unsigned int)lua_tonumber(L, 5);
  arg6 = (unsigned int)lua_tonumber(L, 6);
  (arg1)->AddStringW((wchar_t const *)arg2,arg3,arg4,arg5,arg6);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatRow_AddStringA(lua_State* L) {
  int SWIG_arg = -1;
  UIChatRow *arg1 = (UIChatRow *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  unsigned int arg6 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  if(!lua_isnumber(L,6)) SWIG_fail_arg(6);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatRow,0))){
    SWIG_fail_ptr("UIChatRow_AddStringA",1,SWIGTYPE_p_UIChatRow);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  arg4 = (unsigned int)lua_tonumber(L, 4);
  arg5 = (unsigned int)lua_tonumber(L, 5);
  arg6 = (unsigned int)lua_tonumber(L, 6);
  (arg1)->AddStringA((char const *)arg2,arg3,arg4,arg5,arg6);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatRow_GetHeight(lua_State* L) {
  int SWIG_arg = -1;
  UIChatRow *arg1 = (UIChatRow *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatRow,0))){
    SWIG_fail_ptr("UIChatRow_GetHeight",1,SWIGTYPE_p_UIChatRow);
  }
  
  result = (unsigned int)(arg1)->GetHeight();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatRow_GetWidth(lua_State* L) {
  int SWIG_arg = -1;
  UIChatRow *arg1 = (UIChatRow *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatRow,0))){
    SWIG_fail_ptr("UIChatRow_GetWidth",1,SWIGTYPE_p_UIChatRow);
  }
  
  result = (unsigned int)(arg1)->GetWidth();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_UIChatRow(lua_State* L) {
  int SWIG_arg = -1;
  UIChatRow *result = 0 ;
  
  result = (UIChatRow *)new UIChatRow();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIChatRow,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UIChatRow(lua_State* L) {
  int SWIG_arg = -1;
  UIChatRow *arg1 = (UIChatRow *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatRow,0))){
    SWIG_fail_ptr("delete_UIChatRow",1,SWIGTYPE_p_UIChatRow);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UIChatRow(void *obj) {
UIChatRow *arg1 = (UIChatRow *) obj;
delete arg1;
}
static swig_lua_method swig_UIChatRow_methods[] = {
    {"AddItem", _wrap_UIChatRow_AddItem}, 
    {"GetChatItem", _wrap_UIChatRow_GetChatItem}, 
    {"AddStringW", _wrap_UIChatRow_AddStringW}, 
    {"AddStringA", _wrap_UIChatRow_AddStringA}, 
    {"GetHeight", _wrap_UIChatRow_GetHeight}, 
    {"GetWidth", _wrap_UIChatRow_GetWidth}, 
    {0,0}
};
static swig_lua_attribute swig_UIChatRow_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UIChatRow_bases[] = {0};
swig_lua_class _wrap_class_UIChatRow = { "UIChatRow", &SWIGTYPE_p_UIChatRow,_wrap_new_UIChatRow, swig_delete_UIChatRow, swig_UIChatRow_methods, swig_UIChatRow_attributes, swig_UIChatRow_bases };

static int _wrap_UIChatPanel_CreateRow(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  UIChatRow *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_CreateRow",1,SWIGTYPE_p_UIChatPanel);
  }
  
  result = (UIChatRow *)(arg1)->CreateRow();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIChatRow,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_GetRow(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  unsigned int arg2 ;
  UIChatRow *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_GetRow",1,SWIGTYPE_p_UIChatPanel);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  result = (UIChatRow *)(arg1)->GetRow(arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIChatRow,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_GetLastRow(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  UIChatRow *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_GetLastRow",1,SWIGTYPE_p_UIChatPanel);
  }
  
  result = (UIChatRow *)(arg1)->GetLastRow();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIChatRow,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_GetSafeLastRow(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  UIChatRow *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_GetSafeLastRow",1,SWIGTYPE_p_UIChatPanel);
  }
  
  result = (UIChatRow *)(arg1)->GetSafeLastRow();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIChatRow,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_CreatePrevBtn(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  UIButton *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_CreatePrevBtn",1,SWIGTYPE_p_UIChatPanel);
  }
  
  result = (UIButton *)(arg1)->CreatePrevBtn();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIButton,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_CreateNextBtn(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  UIButton *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_CreateNextBtn",1,SWIGTYPE_p_UIChatPanel);
  }
  
  result = (UIButton *)(arg1)->CreateNextBtn();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIButton,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_CreateHomeBtn(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  UIButton *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_CreateHomeBtn",1,SWIGTYPE_p_UIChatPanel);
  }
  
  result = (UIButton *)(arg1)->CreateHomeBtn();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIButton,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_CreateEndBtn(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  UIButton *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_CreateEndBtn",1,SWIGTYPE_p_UIChatPanel);
  }
  
  result = (UIButton *)(arg1)->CreateEndBtn();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIButton,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_Start2BottomRow(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_Start2BottomRow",1,SWIGTYPE_p_UIChatPanel);
  }
  
  (arg1)->Start2BottomRow();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_End2TopRow(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_End2TopRow",1,SWIGTYPE_p_UIChatPanel);
  }
  
  (arg1)->End2TopRow();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_UpRow(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_UpRow",1,SWIGTYPE_p_UIChatPanel);
  }
  
  (arg1)->UpRow();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_DownRow(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_DownRow",1,SWIGTYPE_p_UIChatPanel);
  }
  
  (arg1)->DownRow();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_HomeRow(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_HomeRow",1,SWIGTYPE_p_UIChatPanel);
  }
  
  (arg1)->HomeRow();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_EndRow(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_EndRow",1,SWIGTYPE_p_UIChatPanel);
  }
  
  (arg1)->EndRow();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_SetRow(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_SetRow",1,SWIGTYPE_p_UIChatPanel);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  (arg1)->SetRow(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_GetFontHeight(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_GetFontHeight",1,SWIGTYPE_p_UIChatPanel);
  }
  
  result = (unsigned int)(arg1)->GetFontHeight();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_SetEnableScroll(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_SetEnableScroll",1,SWIGTYPE_p_UIChatPanel);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetEnableScroll(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_IsEnableScroll(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_IsEnableScroll",1,SWIGTYPE_p_UIChatPanel);
  }
  
  result = (bool)(arg1)->IsEnableScroll();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_ClearAllRow(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_ClearAllRow",1,SWIGTYPE_p_UIChatPanel);
  }
  
  (arg1)->ClearAllRow();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_SetDetectRect(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_SetDetectRect",1,SWIGTYPE_p_UIChatPanel);
  }
  
  (arg1)->SetDetectRect();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_SetImage(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_SetImage",1,SWIGTYPE_p_UIChatPanel);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  (arg1)->SetImage(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_Redraw(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_Redraw",1,SWIGTYPE_p_UIChatPanel);
  }
  
  (arg1)->Redraw();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_FillImage(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_FillImage",1,SWIGTYPE_p_UIChatPanel);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->FillImage(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_GetWidth(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_GetWidth",1,SWIGTYPE_p_UIChatPanel);
  }
  
  result = (unsigned int)(arg1)->GetWidth();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_GetHeight(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_GetHeight",1,SWIGTYPE_p_UIChatPanel);
  }
  
  result = (unsigned int)(arg1)->GetHeight();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_SetFontColor(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_SetFontColor",1,SWIGTYPE_p_UIChatPanel);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetFontColor(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_AddStringA(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_AddStringA",1,SWIGTYPE_p_UIChatPanel);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->AddStringA((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_AddStringW(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_AddStringW",1,SWIGTYPE_p_UIChatPanel);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("UIChatPanel_AddStringW",2,SWIGTYPE_p_wchar_t);
  }
  
  (arg1)->AddStringW((wchar_t const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_AddStringWNoPrefix(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_AddStringWNoPrefix",1,SWIGTYPE_p_UIChatPanel);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("UIChatPanel_AddStringWNoPrefix",2,SWIGTYPE_p_wchar_t);
  }
  
  (arg1)->AddStringWNoPrefix((wchar_t const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_RowListCount(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_RowListCount",1,SWIGTYPE_p_UIChatPanel);
  }
  
  result = (unsigned int)(arg1)->RowListCount();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_GetHomeRow(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  UIChatRow *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_GetHomeRow",1,SWIGTYPE_p_UIChatPanel);
  }
  
  result = (UIChatRow *)(arg1)->GetHomeRow();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIChatRow,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_GetTotalHeight(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_GetTotalHeight",1,SWIGTYPE_p_UIChatPanel);
  }
  
  result = (unsigned int)(arg1)->GetTotalHeight();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_GetAllRowHeight(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_GetAllRowHeight",1,SWIGTYPE_p_UIChatPanel);
  }
  
  result = (unsigned int)(arg1)->GetAllRowHeight();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_GetStartRowIndex(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_GetStartRowIndex",1,SWIGTYPE_p_UIChatPanel);
  }
  
  result = (int)(arg1)->GetStartRowIndex();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_GetEndRowIndex(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_GetEndRowIndex",1,SWIGTYPE_p_UIChatPanel);
  }
  
  result = (int)(arg1)->GetEndRowIndex();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_SetImageWH(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_SetImageWH",1,SWIGTYPE_p_UIChatPanel);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  (arg1)->SetImageWH(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_SetContinueRun(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_SetContinueRun",1,SWIGTYPE_p_UIChatPanel);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetContinueRun(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_LockChatPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_LockChatPanel",1,SWIGTYPE_p_UIChatPanel);
  }
  
  (arg1)->LockChatPanel();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_UnLockChatPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_UnLockChatPanel",1,SWIGTYPE_p_UIChatPanel);
  }
  
  (arg1)->UnLockChatPanel();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_IsEndRow(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_IsEndRow",1,SWIGTYPE_p_UIChatPanel);
  }
  
  result = (bool)(arg1)->IsEndRow();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_IsStartRow(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_IsStartRow",1,SWIGTYPE_p_UIChatPanel);
  }
  
  result = (bool)(arg1)->IsStartRow();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_UpdateDetectRect(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_UpdateDetectRect",1,SWIGTYPE_p_UIChatPanel);
  }
  
  (arg1)->UpdateDetectRect();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_GetLinkItem(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  UIChatItem *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_GetLinkItem",1,SWIGTYPE_p_UIChatPanel);
  }
  
  result = (UIChatItem *)(arg1)->GetLinkItem();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIChatItem,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatPanel_ClearLinkItem(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("UIChatPanel_ClearLinkItem",1,SWIGTYPE_p_UIChatPanel);
  }
  
  (arg1)->ClearLinkItem();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_UIChatPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *result = 0 ;
  
  result = (UIChatPanel *)new UIChatPanel();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIChatPanel,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UIChatPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *arg1 = (UIChatPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatPanel,0))){
    SWIG_fail_ptr("delete_UIChatPanel",1,SWIGTYPE_p_UIChatPanel);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UIChatPanel(void *obj) {
UIChatPanel *arg1 = (UIChatPanel *) obj;
delete arg1;
}
static swig_lua_method swig_UIChatPanel_methods[] = {
    {"CreateRow", _wrap_UIChatPanel_CreateRow}, 
    {"GetRow", _wrap_UIChatPanel_GetRow}, 
    {"GetLastRow", _wrap_UIChatPanel_GetLastRow}, 
    {"GetSafeLastRow", _wrap_UIChatPanel_GetSafeLastRow}, 
    {"CreatePrevBtn", _wrap_UIChatPanel_CreatePrevBtn}, 
    {"CreateNextBtn", _wrap_UIChatPanel_CreateNextBtn}, 
    {"CreateHomeBtn", _wrap_UIChatPanel_CreateHomeBtn}, 
    {"CreateEndBtn", _wrap_UIChatPanel_CreateEndBtn}, 
    {"Start2BottomRow", _wrap_UIChatPanel_Start2BottomRow}, 
    {"End2TopRow", _wrap_UIChatPanel_End2TopRow}, 
    {"UpRow", _wrap_UIChatPanel_UpRow}, 
    {"DownRow", _wrap_UIChatPanel_DownRow}, 
    {"HomeRow", _wrap_UIChatPanel_HomeRow}, 
    {"EndRow", _wrap_UIChatPanel_EndRow}, 
    {"SetRow", _wrap_UIChatPanel_SetRow}, 
    {"GetFontHeight", _wrap_UIChatPanel_GetFontHeight}, 
    {"SetEnableScroll", _wrap_UIChatPanel_SetEnableScroll}, 
    {"IsEnableScroll", _wrap_UIChatPanel_IsEnableScroll}, 
    {"ClearAllRow", _wrap_UIChatPanel_ClearAllRow}, 
    {"SetDetectRect", _wrap_UIChatPanel_SetDetectRect}, 
    {"SetImage", _wrap_UIChatPanel_SetImage}, 
    {"Redraw", _wrap_UIChatPanel_Redraw}, 
    {"FillImage", _wrap_UIChatPanel_FillImage}, 
    {"GetWidth", _wrap_UIChatPanel_GetWidth}, 
    {"GetHeight", _wrap_UIChatPanel_GetHeight}, 
    {"SetFontColor", _wrap_UIChatPanel_SetFontColor}, 
    {"AddStringA", _wrap_UIChatPanel_AddStringA}, 
    {"AddStringW", _wrap_UIChatPanel_AddStringW}, 
    {"AddStringWNoPrefix", _wrap_UIChatPanel_AddStringWNoPrefix}, 
    {"RowListCount", _wrap_UIChatPanel_RowListCount}, 
    {"GetHomeRow", _wrap_UIChatPanel_GetHomeRow}, 
    {"GetTotalHeight", _wrap_UIChatPanel_GetTotalHeight}, 
    {"GetAllRowHeight", _wrap_UIChatPanel_GetAllRowHeight}, 
    {"GetStartRowIndex", _wrap_UIChatPanel_GetStartRowIndex}, 
    {"GetEndRowIndex", _wrap_UIChatPanel_GetEndRowIndex}, 
    {"SetImageWH", _wrap_UIChatPanel_SetImageWH}, 
    {"SetContinueRun", _wrap_UIChatPanel_SetContinueRun}, 
    {"LockChatPanel", _wrap_UIChatPanel_LockChatPanel}, 
    {"UnLockChatPanel", _wrap_UIChatPanel_UnLockChatPanel}, 
    {"IsEndRow", _wrap_UIChatPanel_IsEndRow}, 
    {"IsStartRow", _wrap_UIChatPanel_IsStartRow}, 
    {"UpdateDetectRect", _wrap_UIChatPanel_UpdateDetectRect}, 
    {"GetLinkItem", _wrap_UIChatPanel_GetLinkItem}, 
    {"ClearLinkItem", _wrap_UIChatPanel_ClearLinkItem}, 
    {0,0}
};
static swig_lua_attribute swig_UIChatPanel_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UIChatPanel_bases[] = {&_wrap_class_UIStaticText,0};
swig_lua_class _wrap_class_UIChatPanel = { "UIChatPanel", &SWIGTYPE_p_UIChatPanel,_wrap_new_UIChatPanel, swig_delete_UIChatPanel, swig_UIChatPanel_methods, swig_UIChatPanel_attributes, swig_UIChatPanel_bases };

static int _wrap_UIChatEditPanel_LoadText(lua_State* L) {
  int SWIG_arg = -1;
  UIChatEditPanel *arg1 = (UIChatEditPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatEditPanel,0))){
    SWIG_fail_ptr("UIChatEditPanel_LoadText",1,SWIGTYPE_p_UIChatEditPanel);
  }
  
  (arg1)->LoadText();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIChatEditPanel_SaveText(lua_State* L) {
  int SWIG_arg = -1;
  UIChatEditPanel *arg1 = (UIChatEditPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatEditPanel,0))){
    SWIG_fail_ptr("UIChatEditPanel_SaveText",1,SWIGTYPE_p_UIChatEditPanel);
  }
  
  (arg1)->SaveText();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_UIChatEditPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIChatEditPanel *result = 0 ;
  
  result = (UIChatEditPanel *)new UIChatEditPanel();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIChatEditPanel,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UIChatEditPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIChatEditPanel *arg1 = (UIChatEditPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIChatEditPanel,0))){
    SWIG_fail_ptr("delete_UIChatEditPanel",1,SWIGTYPE_p_UIChatEditPanel);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UIChatEditPanel(void *obj) {
UIChatEditPanel *arg1 = (UIChatEditPanel *) obj;
delete arg1;
}
static swig_lua_method swig_UIChatEditPanel_methods[] = {
    {"LoadText", _wrap_UIChatEditPanel_LoadText}, 
    {"SaveText", _wrap_UIChatEditPanel_SaveText}, 
    {0,0}
};
static swig_lua_attribute swig_UIChatEditPanel_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UIChatEditPanel_bases[] = {&_wrap_class_UIChatPanel,0};
swig_lua_class _wrap_class_UIChatEditPanel = { "UIChatEditPanel", &SWIGTYPE_p_UIChatEditPanel,_wrap_new_UIChatEditPanel, swig_delete_UIChatEditPanel, swig_UIChatEditPanel_methods, swig_UIChatEditPanel_attributes, swig_UIChatEditPanel_bases };

static int _wrap_new_UIMiniMap(lua_State* L) {
  int SWIG_arg = -1;
  UIMiniMap *result = 0 ;
  
  result = (UIMiniMap *)new UIMiniMap();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIMiniMap,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UIMiniMap(lua_State* L) {
  int SWIG_arg = -1;
  UIMiniMap *arg1 = (UIMiniMap *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIMiniMap,0))){
    SWIG_fail_ptr("delete_UIMiniMap",1,SWIGTYPE_p_UIMiniMap);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIMiniMap_SetupRatio(lua_State* L) {
  int SWIG_arg = -1;
  UIMiniMap *arg1 = (UIMiniMap *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIMiniMap,0))){
    SWIG_fail_ptr("UIMiniMap_SetupRatio",1,SWIGTYPE_p_UIMiniMap);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  (arg1)->SetupRatio(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIMiniMap_ResetPlayerPos(lua_State* L) {
  int SWIG_arg = -1;
  UIMiniMap *arg1 = (UIMiniMap *) 0 ;
  UInt arg2 ;
  UInt arg3 ;
  UInt result;
  UInt *argp2 ;
  UInt *argp3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isuserdata(L,2)) SWIG_fail_arg(2);
  if(!lua_isuserdata(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIMiniMap,0))){
    SWIG_fail_ptr("UIMiniMap_ResetPlayerPos",1,SWIGTYPE_p_UIMiniMap);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_UInt,0))){
    SWIG_fail_ptr("UIMiniMap_ResetPlayerPos",2,SWIGTYPE_UInt);
  }
  arg2 = *argp2;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&argp3,SWIGTYPE_p_UInt,0))){
    SWIG_fail_ptr("UIMiniMap_ResetPlayerPos",3,SWIGTYPE_UInt);
  }
  arg3 = *argp3;
  
  result = (arg1)->ResetPlayerPos(arg2,arg3);
  SWIG_arg=0;
  {
    UInt * resultptr = new UInt((UInt &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_UInt,1); SWIG_arg++;
  }
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIMiniMap_SetImageA(lua_State* L) {
  int SWIG_arg = -1;
  UIMiniMap *arg1 = (UIMiniMap *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIMiniMap,0))){
    SWIG_fail_ptr("UIMiniMap_SetImageA",1,SWIGTYPE_p_UIMiniMap);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->SetImageA((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIMiniMap_SetDefaultMask(lua_State* L) {
  int SWIG_arg = -1;
  UIMiniMap *arg1 = (UIMiniMap *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIMiniMap,0))){
    SWIG_fail_ptr("UIMiniMap_SetDefaultMask",1,SWIGTYPE_p_UIMiniMap);
  }
  
  (arg1)->SetDefaultMask();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIMiniMap_SetPlayerImageA(lua_State* L) {
  int SWIG_arg = -1;
  UIMiniMap *arg1 = (UIMiniMap *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIMiniMap,0))){
    SWIG_fail_ptr("UIMiniMap_SetPlayerImageA",1,SWIGTYPE_p_UIMiniMap);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->SetPlayerImageA((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIMiniMap_SetPlayerImageRect(lua_State* L) {
  int SWIG_arg = -1;
  UIMiniMap *arg1 = (UIMiniMap *) 0 ;
  Int arg2 ;
  Int arg3 ;
  Int arg4 ;
  Int arg5 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIMiniMap,0))){
    SWIG_fail_ptr("UIMiniMap_SetPlayerImageRect",1,SWIGTYPE_p_UIMiniMap);
  }
  
  arg2 = (Int)lua_tonumber(L, 2);
  arg3 = (Int)lua_tonumber(L, 3);
  arg4 = (Int)lua_tonumber(L, 4);
  arg5 = (Int)lua_tonumber(L, 5);
  (arg1)->SetPlayerImageRect(arg2,arg3,arg4,arg5);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UIMiniMap(void *obj) {
UIMiniMap *arg1 = (UIMiniMap *) obj;
delete arg1;
}
static swig_lua_method swig_UIMiniMap_methods[] = {
    {"SetupRatio", _wrap_UIMiniMap_SetupRatio}, 
    {"ResetPlayerPos", _wrap_UIMiniMap_ResetPlayerPos}, 
    {"SetImageA", _wrap_UIMiniMap_SetImageA}, 
    {"SetDefaultMask", _wrap_UIMiniMap_SetDefaultMask}, 
    {"SetPlayerImageA", _wrap_UIMiniMap_SetPlayerImageA}, 
    {"SetPlayerImageRect", _wrap_UIMiniMap_SetPlayerImageRect}, 
    {0,0}
};
static swig_lua_attribute swig_UIMiniMap_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UIMiniMap_bases[] = {&_wrap_class_UIItem,0};
swig_lua_class _wrap_class_UIMiniMap = { "UIMiniMap", &SWIGTYPE_p_UIMiniMap,_wrap_new_UIMiniMap, swig_delete_UIMiniMap, swig_UIMiniMap_methods, swig_UIMiniMap_attributes, swig_UIMiniMap_bases };

static int _wrap_UIPanel_SetDetectRect(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *arg1 = (UIPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIPanel_SetDetectRect",1,SWIGTYPE_p_UIPanel);
  }
  
  (arg1)->SetDetectRect();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanel_GetX(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *arg1 = (UIPanel *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIPanel_GetX",1,SWIGTYPE_p_UIPanel);
  }
  
  result = (int)(arg1)->GetX();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanel_GetY(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *arg1 = (UIPanel *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIPanel_GetY",1,SWIGTYPE_p_UIPanel);
  }
  
  result = (int)(arg1)->GetY();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanel_SetPos(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *arg1 = (UIPanel *) 0 ;
  int arg2 ;
  int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIPanel_SetPos",1,SWIGTYPE_p_UIPanel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->SetPos(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanel_SetRenderStyle(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *arg1 = (UIPanel *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIPanel_SetRenderStyle",1,SWIGTYPE_p_UIPanel);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetRenderStyle(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanel_GetRenderStyle(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *arg1 = (UIPanel *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIPanel_GetRenderStyle",1,SWIGTYPE_p_UIPanel);
  }
  
  result = (unsigned int)(arg1)->GetRenderStyle();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanel_SetEnable(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *arg1 = (UIPanel *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIPanel_SetEnable",1,SWIGTYPE_p_UIPanel);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetEnable(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanel_SetAllColor(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *arg1 = (UIPanel *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIPanel_SetAllColor",1,SWIGTYPE_p_UIPanel);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetAllColor(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanel_GetMouseOver(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *arg1 = (UIPanel *) 0 ;
  UIItem *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIPanel_GetMouseOver",1,SWIGTYPE_p_UIPanel);
  }
  
  result = (UIItem *)(arg1)->GetMouseOver();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIItem,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanel_SetImageFileA(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *arg1 = (UIPanel *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  if(!lua_isnumber(L,6)) SWIG_fail_arg(6);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIPanel_SetImageFileA",1,SWIGTYPE_p_UIPanel);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->SetImageFileA((char const *)arg2,arg3,arg4,arg5,arg6);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanel_SetTextureUI(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *arg1 = (UIPanel *) 0 ;
  UIManager *arg2 = (UIManager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIPanel_SetTextureUI",1,SWIGTYPE_p_UIPanel);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIPanel_SetTextureUI",2,SWIGTYPE_p_UIManager);
  }
  
  (arg1)->SetTextureUI(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanel_SetTextureWH(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *arg1 = (UIPanel *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIPanel_SetTextureWH",1,SWIGTYPE_p_UIPanel);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  (arg1)->SetTextureWH(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanel_SetWH(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *arg1 = (UIPanel *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIPanel_SetWH",1,SWIGTYPE_p_UIPanel);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  (arg1)->SetWH(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanel_SetImageNil(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *arg1 = (UIPanel *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIPanel_SetImageNil",1,SWIGTYPE_p_UIPanel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->SetImageNil(arg2,arg3,arg4,arg5);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanel_AddUIItem(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *arg1 = (UIPanel *) 0 ;
  UIItem *arg2 = (UIItem *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIPanel_AddUIItem",1,SWIGTYPE_p_UIPanel);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIPanel_AddUIItem",2,SWIGTYPE_p_UIItem);
  }
  
  (arg1)->AddUIItem(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanel_SetAutoDelete(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *arg1 = (UIPanel *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIPanel_SetAutoDelete",1,SWIGTYPE_p_UIPanel);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetAutoDelete(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanel_SetLuaPerLButtonUp(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *arg1 = (UIPanel *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIPanel_SetLuaPerLButtonUp",1,SWIGTYPE_p_UIPanel);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->SetLuaPerLButtonUp((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanel_SetLuaPerRButtonUp(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *arg1 = (UIPanel *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIPanel_SetLuaPerRButtonUp",1,SWIGTYPE_p_UIPanel);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->SetLuaPerRButtonUp((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanel_Freeze(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *arg1 = (UIPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIPanel_Freeze",1,SWIGTYPE_p_UIPanel);
  }
  
  (arg1)->Freeze();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanel_Unfreeze(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *arg1 = (UIPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIPanel_Unfreeze",1,SWIGTYPE_p_UIPanel);
  }
  
  (arg1)->Unfreeze();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanel_IsFreeze(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *arg1 = (UIPanel *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIPanel_IsFreeze",1,SWIGTYPE_p_UIPanel);
  }
  
  result = (bool)(arg1)->IsFreeze();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_UIPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *result = 0 ;
  
  result = (UIPanel *)new UIPanel();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIPanel,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UIPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *arg1 = (UIPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("delete_UIPanel",1,SWIGTYPE_p_UIPanel);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UIPanel(void *obj) {
UIPanel *arg1 = (UIPanel *) obj;
delete arg1;
}
static swig_lua_method swig_UIPanel_methods[] = {
    {"SetDetectRect", _wrap_UIPanel_SetDetectRect}, 
    {"GetX", _wrap_UIPanel_GetX}, 
    {"GetY", _wrap_UIPanel_GetY}, 
    {"SetPos", _wrap_UIPanel_SetPos}, 
    {"SetRenderStyle", _wrap_UIPanel_SetRenderStyle}, 
    {"GetRenderStyle", _wrap_UIPanel_GetRenderStyle}, 
    {"SetEnable", _wrap_UIPanel_SetEnable}, 
    {"SetAllColor", _wrap_UIPanel_SetAllColor}, 
    {"GetMouseOver", _wrap_UIPanel_GetMouseOver}, 
    {"SetImageFileA", _wrap_UIPanel_SetImageFileA}, 
    {"SetTextureUI", _wrap_UIPanel_SetTextureUI}, 
    {"SetTextureWH", _wrap_UIPanel_SetTextureWH}, 
    {"SetWH", _wrap_UIPanel_SetWH}, 
    {"SetImageNil", _wrap_UIPanel_SetImageNil}, 
    {"AddUIItem", _wrap_UIPanel_AddUIItem}, 
    {"SetAutoDelete", _wrap_UIPanel_SetAutoDelete}, 
    {"SetLuaPerLButtonUp", _wrap_UIPanel_SetLuaPerLButtonUp}, 
    {"SetLuaPerRButtonUp", _wrap_UIPanel_SetLuaPerRButtonUp}, 
    {"Freeze", _wrap_UIPanel_Freeze}, 
    {"Unfreeze", _wrap_UIPanel_Unfreeze}, 
    {"IsFreeze", _wrap_UIPanel_IsFreeze}, 
    {0,0}
};
static swig_lua_attribute swig_UIPanel_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UIPanel_bases[] = {&_wrap_class_UIItem,0};
swig_lua_class _wrap_class_UIPanel = { "UIPanel", &SWIGTYPE_p_UIPanel,_wrap_new_UIPanel, swig_delete_UIPanel, swig_UIPanel_methods, swig_UIPanel_attributes, swig_UIPanel_bases };

static int _wrap_UIImage_SetDetectRect(lua_State* L) {
  int SWIG_arg = -1;
  UIImage *arg1 = (UIImage *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIImage,0))){
    SWIG_fail_ptr("UIImage_SetDetectRect",1,SWIGTYPE_p_UIImage);
  }
  
  (arg1)->SetDetectRect();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIImage_GetX(lua_State* L) {
  int SWIG_arg = -1;
  UIImage *arg1 = (UIImage *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIImage,0))){
    SWIG_fail_ptr("UIImage_GetX",1,SWIGTYPE_p_UIImage);
  }
  
  result = (int)(arg1)->GetX();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIImage_GetY(lua_State* L) {
  int SWIG_arg = -1;
  UIImage *arg1 = (UIImage *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIImage,0))){
    SWIG_fail_ptr("UIImage_GetY",1,SWIGTYPE_p_UIImage);
  }
  
  result = (int)(arg1)->GetY();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIImage_SetPos(lua_State* L) {
  int SWIG_arg = -1;
  UIImage *arg1 = (UIImage *) 0 ;
  int arg2 ;
  int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIImage,0))){
    SWIG_fail_ptr("UIImage_SetPos",1,SWIGTYPE_p_UIImage);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->SetPos(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIImage_SetImageFileA(lua_State* L) {
  int SWIG_arg = -1;
  UIImage *arg1 = (UIImage *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  if(!lua_isnumber(L,6)) SWIG_fail_arg(6);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIImage,0))){
    SWIG_fail_ptr("UIImage_SetImageFileA",1,SWIGTYPE_p_UIImage);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->SetImageFileA((char const *)arg2,arg3,arg4,arg5,arg6);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIImage_SetImageFile(lua_State* L) {
  int SWIG_arg = -1;
  UIImage *arg1 = (UIImage *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  if(!lua_isnumber(L,6)) SWIG_fail_arg(6);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIImage,0))){
    SWIG_fail_ptr("UIImage_SetImageFile",1,SWIGTYPE_p_UIImage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("UIImage_SetImageFile",2,SWIGTYPE_p_wchar_t);
  }
  
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->SetImageFile((wchar_t const *)arg2,arg3,arg4,arg5,arg6);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIImage_SetImage(lua_State* L) {
  int SWIG_arg = -1;
  UIImage *arg1 = (UIImage *) 0 ;
  CImage *arg2 = (CImage *) 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  if(!lua_isnumber(L,6)) SWIG_fail_arg(6);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIImage,0))){
    SWIG_fail_ptr("UIImage_SetImage",1,SWIGTYPE_p_UIImage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_CImage,0))){
    SWIG_fail_ptr("UIImage_SetImage",2,SWIGTYPE_p_CImage);
  }
  
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->SetImage(arg2,arg3,arg4,arg5,arg6);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIImage_FillImage(lua_State* L) {
  int SWIG_arg = -1;
  UIImage *arg1 = (UIImage *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIImage,0))){
    SWIG_fail_ptr("UIImage_FillImage",1,SWIGTYPE_p_UIImage);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->FillImage(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIImage_SetWidth(lua_State* L) {
  int SWIG_arg = -1;
  UIImage *arg1 = (UIImage *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIImage,0))){
    SWIG_fail_ptr("UIImage_SetWidth",1,SWIGTYPE_p_UIImage);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetWidth(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIImage_SetHeight(lua_State* L) {
  int SWIG_arg = -1;
  UIImage *arg1 = (UIImage *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIImage,0))){
    SWIG_fail_ptr("UIImage_SetHeight",1,SWIGTYPE_p_UIImage);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetHeight(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIImage_Set2TopLeft(lua_State* L) {
  int SWIG_arg = -1;
  UIImage *arg1 = (UIImage *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIImage,0))){
    SWIG_fail_ptr("UIImage_Set2TopLeft",1,SWIGTYPE_p_UIImage);
  }
  
  (arg1)->Set2TopLeft();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIImage_Set2BottomLeft(lua_State* L) {
  int SWIG_arg = -1;
  UIImage *arg1 = (UIImage *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIImage,0))){
    SWIG_fail_ptr("UIImage_Set2BottomLeft",1,SWIGTYPE_p_UIImage);
  }
  
  (arg1)->Set2BottomLeft();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIImage_Set2TopRight(lua_State* L) {
  int SWIG_arg = -1;
  UIImage *arg1 = (UIImage *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIImage,0))){
    SWIG_fail_ptr("UIImage_Set2TopRight",1,SWIGTYPE_p_UIImage);
  }
  
  (arg1)->Set2TopRight();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIImage_Set2BottomRight(lua_State* L) {
  int SWIG_arg = -1;
  UIImage *arg1 = (UIImage *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIImage,0))){
    SWIG_fail_ptr("UIImage_Set2BottomRight",1,SWIGTYPE_p_UIImage);
  }
  
  (arg1)->Set2BottomRight();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIImage_SetAutoDelete(lua_State* L) {
  int SWIG_arg = -1;
  UIImage *arg1 = (UIImage *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIImage,0))){
    SWIG_fail_ptr("UIImage_SetAutoDelete",1,SWIGTYPE_p_UIImage);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetAutoDelete(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIImage_GetUIImagePtr(lua_State* L) {
  int SWIG_arg = -1;
  UIImage *arg1 = (UIImage *) 0 ;
  UIImage *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIImage,0))){
    SWIG_fail_ptr("UIImage_GetUIImagePtr",1,SWIGTYPE_p_UIImage);
  }
  
  result = (UIImage *)(arg1)->GetUIImagePtr();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIImage,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_UIImage(lua_State* L) {
  int SWIG_arg = -1;
  UIImage *result = 0 ;
  
  result = (UIImage *)new UIImage();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIImage,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UIImage(lua_State* L) {
  int SWIG_arg = -1;
  UIImage *arg1 = (UIImage *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIImage,0))){
    SWIG_fail_ptr("delete_UIImage",1,SWIGTYPE_p_UIImage);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UIImage(void *obj) {
UIImage *arg1 = (UIImage *) obj;
delete arg1;
}
static swig_lua_method swig_UIImage_methods[] = {
    {"SetDetectRect", _wrap_UIImage_SetDetectRect}, 
    {"GetX", _wrap_UIImage_GetX}, 
    {"GetY", _wrap_UIImage_GetY}, 
    {"SetPos", _wrap_UIImage_SetPos}, 
    {"SetImageFileA", _wrap_UIImage_SetImageFileA}, 
    {"SetImageFile", _wrap_UIImage_SetImageFile}, 
    {"SetImage", _wrap_UIImage_SetImage}, 
    {"FillImage", _wrap_UIImage_FillImage}, 
    {"SetWidth", _wrap_UIImage_SetWidth}, 
    {"SetHeight", _wrap_UIImage_SetHeight}, 
    {"Set2TopLeft", _wrap_UIImage_Set2TopLeft}, 
    {"Set2BottomLeft", _wrap_UIImage_Set2BottomLeft}, 
    {"Set2TopRight", _wrap_UIImage_Set2TopRight}, 
    {"Set2BottomRight", _wrap_UIImage_Set2BottomRight}, 
    {"SetAutoDelete", _wrap_UIImage_SetAutoDelete}, 
    {"GetUIImagePtr", _wrap_UIImage_GetUIImagePtr}, 
    {0,0}
};
static swig_lua_attribute swig_UIImage_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UIImage_bases[] = {&_wrap_class_UIItem,0};
swig_lua_class _wrap_class_UIImage = { "UIImage", &SWIGTYPE_p_UIImage,_wrap_new_UIImage, swig_delete_UIImage, swig_UIImage_methods, swig_UIImage_attributes, swig_UIImage_bases };

static int _wrap_UILinerImage_SetDetectRect(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImage *arg1 = (UILinerImage *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImage,0))){
    SWIG_fail_ptr("UILinerImage_SetDetectRect",1,SWIGTYPE_p_UILinerImage);
  }
  
  (arg1)->SetDetectRect();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImage_GetX(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImage *arg1 = (UILinerImage *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImage,0))){
    SWIG_fail_ptr("UILinerImage_GetX",1,SWIGTYPE_p_UILinerImage);
  }
  
  result = (int)(arg1)->GetX();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImage_GetY(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImage *arg1 = (UILinerImage *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImage,0))){
    SWIG_fail_ptr("UILinerImage_GetY",1,SWIGTYPE_p_UILinerImage);
  }
  
  result = (int)(arg1)->GetY();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImage_SetPos(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImage *arg1 = (UILinerImage *) 0 ;
  int arg2 ;
  int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImage,0))){
    SWIG_fail_ptr("UILinerImage_SetPos",1,SWIGTYPE_p_UILinerImage);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->SetPos(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImage_SetImageFileA(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImage *arg1 = (UILinerImage *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  if(!lua_isnumber(L,6)) SWIG_fail_arg(6);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImage,0))){
    SWIG_fail_ptr("UILinerImage_SetImageFileA",1,SWIGTYPE_p_UILinerImage);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->SetImageFileA((char const *)arg2,arg3,arg4,arg5,arg6);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImage_SetImageFile(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImage *arg1 = (UILinerImage *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  if(!lua_isnumber(L,6)) SWIG_fail_arg(6);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImage,0))){
    SWIG_fail_ptr("UILinerImage_SetImageFile",1,SWIGTYPE_p_UILinerImage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("UILinerImage_SetImageFile",2,SWIGTYPE_p_wchar_t);
  }
  
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->SetImageFile((wchar_t const *)arg2,arg3,arg4,arg5,arg6);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImage_SetWidth(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImage *arg1 = (UILinerImage *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImage,0))){
    SWIG_fail_ptr("UILinerImage_SetWidth",1,SWIGTYPE_p_UILinerImage);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetWidth(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImage_SetHeight(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImage *arg1 = (UILinerImage *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImage,0))){
    SWIG_fail_ptr("UILinerImage_SetHeight",1,SWIGTYPE_p_UILinerImage);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetHeight(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImage_SetLinerWidth(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImage *arg1 = (UILinerImage *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImage,0))){
    SWIG_fail_ptr("UILinerImage_SetLinerWidth",1,SWIGTYPE_p_UILinerImage);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetLinerWidth(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImage_GetLinerWidth(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImage *arg1 = (UILinerImage *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImage,0))){
    SWIG_fail_ptr("UILinerImage_GetLinerWidth",1,SWIGTYPE_p_UILinerImage);
  }
  
  result = (unsigned int)(arg1)->GetLinerWidth();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImage_SetBaseWidth(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImage *arg1 = (UILinerImage *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImage,0))){
    SWIG_fail_ptr("UILinerImage_SetBaseWidth",1,SWIGTYPE_p_UILinerImage);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetBaseWidth(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImage_SetDenumerator(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImage *arg1 = (UILinerImage *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImage,0))){
    SWIG_fail_ptr("UILinerImage_SetDenumerator",1,SWIGTYPE_p_UILinerImage);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetDenumerator(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImage_SetNumerator(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImage *arg1 = (UILinerImage *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImage,0))){
    SWIG_fail_ptr("UILinerImage_SetNumerator",1,SWIGTYPE_p_UILinerImage);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetNumerator(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImage_FullWidth(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImage *arg1 = (UILinerImage *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImage,0))){
    SWIG_fail_ptr("UILinerImage_FullWidth",1,SWIGTYPE_p_UILinerImage);
  }
  
  (arg1)->FullWidth();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImage_SetRenderStyle(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImage *arg1 = (UILinerImage *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImage,0))){
    SWIG_fail_ptr("UILinerImage_SetRenderStyle",1,SWIGTYPE_p_UILinerImage);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetRenderStyle(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImage_GetRenderStyle(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImage *arg1 = (UILinerImage *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImage,0))){
    SWIG_fail_ptr("UILinerImage_GetRenderStyle",1,SWIGTYPE_p_UILinerImage);
  }
  
  result = (unsigned int)(arg1)->GetRenderStyle();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImage_Set2Top(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImage *arg1 = (UILinerImage *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImage,0))){
    SWIG_fail_ptr("UILinerImage_Set2Top",1,SWIGTYPE_p_UILinerImage);
  }
  
  (arg1)->Set2Top();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImage_Set2Bottom(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImage *arg1 = (UILinerImage *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImage,0))){
    SWIG_fail_ptr("UILinerImage_Set2Bottom",1,SWIGTYPE_p_UILinerImage);
  }
  
  (arg1)->Set2Bottom();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_UILinerImage(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImage *result = 0 ;
  
  result = (UILinerImage *)new UILinerImage();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UILinerImage,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UILinerImage(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImage *arg1 = (UILinerImage *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImage,0))){
    SWIG_fail_ptr("delete_UILinerImage",1,SWIGTYPE_p_UILinerImage);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UILinerImage(void *obj) {
UILinerImage *arg1 = (UILinerImage *) obj;
delete arg1;
}
static swig_lua_method swig_UILinerImage_methods[] = {
    {"SetDetectRect", _wrap_UILinerImage_SetDetectRect}, 
    {"GetX", _wrap_UILinerImage_GetX}, 
    {"GetY", _wrap_UILinerImage_GetY}, 
    {"SetPos", _wrap_UILinerImage_SetPos}, 
    {"SetImageFileA", _wrap_UILinerImage_SetImageFileA}, 
    {"SetImageFile", _wrap_UILinerImage_SetImageFile}, 
    {"SetWidth", _wrap_UILinerImage_SetWidth}, 
    {"SetHeight", _wrap_UILinerImage_SetHeight}, 
    {"SetLinerWidth", _wrap_UILinerImage_SetLinerWidth}, 
    {"GetLinerWidth", _wrap_UILinerImage_GetLinerWidth}, 
    {"SetBaseWidth", _wrap_UILinerImage_SetBaseWidth}, 
    {"SetDenumerator", _wrap_UILinerImage_SetDenumerator}, 
    {"SetNumerator", _wrap_UILinerImage_SetNumerator}, 
    {"FullWidth", _wrap_UILinerImage_FullWidth}, 
    {"SetRenderStyle", _wrap_UILinerImage_SetRenderStyle}, 
    {"GetRenderStyle", _wrap_UILinerImage_GetRenderStyle}, 
    {"Set2Top", _wrap_UILinerImage_Set2Top}, 
    {"Set2Bottom", _wrap_UILinerImage_Set2Bottom}, 
    {0,0}
};
static swig_lua_attribute swig_UILinerImage_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UILinerImage_bases[] = {&_wrap_class_UIImage,0};
swig_lua_class _wrap_class_UILinerImage = { "UILinerImage", &SWIGTYPE_p_UILinerImage,_wrap_new_UILinerImage, swig_delete_UILinerImage, swig_UILinerImage_methods, swig_UILinerImage_attributes, swig_UILinerImage_bases };

static int _wrap_UILinerImageV_SetDetectRect(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImageV *arg1 = (UILinerImageV *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImageV,0))){
    SWIG_fail_ptr("UILinerImageV_SetDetectRect",1,SWIGTYPE_p_UILinerImageV);
  }
  
  (arg1)->SetDetectRect();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImageV_GetX(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImageV *arg1 = (UILinerImageV *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImageV,0))){
    SWIG_fail_ptr("UILinerImageV_GetX",1,SWIGTYPE_p_UILinerImageV);
  }
  
  result = (int)(arg1)->GetX();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImageV_GetY(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImageV *arg1 = (UILinerImageV *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImageV,0))){
    SWIG_fail_ptr("UILinerImageV_GetY",1,SWIGTYPE_p_UILinerImageV);
  }
  
  result = (int)(arg1)->GetY();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImageV_SetPos(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImageV *arg1 = (UILinerImageV *) 0 ;
  int arg2 ;
  int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImageV,0))){
    SWIG_fail_ptr("UILinerImageV_SetPos",1,SWIGTYPE_p_UILinerImageV);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->SetPos(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImageV_SetImageFileA(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImageV *arg1 = (UILinerImageV *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  if(!lua_isnumber(L,6)) SWIG_fail_arg(6);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImageV,0))){
    SWIG_fail_ptr("UILinerImageV_SetImageFileA",1,SWIGTYPE_p_UILinerImageV);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->SetImageFileA((char const *)arg2,arg3,arg4,arg5,arg6);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImageV_SetImageFile(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImageV *arg1 = (UILinerImageV *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  if(!lua_isnumber(L,6)) SWIG_fail_arg(6);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImageV,0))){
    SWIG_fail_ptr("UILinerImageV_SetImageFile",1,SWIGTYPE_p_UILinerImageV);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("UILinerImageV_SetImageFile",2,SWIGTYPE_p_wchar_t);
  }
  
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (int)lua_tonumber(L, 6);
  (arg1)->SetImageFile((wchar_t const *)arg2,arg3,arg4,arg5,arg6);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImageV_SetWidth(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImageV *arg1 = (UILinerImageV *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImageV,0))){
    SWIG_fail_ptr("UILinerImageV_SetWidth",1,SWIGTYPE_p_UILinerImageV);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetWidth(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImageV_SetHeight(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImageV *arg1 = (UILinerImageV *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImageV,0))){
    SWIG_fail_ptr("UILinerImageV_SetHeight",1,SWIGTYPE_p_UILinerImageV);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetHeight(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImageV_SetLinerHeight(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImageV *arg1 = (UILinerImageV *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImageV,0))){
    SWIG_fail_ptr("UILinerImageV_SetLinerHeight",1,SWIGTYPE_p_UILinerImageV);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetLinerHeight(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImageV_GetLinerHeight(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImageV *arg1 = (UILinerImageV *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImageV,0))){
    SWIG_fail_ptr("UILinerImageV_GetLinerHeight",1,SWIGTYPE_p_UILinerImageV);
  }
  
  result = (unsigned int)(arg1)->GetLinerHeight();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImageV_SetBaseHeight(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImageV *arg1 = (UILinerImageV *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImageV,0))){
    SWIG_fail_ptr("UILinerImageV_SetBaseHeight",1,SWIGTYPE_p_UILinerImageV);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetBaseHeight(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImageV_SetDenumerator(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImageV *arg1 = (UILinerImageV *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImageV,0))){
    SWIG_fail_ptr("UILinerImageV_SetDenumerator",1,SWIGTYPE_p_UILinerImageV);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetDenumerator(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImageV_SetNumerator(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImageV *arg1 = (UILinerImageV *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImageV,0))){
    SWIG_fail_ptr("UILinerImageV_SetNumerator",1,SWIGTYPE_p_UILinerImageV);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetNumerator(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImageV_FullWidth(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImageV *arg1 = (UILinerImageV *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImageV,0))){
    SWIG_fail_ptr("UILinerImageV_FullWidth",1,SWIGTYPE_p_UILinerImageV);
  }
  
  (arg1)->FullWidth();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImageV_SetRenderStyle(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImageV *arg1 = (UILinerImageV *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImageV,0))){
    SWIG_fail_ptr("UILinerImageV_SetRenderStyle",1,SWIGTYPE_p_UILinerImageV);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetRenderStyle(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImageV_GetRenderStyle(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImageV *arg1 = (UILinerImageV *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImageV,0))){
    SWIG_fail_ptr("UILinerImageV_GetRenderStyle",1,SWIGTYPE_p_UILinerImageV);
  }
  
  result = (unsigned int)(arg1)->GetRenderStyle();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImageV_Set2Left(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImageV *arg1 = (UILinerImageV *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImageV,0))){
    SWIG_fail_ptr("UILinerImageV_Set2Left",1,SWIGTYPE_p_UILinerImageV);
  }
  
  (arg1)->Set2Left();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UILinerImageV_Set2Right(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImageV *arg1 = (UILinerImageV *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImageV,0))){
    SWIG_fail_ptr("UILinerImageV_Set2Right",1,SWIGTYPE_p_UILinerImageV);
  }
  
  (arg1)->Set2Right();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_UILinerImageV(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImageV *result = 0 ;
  
  result = (UILinerImageV *)new UILinerImageV();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UILinerImageV,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UILinerImageV(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImageV *arg1 = (UILinerImageV *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UILinerImageV,0))){
    SWIG_fail_ptr("delete_UILinerImageV",1,SWIGTYPE_p_UILinerImageV);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UILinerImageV(void *obj) {
UILinerImageV *arg1 = (UILinerImageV *) obj;
delete arg1;
}
static swig_lua_method swig_UILinerImageV_methods[] = {
    {"SetDetectRect", _wrap_UILinerImageV_SetDetectRect}, 
    {"GetX", _wrap_UILinerImageV_GetX}, 
    {"GetY", _wrap_UILinerImageV_GetY}, 
    {"SetPos", _wrap_UILinerImageV_SetPos}, 
    {"SetImageFileA", _wrap_UILinerImageV_SetImageFileA}, 
    {"SetImageFile", _wrap_UILinerImageV_SetImageFile}, 
    {"SetWidth", _wrap_UILinerImageV_SetWidth}, 
    {"SetHeight", _wrap_UILinerImageV_SetHeight}, 
    {"SetLinerHeight", _wrap_UILinerImageV_SetLinerHeight}, 
    {"GetLinerHeight", _wrap_UILinerImageV_GetLinerHeight}, 
    {"SetBaseHeight", _wrap_UILinerImageV_SetBaseHeight}, 
    {"SetDenumerator", _wrap_UILinerImageV_SetDenumerator}, 
    {"SetNumerator", _wrap_UILinerImageV_SetNumerator}, 
    {"FullWidth", _wrap_UILinerImageV_FullWidth}, 
    {"SetRenderStyle", _wrap_UILinerImageV_SetRenderStyle}, 
    {"GetRenderStyle", _wrap_UILinerImageV_GetRenderStyle}, 
    {"Set2Left", _wrap_UILinerImageV_Set2Left}, 
    {"Set2Right", _wrap_UILinerImageV_Set2Right}, 
    {0,0}
};
static swig_lua_attribute swig_UILinerImageV_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UILinerImageV_bases[] = {&_wrap_class_UILinerImage,0};
swig_lua_class _wrap_class_UILinerImageV = { "UILinerImageV", &SWIGTYPE_p_UILinerImageV,_wrap_new_UILinerImageV, swig_delete_UILinerImageV, swig_UILinerImageV_methods, swig_UILinerImageV_attributes, swig_UILinerImageV_bases };

static int _wrap_UIPanelEx_GetLineCount(lua_State* L) {
  int SWIG_arg = -1;
  UIPanelEx *arg1 = (UIPanelEx *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanelEx,0))){
    SWIG_fail_ptr("UIPanelEx_GetLineCount",1,SWIGTYPE_p_UIPanelEx);
  }
  
  result = (unsigned int)(arg1)->GetLineCount();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanelEx_ChangeCount(lua_State* L) {
  int SWIG_arg = -1;
  UIPanelEx *arg1 = (UIPanelEx *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanelEx,0))){
    SWIG_fail_ptr("UIPanelEx_ChangeCount",1,SWIGTYPE_p_UIPanelEx);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->ChangeCount(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanelEx_SetDetectRect(lua_State* L) {
  int SWIG_arg = -1;
  UIPanelEx *arg1 = (UIPanelEx *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanelEx,0))){
    SWIG_fail_ptr("UIPanelEx_SetDetectRect",1,SWIGTYPE_p_UIPanelEx);
  }
  
  (arg1)->SetDetectRect();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanelEx_GetX(lua_State* L) {
  int SWIG_arg = -1;
  UIPanelEx *arg1 = (UIPanelEx *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanelEx,0))){
    SWIG_fail_ptr("UIPanelEx_GetX",1,SWIGTYPE_p_UIPanelEx);
  }
  
  result = (int)(arg1)->GetX();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanelEx_GetY(lua_State* L) {
  int SWIG_arg = -1;
  UIPanelEx *arg1 = (UIPanelEx *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanelEx,0))){
    SWIG_fail_ptr("UIPanelEx_GetY",1,SWIGTYPE_p_UIPanelEx);
  }
  
  result = (int)(arg1)->GetY();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanelEx_SetPos(lua_State* L) {
  int SWIG_arg = -1;
  UIPanelEx *arg1 = (UIPanelEx *) 0 ;
  int arg2 ;
  int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanelEx,0))){
    SWIG_fail_ptr("UIPanelEx_SetPos",1,SWIGTYPE_p_UIPanelEx);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->SetPos(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanelEx_SetRenderStyle(lua_State* L) {
  int SWIG_arg = -1;
  UIPanelEx *arg1 = (UIPanelEx *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanelEx,0))){
    SWIG_fail_ptr("UIPanelEx_SetRenderStyle",1,SWIGTYPE_p_UIPanelEx);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetRenderStyle(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanelEx_GetRenderStyle(lua_State* L) {
  int SWIG_arg = -1;
  UIPanelEx *arg1 = (UIPanelEx *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanelEx,0))){
    SWIG_fail_ptr("UIPanelEx_GetRenderStyle",1,SWIGTYPE_p_UIPanelEx);
  }
  
  result = (unsigned int)(arg1)->GetRenderStyle();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanelEx_SetAllColor(lua_State* L) {
  int SWIG_arg = -1;
  UIPanelEx *arg1 = (UIPanelEx *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanelEx,0))){
    SWIG_fail_ptr("UIPanelEx_SetAllColor",1,SWIGTYPE_p_UIPanelEx);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetAllColor(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanelEx_GetLineRect(lua_State* L) {
  int SWIG_arg = -1;
  UIPanelEx *arg1 = (UIPanelEx *) 0 ;
  RECT *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanelEx,0))){
    SWIG_fail_ptr("UIPanelEx_GetLineRect",1,SWIGTYPE_p_UIPanelEx);
  }
  
  result = (RECT *)(arg1)->GetLineRect();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_RECT,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanelEx_GetLineRectHeight(lua_State* L) {
  int SWIG_arg = -1;
  UIPanelEx *arg1 = (UIPanelEx *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanelEx,0))){
    SWIG_fail_ptr("UIPanelEx_GetLineRectHeight",1,SWIGTYPE_p_UIPanelEx);
  }
  
  result = (unsigned int)(arg1)->GetLineRectHeight();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanelEx_SetEnable(lua_State* L) {
  int SWIG_arg = -1;
  UIPanelEx *arg1 = (UIPanelEx *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanelEx,0))){
    SWIG_fail_ptr("UIPanelEx_SetEnable",1,SWIGTYPE_p_UIPanelEx);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetEnable(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanelEx_IsEnable(lua_State* L) {
  int SWIG_arg = -1;
  UIPanelEx *arg1 = (UIPanelEx *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanelEx,0))){
    SWIG_fail_ptr("UIPanelEx_IsEnable",1,SWIGTYPE_p_UIPanelEx);
  }
  
  result = (bool)(arg1)->IsEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanelEx_SetLineRect(lua_State* L) {
  int SWIG_arg = -1;
  UIPanelEx *arg1 = (UIPanelEx *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  unsigned int arg6 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  if(!lua_isnumber(L,6)) SWIG_fail_arg(6);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanelEx,0))){
    SWIG_fail_ptr("UIPanelEx_SetLineRect",1,SWIGTYPE_p_UIPanelEx);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (unsigned int)lua_tonumber(L, 6);
  (arg1)->SetLineRect(arg2,arg3,arg4,arg5,arg6);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIPanelEx_SetBottomRect(lua_State* L) {
  int SWIG_arg = -1;
  UIPanelEx *arg1 = (UIPanelEx *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanelEx,0))){
    SWIG_fail_ptr("UIPanelEx_SetBottomRect",1,SWIGTYPE_p_UIPanelEx);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->SetBottomRect(arg2,arg3,arg4,arg5);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_UIPanelEx(lua_State* L) {
  int SWIG_arg = -1;
  UIPanelEx *result = 0 ;
  
  result = (UIPanelEx *)new UIPanelEx();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIPanelEx,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UIPanelEx(lua_State* L) {
  int SWIG_arg = -1;
  UIPanelEx *arg1 = (UIPanelEx *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIPanelEx,0))){
    SWIG_fail_ptr("delete_UIPanelEx",1,SWIGTYPE_p_UIPanelEx);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UIPanelEx(void *obj) {
UIPanelEx *arg1 = (UIPanelEx *) obj;
delete arg1;
}
static swig_lua_method swig_UIPanelEx_methods[] = {
    {"GetLineCount", _wrap_UIPanelEx_GetLineCount}, 
    {"ChangeCount", _wrap_UIPanelEx_ChangeCount}, 
    {"SetDetectRect", _wrap_UIPanelEx_SetDetectRect}, 
    {"GetX", _wrap_UIPanelEx_GetX}, 
    {"GetY", _wrap_UIPanelEx_GetY}, 
    {"SetPos", _wrap_UIPanelEx_SetPos}, 
    {"SetRenderStyle", _wrap_UIPanelEx_SetRenderStyle}, 
    {"GetRenderStyle", _wrap_UIPanelEx_GetRenderStyle}, 
    {"SetAllColor", _wrap_UIPanelEx_SetAllColor}, 
    {"GetLineRect", _wrap_UIPanelEx_GetLineRect}, 
    {"GetLineRectHeight", _wrap_UIPanelEx_GetLineRectHeight}, 
    {"SetEnable", _wrap_UIPanelEx_SetEnable}, 
    {"IsEnable", _wrap_UIPanelEx_IsEnable}, 
    {"SetLineRect", _wrap_UIPanelEx_SetLineRect}, 
    {"SetBottomRect", _wrap_UIPanelEx_SetBottomRect}, 
    {0,0}
};
static swig_lua_attribute swig_UIPanelEx_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UIPanelEx_bases[] = {&_wrap_class_UIPanel,0};
swig_lua_class _wrap_class_UIPanelEx = { "UIPanelEx", &SWIGTYPE_p_UIPanelEx,_wrap_new_UIPanelEx, swig_delete_UIPanelEx, swig_UIPanelEx_methods, swig_UIPanelEx_attributes, swig_UIPanelEx_bases };

static int _wrap_ChatPool_Clear(lua_State* L) {
  int SWIG_arg = -1;
  ChatPool *arg1 = (ChatPool *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_ChatPool,0))){
    SWIG_fail_ptr("ChatPool_Clear",1,SWIGTYPE_p_ChatPool);
  }
  
  (arg1)->Clear();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ChatPool_Add(lua_State* L) {
  int SWIG_arg = -1;
  ChatPool *arg1 = (ChatPool *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_ChatPool,0))){
    SWIG_fail_ptr("ChatPool_Add",1,SWIGTYPE_p_ChatPool);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("ChatPool_Add",2,SWIGTYPE_p_wchar_t);
  }
  
  (arg1)->Add((wchar_t const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ChatPool_GetStartMsg(lua_State* L) {
  int SWIG_arg = -1;
  ChatPool *arg1 = (ChatPool *) 0 ;
  wchar_t *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_ChatPool,0))){
    SWIG_fail_ptr("ChatPool_GetStartMsg",1,SWIGTYPE_p_ChatPool);
  }
  
  result = (wchar_t *)(arg1)->GetStartMsg();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_wchar_t,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ChatPool_GetLastMsg(lua_State* L) {
  int SWIG_arg = -1;
  ChatPool *arg1 = (ChatPool *) 0 ;
  wchar_t *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_ChatPool,0))){
    SWIG_fail_ptr("ChatPool_GetLastMsg",1,SWIGTYPE_p_ChatPool);
  }
  
  result = (wchar_t *)(arg1)->GetLastMsg();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_wchar_t,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ChatPool_GetNextMsg(lua_State* L) {
  int SWIG_arg = -1;
  ChatPool *arg1 = (ChatPool *) 0 ;
  wchar_t *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_ChatPool,0))){
    SWIG_fail_ptr("ChatPool_GetNextMsg",1,SWIGTYPE_p_ChatPool);
  }
  
  result = (wchar_t *)(arg1)->GetNextMsg();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_wchar_t,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ChatPool_GetMsgFormIndex(lua_State* L) {
  int SWIG_arg = -1;
  ChatPool *arg1 = (ChatPool *) 0 ;
  UInt arg2 ;
  wchar_t *result = 0 ;
  UInt *argp2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isuserdata(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_ChatPool,0))){
    SWIG_fail_ptr("ChatPool_GetMsgFormIndex",1,SWIGTYPE_p_ChatPool);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_UInt,0))){
    SWIG_fail_ptr("ChatPool_GetMsgFormIndex",2,SWIGTYPE_UInt);
  }
  arg2 = *argp2;
  
  result = (wchar_t *)(arg1)->GetMsgFormIndex(arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_wchar_t,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ChatPool_GetIndex(lua_State* L) {
  int SWIG_arg = -1;
  ChatPool *arg1 = (ChatPool *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_ChatPool,0))){
    SWIG_fail_ptr("ChatPool_GetIndex",1,SWIGTYPE_p_ChatPool);
  }
  
  result = (unsigned int)(arg1)->GetIndex();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ChatPool_ResetCopyIndex(lua_State* L) {
  int SWIG_arg = -1;
  ChatPool *arg1 = (ChatPool *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_ChatPool,0))){
    SWIG_fail_ptr("ChatPool_ResetCopyIndex",1,SWIGTYPE_p_ChatPool);
  }
  
  (arg1)->ResetCopyIndex();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ChatPool_GetCopyIndex(lua_State* L) {
  int SWIG_arg = -1;
  ChatPool *arg1 = (ChatPool *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_ChatPool,0))){
    SWIG_fail_ptr("ChatPool_GetCopyIndex",1,SWIGTYPE_p_ChatPool);
  }
  
  result = (unsigned int)(arg1)->GetCopyIndex();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_ChatPool(lua_State* L) {
  int SWIG_arg = -1;
  ChatPool *result = 0 ;
  
  result = (ChatPool *)new ChatPool();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_ChatPool,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_ChatPool(lua_State* L) {
  int SWIG_arg = -1;
  ChatPool *arg1 = (ChatPool *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_ChatPool,0))){
    SWIG_fail_ptr("delete_ChatPool",1,SWIGTYPE_p_ChatPool);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_ChatPool(void *obj) {
ChatPool *arg1 = (ChatPool *) obj;
delete arg1;
}
static swig_lua_method swig_ChatPool_methods[] = {
    {"Clear", _wrap_ChatPool_Clear}, 
    {"Add", _wrap_ChatPool_Add}, 
    {"GetStartMsg", _wrap_ChatPool_GetStartMsg}, 
    {"GetLastMsg", _wrap_ChatPool_GetLastMsg}, 
    {"GetNextMsg", _wrap_ChatPool_GetNextMsg}, 
    {"GetMsgFormIndex", _wrap_ChatPool_GetMsgFormIndex}, 
    {"GetIndex", _wrap_ChatPool_GetIndex}, 
    {"ResetCopyIndex", _wrap_ChatPool_ResetCopyIndex}, 
    {"GetCopyIndex", _wrap_ChatPool_GetCopyIndex}, 
    {0,0}
};
static swig_lua_attribute swig_ChatPool_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_ChatPool_bases[] = {0};
swig_lua_class _wrap_class_ChatPool = { "ChatPool", &SWIGTYPE_p_ChatPool,_wrap_new_ChatPool, swig_delete_ChatPool, swig_ChatPool_methods, swig_ChatPool_attributes, swig_ChatPool_bases };

static int _wrap_UIAniIcon_SetAnimationData(lua_State* L) {
  int SWIG_arg = -1;
  UIAniIcon *arg1 = (UIAniIcon *) 0 ;
  UIAniIcon *arg2 = (UIAniIcon *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIAniIcon,0))){
    SWIG_fail_ptr("UIAniIcon_SetAnimationData",1,SWIGTYPE_p_UIAniIcon);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIAniIcon,0))){
    SWIG_fail_ptr("UIAniIcon_SetAnimationData",2,SWIGTYPE_p_UIAniIcon);
  }
  
  (arg1)->SetAnimationData(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIAniIcon_SetAnimationIndex(lua_State* L) {
  int SWIG_arg = -1;
  UIAniIcon *arg1 = (UIAniIcon *) 0 ;
  Int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIAniIcon,0))){
    SWIG_fail_ptr("UIAniIcon_SetAnimationIndex",1,SWIGTYPE_p_UIAniIcon);
  }
  
  arg2 = (Int)lua_tonumber(L, 2);
  (arg1)->SetAnimationIndex(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIAniIcon_SetAnimationDataA__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  UIAniIcon *arg1 = (UIAniIcon *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIAniIcon,0))){
    SWIG_fail_ptr("UIAniIcon_SetAnimationDataA",1,SWIGTYPE_p_UIAniIcon);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->SetAnimationDataA((char const *)arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIAniIcon_SetAnimationDataA__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  UIAniIcon *arg1 = (UIAniIcon *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIAniIcon,0))){
    SWIG_fail_ptr("UIAniIcon_SetAnimationDataA",1,SWIGTYPE_p_UIAniIcon);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->SetAnimationDataA((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIAniIcon_SetAnimationDataA(lua_State* L) {
  int argc;
  int argv[4]={
    1,2,3,4
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_UIAniIcon, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_UIAniIcon_SetAnimationDataA__SWIG_1(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_UIAniIcon, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_UIAniIcon_SetAnimationDataA__SWIG_0(L);
        }
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'UIAniIcon_SetAnimationDataA'");
  lua_error(L);return 0;
}


static int _wrap_UIAniIcon_SetRotation(lua_State* L) {
  int SWIG_arg = -1;
  UIAniIcon *arg1 = (UIAniIcon *) 0 ;
  Int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIAniIcon,0))){
    SWIG_fail_ptr("UIAniIcon_SetRotation",1,SWIGTYPE_p_UIAniIcon);
  }
  
  arg2 = (Int)lua_tonumber(L, 2);
  (arg1)->SetRotation(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIAniIcon_ClearAniData(lua_State* L) {
  int SWIG_arg = -1;
  UIAniIcon *arg1 = (UIAniIcon *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIAniIcon,0))){
    SWIG_fail_ptr("UIAniIcon_ClearAniData",1,SWIGTYPE_p_UIAniIcon);
  }
  
  (arg1)->ClearAniData();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIAniIcon_LockResources(lua_State* L) {
  int SWIG_arg = -1;
  UIAniIcon *arg1 = (UIAniIcon *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIAniIcon,0))){
    SWIG_fail_ptr("UIAniIcon_LockResources",1,SWIGTYPE_p_UIAniIcon);
  }
  
  (arg1)->LockResources();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIAniIcon_SetDetect(lua_State* L) {
  int SWIG_arg = -1;
  UIAniIcon *arg1 = (UIAniIcon *) 0 ;
  Int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIAniIcon,0))){
    SWIG_fail_ptr("UIAniIcon_SetDetect",1,SWIGTYPE_p_UIAniIcon);
  }
  
  arg2 = (Int)lua_tonumber(L, 2);
  (arg1)->SetDetect(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIAniIcon_SetAlign(lua_State* L) {
  int SWIG_arg = -1;
  UIAniIcon *arg1 = (UIAniIcon *) 0 ;
  Int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIAniIcon,0))){
    SWIG_fail_ptr("UIAniIcon_SetAlign",1,SWIGTYPE_p_UIAniIcon);
  }
  
  arg2 = (Int)lua_tonumber(L, 2);
  (arg1)->SetAlign(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIAniIcon_Update(lua_State* L) {
  int SWIG_arg = -1;
  UIAniIcon *arg1 = (UIAniIcon *) 0 ;
  unsigned int arg2 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIAniIcon,0))){
    SWIG_fail_ptr("UIAniIcon_Update",1,SWIGTYPE_p_UIAniIcon);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  result = (unsigned int)(arg1)->Update(arg2);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIAniIcon_UpdateNow(lua_State* L) {
  int SWIG_arg = -1;
  UIAniIcon *arg1 = (UIAniIcon *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIAniIcon,0))){
    SWIG_fail_ptr("UIAniIcon_UpdateNow",1,SWIGTYPE_p_UIAniIcon);
  }
  
  result = (unsigned int)(arg1)->UpdateNow();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIAniIcon_GetHasAni(lua_State* L) {
  int SWIG_arg = -1;
  UIAniIcon *arg1 = (UIAniIcon *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIAniIcon,0))){
    SWIG_fail_ptr("UIAniIcon_GetHasAni",1,SWIGTYPE_p_UIAniIcon);
  }
  
  result = (bool)(arg1)->GetHasAni();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_UIAniIcon(lua_State* L) {
  int SWIG_arg = -1;
  UIAniIcon *result = 0 ;
  
  result = (UIAniIcon *)new UIAniIcon();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIAniIcon,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UIAniIcon(lua_State* L) {
  int SWIG_arg = -1;
  UIAniIcon *arg1 = (UIAniIcon *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIAniIcon,0))){
    SWIG_fail_ptr("delete_UIAniIcon",1,SWIGTYPE_p_UIAniIcon);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UIAniIcon(void *obj) {
UIAniIcon *arg1 = (UIAniIcon *) obj;
delete arg1;
}
static swig_lua_method swig_UIAniIcon_methods[] = {
    {"SetAnimationData", _wrap_UIAniIcon_SetAnimationData}, 
    {"SetAnimationIndex", _wrap_UIAniIcon_SetAnimationIndex}, 
    {"SetAnimationDataA", _wrap_UIAniIcon_SetAnimationDataA}, 
    {"SetRotation", _wrap_UIAniIcon_SetRotation}, 
    {"ClearAniData", _wrap_UIAniIcon_ClearAniData}, 
    {"LockResources", _wrap_UIAniIcon_LockResources}, 
    {"SetDetect", _wrap_UIAniIcon_SetDetect}, 
    {"SetAlign", _wrap_UIAniIcon_SetAlign}, 
    {"Update", _wrap_UIAniIcon_Update}, 
    {"UpdateNow", _wrap_UIAniIcon_UpdateNow}, 
    {"GetHasAni", _wrap_UIAniIcon_GetHasAni}, 
    {0,0}
};
static swig_lua_attribute swig_UIAniIcon_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UIAniIcon_bases[] = {&_wrap_class_UIImage,0};
swig_lua_class _wrap_class_UIAniIcon = { "UIAniIcon", &SWIGTYPE_p_UIAniIcon,_wrap_new_UIAniIcon, swig_delete_UIAniIcon, swig_UIAniIcon_methods, swig_UIAniIcon_attributes, swig_UIAniIcon_bases };

static int _wrap_new_UIManager(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *result = 0 ;
  
  result = (UIManager *)new UIManager();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIManager,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_UIManager(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("delete_UIManager",1,SWIGTYPE_p_UIManager);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_GetCursorX(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_GetCursorX",1,SWIGTYPE_p_UIManager);
  }
  
  result = (int)(arg1)->GetCursorX();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_GetCursorY(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_GetCursorY",1,SWIGTYPE_p_UIManager);
  }
  
  result = (int)(arg1)->GetCursorY();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_Detect(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int arg4 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_Detect",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  result = (bool)(arg1)->Detect((char const *)arg2,arg3,arg4);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_RenderAll(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_RenderAll",1,SWIGTYPE_p_UIManager);
  }
  
  (arg1)->RenderAll();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_GetUIItem(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  UIItem *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_GetUIItem",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  result = (UIItem *)(arg1)->GetUIItem((char const *)arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIItem,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_GetWaitItem(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIItem *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_GetWaitItem",1,SWIGTYPE_p_UIManager);
  }
  
  result = (UIItem *)(arg1)->GetWaitItem();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIItem,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_SetBackImageA(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  unsigned int arg6 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  if(!lua_isnumber(L,6)) SWIG_fail_arg(6);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_SetBackImageA",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  arg4 = (unsigned int)lua_tonumber(L, 4);
  arg5 = (unsigned int)lua_tonumber(L, 5);
  arg6 = (unsigned int)lua_tonumber(L, 6);
  (arg1)->SetBackImageA((char const *)arg2,arg3,arg4,arg5,arg6);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_RegisterImage(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_RegisterImage",1,SWIGTYPE_p_UIManager);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("UIManager_RegisterImage",2,SWIGTYPE_p_wchar_t);
  }
  
  (arg1)->RegisterImage((wchar_t const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_RegisterImageA(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_RegisterImageA",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->RegisterImageA((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_SetIDName(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_SetIDName",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->SetIDName((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_GetIDName(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_GetIDName",1,SWIGTYPE_p_UIManager);
  }
  
  result = (char *)(arg1)->GetIDName();
  SWIG_arg=0;
  lua_pushstring(L,(const char*)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_FindUIPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  UIPanel *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_FindUIPanel",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  result = (UIPanel *)(arg1)->FindUIPanel((char const *)arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIPanel,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_FindUIPanelEx(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  UIPanelEx *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_FindUIPanelEx",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  result = (UIPanelEx *)(arg1)->FindUIPanelEx((char const *)arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIPanelEx,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_FindUIStaticText(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  UIStaticText *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_FindUIStaticText",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  result = (UIStaticText *)(arg1)->FindUIStaticText((char const *)arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIStaticText,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_FindUIButton(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  UIButton *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_FindUIButton",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  result = (UIButton *)(arg1)->FindUIButton((char const *)arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIButton,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_FindUIEditBox(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  UIEditBox *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_FindUIEditBox",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  result = (UIEditBox *)(arg1)->FindUIEditBox((char const *)arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIEditBox,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_FindUIEditBoxEx(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  UIEditBoxEx *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_FindUIEditBoxEx",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  result = (UIEditBoxEx *)(arg1)->FindUIEditBoxEx((char const *)arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIEditBoxEx,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_FindUIPopUpMenu(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  UIPopUpMenu *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_FindUIPopUpMenu",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  result = (UIPopUpMenu *)(arg1)->FindUIPopUpMenu((char const *)arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIPopUpMenu,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_FindUIScrollBarV(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  UIScrollBarV *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_FindUIScrollBarV",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  result = (UIScrollBarV *)(arg1)->FindUIScrollBarV((char const *)arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIScrollBarV,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_FindUIChatPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  UIChatPanel *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_FindUIChatPanel",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  result = (UIChatPanel *)(arg1)->FindUIChatPanel((char const *)arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIChatPanel,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_FindUIMiniMap(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  UIMiniMap *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_FindUIMiniMap",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  result = (UIMiniMap *)(arg1)->FindUIMiniMap((char const *)arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIMiniMap,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_FindUIImage(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  UIImage *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_FindUIImage",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  result = (UIImage *)(arg1)->FindUIImage((char const *)arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIImage,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_FindUILinerImage(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  UILinerImage *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_FindUILinerImage",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  result = (UILinerImage *)(arg1)->FindUILinerImage((char const *)arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UILinerImage,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_FindUICheckBox(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  UICheckBox *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_FindUICheckBox",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  result = (UICheckBox *)(arg1)->FindUICheckBox((char const *)arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UICheckBox,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_FindUIAniIcon(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  UIAniIcon *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_FindUIAniIcon",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  result = (UIAniIcon *)(arg1)->FindUIAniIcon((char const *)arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIAniIcon,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_AddLockUIPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIPanel *arg2 = (UIPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_AddLockUIPanel",1,SWIGTYPE_p_UIManager);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIManager_AddLockUIPanel",2,SWIGTYPE_p_UIPanel);
  }
  
  (arg1)->AddLockUIPanel(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_ClearLockUIPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_ClearLockUIPanel",1,SWIGTYPE_p_UIManager);
  }
  
  (arg1)->ClearLockUIPanel();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_LockPanelActive(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_LockPanelActive",1,SWIGTYPE_p_UIManager);
  }
  
  (arg1)->LockPanelActive();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_BasePanelActive(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_BasePanelActive",1,SWIGTYPE_p_UIManager);
  }
  
  (arg1)->BasePanelActive();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_SetMonoItem(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIItem *arg2 = (UIItem *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_SetMonoItem",1,SWIGTYPE_p_UIManager);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIManager_SetMonoItem",2,SWIGTYPE_p_UIItem);
  }
  
  (arg1)->SetMonoItem(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_SetMonoPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIPanel *arg2 = (UIPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_SetMonoPanel",1,SWIGTYPE_p_UIManager);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIManager_SetMonoPanel",2,SWIGTYPE_p_UIPanel);
  }
  
  (arg1)->SetMonoPanel(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_SetMonoPanelEx(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIPanelEx *arg2 = (UIPanelEx *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_SetMonoPanelEx",1,SWIGTYPE_p_UIManager);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIPanelEx,0))){
    SWIG_fail_ptr("UIManager_SetMonoPanelEx",2,SWIGTYPE_p_UIPanelEx);
  }
  
  (arg1)->SetMonoPanelEx(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_GetMonoItem(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIItem *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_GetMonoItem",1,SWIGTYPE_p_UIManager);
  }
  
  result = (UIItem *)(arg1)->GetMonoItem();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIItem,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_GetMonoPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIPanel *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_GetMonoPanel",1,SWIGTYPE_p_UIManager);
  }
  
  result = (UIPanel *)(arg1)->GetMonoPanel();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIPanel,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_GetMonoPanelEx(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIPanelEx *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_GetMonoPanelEx",1,SWIGTYPE_p_UIManager);
  }
  
  result = (UIPanelEx *)(arg1)->GetMonoPanelEx();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIPanelEx,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_ClearMonoPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_ClearMonoPanel",1,SWIGTYPE_p_UIManager);
  }
  
  (arg1)->ClearMonoPanel();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_LockMonoPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_LockMonoPanel",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->LockMonoPanel((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_UnlockMonoPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_UnlockMonoPanel",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->UnlockMonoPanel((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_SetLockMonoPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_SetLockMonoPanel",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetLockMonoPanel(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_IsLockMonoPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_IsLockMonoPanel",1,SWIGTYPE_p_UIManager);
  }
  
  result = (bool)(arg1)->IsLockMonoPanel();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_SetFollowPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  if(!lua_isstring(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_SetFollowPanel",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (char *)lua_tostring(L, 3);
  (arg1)->SetFollowPanel((char const *)arg2,(char const *)arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_ChangeFocus(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_ChangeFocus",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->ChangeFocus((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_SetEvent(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_SetEvent",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SetEvent(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_GetEvent(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_GetEvent",1,SWIGTYPE_p_UIManager);
  }
  
  result = (int)(arg1)->GetEvent();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_CatchEvent(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_CatchEvent",1,SWIGTYPE_p_UIManager);
  }
  
  result = (int)(arg1)->CatchEvent();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_SetLeaveTimerItem(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIItem *arg2 = (UIItem *) 0 ;
  unsigned int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_SetLeaveTimerItem",1,SWIGTYPE_p_UIManager);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIManager_SetLeaveTimerItem",2,SWIGTYPE_p_UIItem);
  }
  
  arg3 = (unsigned int)lua_tonumber(L, 3);
  (arg1)->SetLeaveTimerItem(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_ClearLeaveTimerItem(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_ClearLeaveTimerItem",1,SWIGTYPE_p_UIManager);
  }
  
  (arg1)->ClearLeaveTimerItem();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_SetMoveInTimerItem(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIItem *arg2 = (UIItem *) 0 ;
  unsigned int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_SetMoveInTimerItem",1,SWIGTYPE_p_UIManager);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIManager_SetMoveInTimerItem",2,SWIGTYPE_p_UIItem);
  }
  
  arg3 = (unsigned int)lua_tonumber(L, 3);
  (arg1)->SetMoveInTimerItem(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_ClearMoveInTimerItem(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_ClearMoveInTimerItem",1,SWIGTYPE_p_UIManager);
  }
  
  (arg1)->ClearMoveInTimerItem();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_ClearStateItem(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_ClearStateItem",1,SWIGTYPE_p_UIManager);
  }
  
  (arg1)->ClearStateItem();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_SetDragPanel2Top(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_SetDragPanel2Top",1,SWIGTYPE_p_UIManager);
  }
  
  (arg1)->SetDragPanel2Top();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_CheckPanelOnTop(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIPanel *arg2 = (UIPanel *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_CheckPanelOnTop",1,SWIGTYPE_p_UIManager);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIManager_CheckPanelOnTop",2,SWIGTYPE_p_UIPanel);
  }
  
  result = (bool)(arg1)->CheckPanelOnTop(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_GetPanelOnTop(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIPanel *arg2 = (UIPanel *) 0 ;
  UIPanel *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_GetPanelOnTop",1,SWIGTYPE_p_UIManager);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIManager_GetPanelOnTop",2,SWIGTYPE_p_UIPanel);
  }
  
  result = (UIPanel *)(arg1)->GetPanelOnTop(arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIPanel,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_ChangeParent(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_ChangeParent",1,SWIGTYPE_p_UIManager);
  }
  
  (arg1)->ChangeParent();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_DeletePanel(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_DeletePanel",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->DeletePanel((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_AddDirtyUIItem(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIItem *arg2 = (UIItem *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_AddDirtyUIItem",1,SWIGTYPE_p_UIManager);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIManager_AddDirtyUIItem",2,SWIGTYPE_p_UIItem);
  }
  
  (arg1)->AddDirtyUIItem(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_SetDefaultEnterFunc(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_SetDefaultEnterFunc",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->SetDefaultEnterFunc((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_AddUIID(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  UIItem *arg3 = (UIItem *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_AddUIID",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIManager_AddUIID",3,SWIGTYPE_p_UIItem);
  }
  
  (arg1)->AddUIID((char const *)arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_SetLuaFuncName(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_SetLuaFuncName",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->SetLuaFuncName((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_ResetTipsPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIItem *arg2 = (UIItem *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_ResetTipsPanel",1,SWIGTYPE_p_UIManager);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIManager_ResetTipsPanel",2,SWIGTYPE_p_UIItem);
  }
  
  (arg1)->ResetTipsPanel(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_AddUIPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIPanel *arg2 = (UIPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_AddUIPanel",1,SWIGTYPE_p_UIManager);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIManager_AddUIPanel",2,SWIGTYPE_p_UIPanel);
  }
  
  (arg1)->AddUIPanel(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_AddUpdateUIItem(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIItem *arg2 = (UIItem *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_AddUpdateUIItem",1,SWIGTYPE_p_UIManager);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIManager_AddUpdateUIItem",2,SWIGTYPE_p_UIItem);
  }
  
  (arg1)->AddUpdateUIItem(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_ResetDragItem(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_ResetDragItem",1,SWIGTYPE_p_UIManager);
  }
  
  (arg1)->ResetDragItem();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_StopDrag(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_StopDrag",1,SWIGTYPE_p_UIManager);
  }
  
  (arg1)->StopDrag();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_DragNow(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_DragNow",1,SWIGTYPE_p_UIManager);
  }
  
  result = (bool)(arg1)->DragNow();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_SetDragItemXY(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIItem *arg2 = (UIItem *) 0 ;
  int arg3 ;
  int arg4 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_SetDragItemXY",1,SWIGTYPE_p_UIManager);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIManager_SetDragItemXY",2,SWIGTYPE_p_UIItem);
  }
  
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  (arg1)->SetDragItemXY(arg2,arg3,arg4);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_GetKeyInItem(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIItem *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_GetKeyInItem",1,SWIGTYPE_p_UIManager);
  }
  
  result = (UIItem *)(arg1)->GetKeyInItem();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIItem,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_SetKeyInItem(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_SetKeyInItem",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->SetKeyInItem((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_GetDropPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIItem *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_GetDropPanel",1,SWIGTYPE_p_UIManager);
  }
  
  result = (UIItem *)(arg1)->GetDropPanel();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIItem,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_CloseTips(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_CloseTips",1,SWIGTYPE_p_UIManager);
  }
  
  (arg1)->CloseTips();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_InsertToInOutEvent(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIItem *arg2 = (UIItem *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_InsertToInOutEvent",1,SWIGTYPE_p_UIManager);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIManager_InsertToInOutEvent",2,SWIGTYPE_p_UIItem);
  }
  
  (arg1)->InsertToInOutEvent(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_RemoveFromInOutEvent(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIItem *arg2 = (UIItem *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_RemoveFromInOutEvent",1,SWIGTYPE_p_UIManager);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIManager_RemoveFromInOutEvent",2,SWIGTYPE_p_UIItem);
  }
  
  (arg1)->RemoveFromInOutEvent(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_SetPanel2Top(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIPanel *arg2 = (UIPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_SetPanel2Top",1,SWIGTYPE_p_UIManager);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIManager_SetPanel2Top",2,SWIGTYPE_p_UIPanel);
  }
  
  (arg1)->SetPanel2Top(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_SetPanelEx2Top(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIPanelEx *arg2 = (UIPanelEx *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_SetPanelEx2Top",1,SWIGTYPE_p_UIManager);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIPanelEx,0))){
    SWIG_fail_ptr("UIManager_SetPanelEx2Top",2,SWIGTYPE_p_UIPanelEx);
  }
  
  (arg1)->SetPanelEx2Top(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_SetPanel2Bottom(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIPanel *arg2 = (UIPanel *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_SetPanel2Bottom",1,SWIGTYPE_p_UIManager);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIPanel,0))){
    SWIG_fail_ptr("UIManager_SetPanel2Bottom",2,SWIGTYPE_p_UIPanel);
  }
  
  (arg1)->SetPanel2Bottom(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_SetPanelEx2Bottom(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIPanelEx *arg2 = (UIPanelEx *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_SetPanelEx2Bottom",1,SWIGTYPE_p_UIManager);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIPanelEx,0))){
    SWIG_fail_ptr("UIManager_SetPanelEx2Bottom",2,SWIGTYPE_p_UIPanelEx);
  }
  
  (arg1)->SetPanelEx2Bottom(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_SetBackImage(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  CImage *arg2 = (CImage *) 0 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  unsigned int arg6 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  if(!lua_isnumber(L,6)) SWIG_fail_arg(6);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_SetBackImage",1,SWIGTYPE_p_UIManager);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_CImage,0))){
    SWIG_fail_ptr("UIManager_SetBackImage",2,SWIGTYPE_p_CImage);
  }
  
  arg3 = (unsigned int)lua_tonumber(L, 3);
  arg4 = (unsigned int)lua_tonumber(L, 4);
  arg5 = (unsigned int)lua_tonumber(L, 5);
  arg6 = (unsigned int)lua_tonumber(L, 6);
  (arg1)->SetBackImage(arg2,arg3,arg4,arg5,arg6);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_GetBackImage(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  CImage *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_GetBackImage",1,SWIGTYPE_p_UIManager);
  }
  
  result = (CImage *)(arg1)->GetBackImage();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CImage,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_GetLuaState(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  lua_State *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_GetLuaState",1,SWIGTYPE_p_UIManager);
  }
  
  result = (lua_State *)(arg1)->GetLuaState();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_lua_State,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_LoadLuaUI(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_LoadLuaUI",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->LoadLuaUI((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_SetAllPanelDisable(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_SetAllPanelDisable",1,SWIGTYPE_p_UIManager);
  }
  
  (arg1)->SetAllPanelDisable();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_RestoreAllPanelEnable(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_RestoreAllPanelEnable",1,SWIGTYPE_p_UIManager);
  }
  
  (arg1)->RestoreAllPanelEnable();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_GetFocusItem(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIItem *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_GetFocusItem",1,SWIGTYPE_p_UIManager);
  }
  
  result = (UIItem *)(arg1)->GetFocusItem();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIItem,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_UIItemSetEnable(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  if(!lua_isboolean(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_UIItemSetEnable",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (bool)lua_toboolean(L, 3);
  (arg1)->UIItemSetEnable((char const *)arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_RemoveUpdateUIItem(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  UIItem *arg2 = (UIItem *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_RemoveUpdateUIItem",1,SWIGTYPE_p_UIManager);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_UIItem,0))){
    SWIG_fail_ptr("UIManager_RemoveUpdateUIItem",2,SWIGTYPE_p_UIItem);
  }
  
  (arg1)->RemoveUpdateUIItem(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_FreezeAll(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_FreezeAll",1,SWIGTYPE_p_UIManager);
  }
  
  (arg1)->FreezeAll();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_UnfreezeAll(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_UnfreezeAll",1,SWIGTYPE_p_UIManager);
  }
  
  (arg1)->UnfreezeAll();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIManager_IsFreeze(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIManager_IsFreeze",1,SWIGTYPE_p_UIManager);
  }
  
  result = (bool)(arg1)->IsFreeze();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_UIManager(void *obj) {
UIManager *arg1 = (UIManager *) obj;
delete arg1;
}
static swig_lua_method swig_UIManager_methods[] = {
    {"GetCursorX", _wrap_UIManager_GetCursorX}, 
    {"GetCursorY", _wrap_UIManager_GetCursorY}, 
    {"Detect", _wrap_UIManager_Detect}, 
    {"RenderAll", _wrap_UIManager_RenderAll}, 
    {"GetUIItem", _wrap_UIManager_GetUIItem}, 
    {"GetWaitItem", _wrap_UIManager_GetWaitItem}, 
    {"SetBackImageA", _wrap_UIManager_SetBackImageA}, 
    {"RegisterImage", _wrap_UIManager_RegisterImage}, 
    {"RegisterImageA", _wrap_UIManager_RegisterImageA}, 
    {"SetIDName", _wrap_UIManager_SetIDName}, 
    {"GetIDName", _wrap_UIManager_GetIDName}, 
    {"FindUIPanel", _wrap_UIManager_FindUIPanel}, 
    {"FindUIPanelEx", _wrap_UIManager_FindUIPanelEx}, 
    {"FindUIStaticText", _wrap_UIManager_FindUIStaticText}, 
    {"FindUIButton", _wrap_UIManager_FindUIButton}, 
    {"FindUIEditBox", _wrap_UIManager_FindUIEditBox}, 
    {"FindUIEditBoxEx", _wrap_UIManager_FindUIEditBoxEx}, 
    {"FindUIPopUpMenu", _wrap_UIManager_FindUIPopUpMenu}, 
    {"FindUIScrollBarV", _wrap_UIManager_FindUIScrollBarV}, 
    {"FindUIChatPanel", _wrap_UIManager_FindUIChatPanel}, 
    {"FindUIMiniMap", _wrap_UIManager_FindUIMiniMap}, 
    {"FindUIImage", _wrap_UIManager_FindUIImage}, 
    {"FindUILinerImage", _wrap_UIManager_FindUILinerImage}, 
    {"FindUICheckBox", _wrap_UIManager_FindUICheckBox}, 
    {"FindUIAniIcon", _wrap_UIManager_FindUIAniIcon}, 
    {"AddLockUIPanel", _wrap_UIManager_AddLockUIPanel}, 
    {"ClearLockUIPanel", _wrap_UIManager_ClearLockUIPanel}, 
    {"LockPanelActive", _wrap_UIManager_LockPanelActive}, 
    {"BasePanelActive", _wrap_UIManager_BasePanelActive}, 
    {"SetMonoItem", _wrap_UIManager_SetMonoItem}, 
    {"SetMonoPanel", _wrap_UIManager_SetMonoPanel}, 
    {"SetMonoPanelEx", _wrap_UIManager_SetMonoPanelEx}, 
    {"GetMonoItem", _wrap_UIManager_GetMonoItem}, 
    {"GetMonoPanel", _wrap_UIManager_GetMonoPanel}, 
    {"GetMonoPanelEx", _wrap_UIManager_GetMonoPanelEx}, 
    {"ClearMonoPanel", _wrap_UIManager_ClearMonoPanel}, 
    {"LockMonoPanel", _wrap_UIManager_LockMonoPanel}, 
    {"UnlockMonoPanel", _wrap_UIManager_UnlockMonoPanel}, 
    {"SetLockMonoPanel", _wrap_UIManager_SetLockMonoPanel}, 
    {"IsLockMonoPanel", _wrap_UIManager_IsLockMonoPanel}, 
    {"SetFollowPanel", _wrap_UIManager_SetFollowPanel}, 
    {"ChangeFocus", _wrap_UIManager_ChangeFocus}, 
    {"SetEvent", _wrap_UIManager_SetEvent}, 
    {"GetEvent", _wrap_UIManager_GetEvent}, 
    {"CatchEvent", _wrap_UIManager_CatchEvent}, 
    {"SetLeaveTimerItem", _wrap_UIManager_SetLeaveTimerItem}, 
    {"ClearLeaveTimerItem", _wrap_UIManager_ClearLeaveTimerItem}, 
    {"SetMoveInTimerItem", _wrap_UIManager_SetMoveInTimerItem}, 
    {"ClearMoveInTimerItem", _wrap_UIManager_ClearMoveInTimerItem}, 
    {"ClearStateItem", _wrap_UIManager_ClearStateItem}, 
    {"SetDragPanel2Top", _wrap_UIManager_SetDragPanel2Top}, 
    {"CheckPanelOnTop", _wrap_UIManager_CheckPanelOnTop}, 
    {"GetPanelOnTop", _wrap_UIManager_GetPanelOnTop}, 
    {"ChangeParent", _wrap_UIManager_ChangeParent}, 
    {"DeletePanel", _wrap_UIManager_DeletePanel}, 
    {"AddDirtyUIItem", _wrap_UIManager_AddDirtyUIItem}, 
    {"SetDefaultEnterFunc", _wrap_UIManager_SetDefaultEnterFunc}, 
    {"AddUIID", _wrap_UIManager_AddUIID}, 
    {"SetLuaFuncName", _wrap_UIManager_SetLuaFuncName}, 
    {"ResetTipsPanel", _wrap_UIManager_ResetTipsPanel}, 
    {"AddUIPanel", _wrap_UIManager_AddUIPanel}, 
    {"AddUpdateUIItem", _wrap_UIManager_AddUpdateUIItem}, 
    {"ResetDragItem", _wrap_UIManager_ResetDragItem}, 
    {"StopDrag", _wrap_UIManager_StopDrag}, 
    {"DragNow", _wrap_UIManager_DragNow}, 
    {"SetDragItemXY", _wrap_UIManager_SetDragItemXY}, 
    {"GetKeyInItem", _wrap_UIManager_GetKeyInItem}, 
    {"SetKeyInItem", _wrap_UIManager_SetKeyInItem}, 
    {"GetDropPanel", _wrap_UIManager_GetDropPanel}, 
    {"CloseTips", _wrap_UIManager_CloseTips}, 
    {"InsertToInOutEvent", _wrap_UIManager_InsertToInOutEvent}, 
    {"RemoveFromInOutEvent", _wrap_UIManager_RemoveFromInOutEvent}, 
    {"SetPanel2Top", _wrap_UIManager_SetPanel2Top}, 
    {"SetPanelEx2Top", _wrap_UIManager_SetPanelEx2Top}, 
    {"SetPanel2Bottom", _wrap_UIManager_SetPanel2Bottom}, 
    {"SetPanelEx2Bottom", _wrap_UIManager_SetPanelEx2Bottom}, 
    {"SetBackImage", _wrap_UIManager_SetBackImage}, 
    {"GetBackImage", _wrap_UIManager_GetBackImage}, 
    {"GetLuaState", _wrap_UIManager_GetLuaState}, 
    {"LoadLuaUI", _wrap_UIManager_LoadLuaUI}, 
    {"SetAllPanelDisable", _wrap_UIManager_SetAllPanelDisable}, 
    {"RestoreAllPanelEnable", _wrap_UIManager_RestoreAllPanelEnable}, 
    {"GetFocusItem", _wrap_UIManager_GetFocusItem}, 
    {"UIItemSetEnable", _wrap_UIManager_UIItemSetEnable}, 
    {"RemoveUpdateUIItem", _wrap_UIManager_RemoveUpdateUIItem}, 
    {"FreezeAll", _wrap_UIManager_FreezeAll}, 
    {"UnfreezeAll", _wrap_UIManager_UnfreezeAll}, 
    {"IsFreeze", _wrap_UIManager_IsFreeze}, 
    {0,0}
};
static swig_lua_attribute swig_UIManager_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_UIManager_bases[] = {0};
swig_lua_class _wrap_class_UIManager = { "UIManager", &SWIGTYPE_p_UIManager,_wrap_new_UIManager, swig_delete_UIManager, swig_UIManager_methods, swig_UIManager_attributes, swig_UIManager_bases };

static int _wrap_GetUIManager(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *result = 0 ;
  
  result = (UIManager *)GetUIManager();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIManager,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_FSound_Close(lua_State* L) {
  int SWIG_arg = -1;
  FSound *arg1 = (FSound *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FSound,0))){
    SWIG_fail_ptr("FSound_Close",1,SWIGTYPE_p_FSound);
  }
  
  (arg1)->Close();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_FSound_Play(lua_State* L) {
  int SWIG_arg = -1;
  FSound *arg1 = (FSound *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FSound,0))){
    SWIG_fail_ptr("FSound_Play",1,SWIGTYPE_p_FSound);
  }
  
  (arg1)->Play();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_FSound_Stop(lua_State* L) {
  int SWIG_arg = -1;
  FSound *arg1 = (FSound *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FSound,0))){
    SWIG_fail_ptr("FSound_Stop",1,SWIGTYPE_p_FSound);
  }
  
  (arg1)->Stop();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_FSound_Pause(lua_State* L) {
  int SWIG_arg = -1;
  FSound *arg1 = (FSound *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FSound,0))){
    SWIG_fail_ptr("FSound_Pause",1,SWIGTYPE_p_FSound);
  }
  
  (arg1)->Pause();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_FSound_Resume(lua_State* L) {
  int SWIG_arg = -1;
  FSound *arg1 = (FSound *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FSound,0))){
    SWIG_fail_ptr("FSound_Resume",1,SWIGTYPE_p_FSound);
  }
  
  (arg1)->Resume();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_FSound_SetVolume(lua_State* L) {
  int SWIG_arg = -1;
  FSound *arg1 = (FSound *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FSound,0))){
    SWIG_fail_ptr("FSound_SetVolume",1,SWIGTYPE_p_FSound);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SetVolume(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_FSound(lua_State* L) {
  int SWIG_arg = -1;
  FSound *result = 0 ;
  
  result = (FSound *)new FSound();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_FSound,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_FSound(lua_State* L) {
  int SWIG_arg = -1;
  FSound *arg1 = (FSound *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FSound,0))){
    SWIG_fail_ptr("delete_FSound",1,SWIGTYPE_p_FSound);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_FSound(void *obj) {
FSound *arg1 = (FSound *) obj;
delete arg1;
}
static swig_lua_method swig_FSound_methods[] = {
    {"Close", _wrap_FSound_Close}, 
    {"Play", _wrap_FSound_Play}, 
    {"Stop", _wrap_FSound_Stop}, 
    {"Pause", _wrap_FSound_Pause}, 
    {"Resume", _wrap_FSound_Resume}, 
    {"SetVolume", _wrap_FSound_SetVolume}, 
    {0,0}
};
static swig_lua_attribute swig_FSound_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_FSound_bases[] = {0};
swig_lua_class _wrap_class_FSound = { "FSound", &SWIGTYPE_p_FSound,_wrap_new_FSound, swig_delete_FSound, swig_FSound_methods, swig_FSound_attributes, swig_FSound_bases };

static int _wrap_FSOUND_Manager_Init(lua_State* L) {
  int SWIG_arg = -1;
  FSOUND_Manager *arg1 = (FSOUND_Manager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FSOUND_Manager,0))){
    SWIG_fail_ptr("FSOUND_Manager_Init",1,SWIGTYPE_p_FSOUND_Manager);
  }
  
  (arg1)->Init();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_FSOUND_Manager_Close(lua_State* L) {
  int SWIG_arg = -1;
  FSOUND_Manager *arg1 = (FSOUND_Manager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FSOUND_Manager,0))){
    SWIG_fail_ptr("FSOUND_Manager_Close",1,SWIGTYPE_p_FSOUND_Manager);
  }
  
  (arg1)->Close();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_FSOUND_Manager_SetMusic(lua_State* L) {
  int SWIG_arg = -1;
  FSOUND_Manager *arg1 = (FSOUND_Manager *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FSOUND_Manager,0))){
    SWIG_fail_ptr("FSOUND_Manager_SetMusic",1,SWIGTYPE_p_FSOUND_Manager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  (arg1)->SetMusic((char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_FSOUND_Manager_PlayMusic(lua_State* L) {
  int SWIG_arg = -1;
  FSOUND_Manager *arg1 = (FSOUND_Manager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FSOUND_Manager,0))){
    SWIG_fail_ptr("FSOUND_Manager_PlayMusic",1,SWIGTYPE_p_FSOUND_Manager);
  }
  
  (arg1)->PlayMusic();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_FSOUND_Manager_StopMusic(lua_State* L) {
  int SWIG_arg = -1;
  FSOUND_Manager *arg1 = (FSOUND_Manager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FSOUND_Manager,0))){
    SWIG_fail_ptr("FSOUND_Manager_StopMusic",1,SWIGTYPE_p_FSOUND_Manager);
  }
  
  (arg1)->StopMusic();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_FSOUND_Manager_PauseMusic(lua_State* L) {
  int SWIG_arg = -1;
  FSOUND_Manager *arg1 = (FSOUND_Manager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FSOUND_Manager,0))){
    SWIG_fail_ptr("FSOUND_Manager_PauseMusic",1,SWIGTYPE_p_FSOUND_Manager);
  }
  
  (arg1)->PauseMusic();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_FSOUND_Manager_ResumeMusic(lua_State* L) {
  int SWIG_arg = -1;
  FSOUND_Manager *arg1 = (FSOUND_Manager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FSOUND_Manager,0))){
    SWIG_fail_ptr("FSOUND_Manager_ResumeMusic",1,SWIGTYPE_p_FSOUND_Manager);
  }
  
  (arg1)->ResumeMusic();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_FSOUND_Manager_MusicIsPlaying(lua_State* L) {
  int SWIG_arg = -1;
  FSOUND_Manager *arg1 = (FSOUND_Manager *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FSOUND_Manager,0))){
    SWIG_fail_ptr("FSOUND_Manager_MusicIsPlaying",1,SWIGTYPE_p_FSOUND_Manager);
  }
  
  result = (bool)(arg1)->MusicIsPlaying();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_FSOUND_Manager_MusicSetVolume(lua_State* L) {
  int SWIG_arg = -1;
  FSOUND_Manager *arg1 = (FSOUND_Manager *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FSOUND_Manager,0))){
    SWIG_fail_ptr("FSOUND_Manager_MusicSetVolume",1,SWIGTYPE_p_FSOUND_Manager);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->MusicSetVolume(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_FSOUND_Manager_CreateSoundA(lua_State* L) {
  int SWIG_arg = -1;
  FSOUND_Manager *arg1 = (FSOUND_Manager *) 0 ;
  char *arg2 = (char *) 0 ;
  FSound *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FSOUND_Manager,0))){
    SWIG_fail_ptr("FSOUND_Manager_CreateSoundA",1,SWIGTYPE_p_FSOUND_Manager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  result = (FSound *)(arg1)->CreateSoundA((char const *)arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_FSound,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_FSOUND_Manager_CreateSound(lua_State* L) {
  int SWIG_arg = -1;
  FSOUND_Manager *arg1 = (FSOUND_Manager *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  FSound *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FSOUND_Manager,0))){
    SWIG_fail_ptr("FSOUND_Manager_CreateSound",1,SWIGTYPE_p_FSOUND_Manager);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("FSOUND_Manager_CreateSound",2,SWIGTYPE_p_wchar_t);
  }
  
  result = (FSound *)(arg1)->CreateSound((wchar_t const *)arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_FSound,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_FSOUND_Manager_GetSound__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  FSOUND_Manager *arg1 = (FSOUND_Manager *) 0 ;
  int arg2 ;
  FSound *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FSOUND_Manager,0))){
    SWIG_fail_ptr("FSOUND_Manager_GetSound",1,SWIGTYPE_p_FSOUND_Manager);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  result = (FSound *)(arg1)->GetSound(arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_FSound,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_FSOUND_Manager_GetSound__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  FSOUND_Manager *arg1 = (FSOUND_Manager *) 0 ;
  char *arg2 = (char *) 0 ;
  FSound *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FSOUND_Manager,0))){
    SWIG_fail_ptr("FSOUND_Manager_GetSound",1,SWIGTYPE_p_FSOUND_Manager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  result = (FSound *)(arg1)->GetSound((char const *)arg2);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_FSound,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_FSOUND_Manager_GetSound(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_FSOUND_Manager, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_FSOUND_Manager_GetSound__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_FSOUND_Manager, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_FSOUND_Manager_GetSound__SWIG_1(L);
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'FSOUND_Manager_GetSound'");
  lua_error(L);return 0;
}


static int _wrap_FSOUND_Manager_PauseAll(lua_State* L) {
  int SWIG_arg = -1;
  FSOUND_Manager *arg1 = (FSOUND_Manager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FSOUND_Manager,0))){
    SWIG_fail_ptr("FSOUND_Manager_PauseAll",1,SWIGTYPE_p_FSOUND_Manager);
  }
  
  (arg1)->PauseAll();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_FSOUND_Manager_ResumeAll(lua_State* L) {
  int SWIG_arg = -1;
  FSOUND_Manager *arg1 = (FSOUND_Manager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FSOUND_Manager,0))){
    SWIG_fail_ptr("FSOUND_Manager_ResumeAll",1,SWIGTYPE_p_FSOUND_Manager);
  }
  
  (arg1)->ResumeAll();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_FSOUND_Manager(lua_State* L) {
  int SWIG_arg = -1;
  FSOUND_Manager *result = 0 ;
  
  result = (FSOUND_Manager *)new FSOUND_Manager();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_FSOUND_Manager,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_FSOUND_Manager(lua_State* L) {
  int SWIG_arg = -1;
  FSOUND_Manager *arg1 = (FSOUND_Manager *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FSOUND_Manager,0))){
    SWIG_fail_ptr("delete_FSOUND_Manager",1,SWIGTYPE_p_FSOUND_Manager);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_FSOUND_Manager(void *obj) {
FSOUND_Manager *arg1 = (FSOUND_Manager *) obj;
delete arg1;
}
static swig_lua_method swig_FSOUND_Manager_methods[] = {
    {"Init", _wrap_FSOUND_Manager_Init}, 
    {"Close", _wrap_FSOUND_Manager_Close}, 
    {"SetMusic", _wrap_FSOUND_Manager_SetMusic}, 
    {"PlayMusic", _wrap_FSOUND_Manager_PlayMusic}, 
    {"StopMusic", _wrap_FSOUND_Manager_StopMusic}, 
    {"PauseMusic", _wrap_FSOUND_Manager_PauseMusic}, 
    {"ResumeMusic", _wrap_FSOUND_Manager_ResumeMusic}, 
    {"MusicIsPlaying", _wrap_FSOUND_Manager_MusicIsPlaying}, 
    {"MusicSetVolume", _wrap_FSOUND_Manager_MusicSetVolume}, 
    {"CreateSoundA", _wrap_FSOUND_Manager_CreateSoundA}, 
    {"CreateSound", _wrap_FSOUND_Manager_CreateSound}, 
    {"GetSound", _wrap_FSOUND_Manager_GetSound}, 
    {"PauseAll", _wrap_FSOUND_Manager_PauseAll}, 
    {"ResumeAll", _wrap_FSOUND_Manager_ResumeAll}, 
    {0,0}
};
static swig_lua_attribute swig_FSOUND_Manager_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_FSOUND_Manager_bases[] = {0};
swig_lua_class _wrap_class_FSOUND_Manager = { "FSOUND_Manager", &SWIGTYPE_p_FSOUND_Manager,_wrap_new_FSOUND_Manager, swig_delete_FSOUND_Manager, swig_FSOUND_Manager_methods, swig_FSOUND_Manager_attributes, swig_FSOUND_Manager_bases };

static int _wrap_GetFSoundManager(lua_State* L) {
  int SWIG_arg = -1;
  FSOUND_Manager *result = 0 ;
  
  result = (FSOUND_Manager *)GetFSoundManager();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_FSOUND_Manager,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CEntityBase_SetEntOffsetJumpY(lua_State* L) {
  int SWIG_arg = -1;
  CEntityBase *arg1 = (CEntityBase *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CEntityBase,0))){
    SWIG_fail_ptr("CEntityBase_SetEntOffsetJumpY",1,SWIGTYPE_p_CEntityBase);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SetEntOffsetJumpY(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CEntityBase(lua_State* L) {
  int SWIG_arg = -1;
  CEntityBase *result = 0 ;
  
  result = (CEntityBase *)new CEntityBase();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CEntityBase,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CEntityBase(lua_State* L) {
  int SWIG_arg = -1;
  CEntityBase *arg1 = (CEntityBase *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CEntityBase,0))){
    SWIG_fail_ptr("delete_CEntityBase",1,SWIGTYPE_p_CEntityBase);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CEntityBase(void *obj) {
CEntityBase *arg1 = (CEntityBase *) obj;
delete arg1;
}
static swig_lua_method swig_CEntityBase_methods[] = {
    {"SetEntOffsetJumpY", _wrap_CEntityBase_SetEntOffsetJumpY}, 
    {0,0}
};
static swig_lua_attribute swig_CEntityBase_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CEntityBase_bases[] = {0};
swig_lua_class _wrap_class_CEntityBase = { "CEntityBase", &SWIGTYPE_p_CEntityBase,_wrap_new_CEntityBase, swig_delete_CEntityBase, swig_CEntityBase_methods, swig_CEntityBase_attributes, swig_CEntityBase_bases };

static int _wrap_CAnimatedEntity_SetEntOffsetJumpY(lua_State* L) {
  int SWIG_arg = -1;
  CAnimatedEntity *arg1 = (CAnimatedEntity *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CAnimatedEntity,0))){
    SWIG_fail_ptr("CAnimatedEntity_SetEntOffsetJumpY",1,SWIGTYPE_p_CAnimatedEntity);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SetEntOffsetJumpY(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CAnimatedEntity_AppendAnimationSet(lua_State* L) {
  int SWIG_arg = -1;
  CAnimatedEntity *arg1 = (CAnimatedEntity *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  double arg6 ;
  bool arg7 ;
  int arg8 ;
  unsigned int arg9 ;
  unsigned int arg10 ;
  bool arg11 ;
  bool arg12 ;
  int arg13 ;
  int arg14 ;
  int arg15 ;
  int arg16 ;
  WORD arg17 ;
  WORD arg18 ;
  WORD arg19 ;
  WORD *argp17 ;
  WORD *argp18 ;
  WORD *argp19 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  if(!lua_isnumber(L,6)) SWIG_fail_arg(6);
  if(!lua_isboolean(L,7)) SWIG_fail_arg(7);
  if(!lua_isnumber(L,8)) SWIG_fail_arg(8);
  if(!lua_isnumber(L,9)) SWIG_fail_arg(9);
  if(!lua_isnumber(L,10)) SWIG_fail_arg(10);
  if(!lua_isboolean(L,11)) SWIG_fail_arg(11);
  if(!lua_isboolean(L,12)) SWIG_fail_arg(12);
  if(!lua_isnumber(L,13)) SWIG_fail_arg(13);
  if(!lua_isnumber(L,14)) SWIG_fail_arg(14);
  if(!lua_isnumber(L,15)) SWIG_fail_arg(15);
  if(!lua_isnumber(L,16)) SWIG_fail_arg(16);
  if(!lua_isuserdata(L,17)) SWIG_fail_arg(17);
  if(!lua_isuserdata(L,18)) SWIG_fail_arg(18);
  if(!lua_isuserdata(L,19)) SWIG_fail_arg(19);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CAnimatedEntity,0))){
    SWIG_fail_ptr("CAnimatedEntity_AppendAnimationSet",1,SWIGTYPE_p_CAnimatedEntity);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  arg6 = (double)lua_tonumber(L, 6);
  arg7 = (bool)lua_toboolean(L, 7);
  arg8 = (int)lua_tonumber(L, 8);
  arg9 = (unsigned int)lua_tonumber(L, 9);
  arg10 = (unsigned int)lua_tonumber(L, 10);
  arg11 = (bool)lua_toboolean(L, 11);
  arg12 = (bool)lua_toboolean(L, 12);
  arg13 = (int)lua_tonumber(L, 13);
  arg14 = (int)lua_tonumber(L, 14);
  arg15 = (int)lua_tonumber(L, 15);
  arg16 = (int)lua_tonumber(L, 16);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,17,(void**)&argp17,SWIGTYPE_p_WORD,0))){
    SWIG_fail_ptr("CAnimatedEntity_AppendAnimationSet",17,SWIGTYPE_WORD);
  }
  arg17 = *argp17;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,18,(void**)&argp18,SWIGTYPE_p_WORD,0))){
    SWIG_fail_ptr("CAnimatedEntity_AppendAnimationSet",18,SWIGTYPE_WORD);
  }
  arg18 = *argp18;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,19,(void**)&argp19,SWIGTYPE_p_WORD,0))){
    SWIG_fail_ptr("CAnimatedEntity_AppendAnimationSet",19,SWIGTYPE_WORD);
  }
  arg19 = *argp19;
  
  (arg1)->AppendAnimationSet(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CAnimatedEntity_InitChainData(lua_State* L) {
  int SWIG_arg = -1;
  CAnimatedEntity *arg1 = (CAnimatedEntity *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CAnimatedEntity,0))){
    SWIG_fail_ptr("CAnimatedEntity_InitChainData",1,SWIGTYPE_p_CAnimatedEntity);
  }
  
  (arg1)->InitChainData();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CAnimatedEntity_PushChainData(lua_State* L) {
  int SWIG_arg = -1;
  CAnimatedEntity *arg1 = (CAnimatedEntity *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CAnimatedEntity,0))){
    SWIG_fail_ptr("CAnimatedEntity_PushChainData",1,SWIGTYPE_p_CAnimatedEntity);
  }
  
  (arg1)->PushChainData();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CAnimatedEntity_SetAnimIndexChain(lua_State* L) {
  int SWIG_arg = -1;
  CAnimatedEntity *arg1 = (CAnimatedEntity *) 0 ;
  int arg2 ;
  int arg3 ;
  bool arg4 ;
  bool arg5 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isboolean(L,4)) SWIG_fail_arg(4);
  if(!lua_isboolean(L,5)) SWIG_fail_arg(5);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CAnimatedEntity,0))){
    SWIG_fail_ptr("CAnimatedEntity_SetAnimIndexChain",1,SWIGTYPE_p_CAnimatedEntity);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (bool)lua_toboolean(L, 4);
  arg5 = (bool)lua_toboolean(L, 5);
  (arg1)->SetAnimIndexChain(arg2,arg3,arg4,arg5);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CAnimatedEntity_SetSharkChain(lua_State* L) {
  int SWIG_arg = -1;
  CAnimatedEntity *arg1 = (CAnimatedEntity *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  WORD arg6 ;
  WORD arg7 ;
  WORD arg8 ;
  WORD *argp6 ;
  WORD *argp7 ;
  WORD *argp8 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  if(!lua_isuserdata(L,6)) SWIG_fail_arg(6);
  if(!lua_isuserdata(L,7)) SWIG_fail_arg(7);
  if(!lua_isuserdata(L,8)) SWIG_fail_arg(8);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CAnimatedEntity,0))){
    SWIG_fail_ptr("CAnimatedEntity_SetSharkChain",1,SWIGTYPE_p_CAnimatedEntity);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,6,(void**)&argp6,SWIGTYPE_p_WORD,0))){
    SWIG_fail_ptr("CAnimatedEntity_SetSharkChain",6,SWIGTYPE_WORD);
  }
  arg6 = *argp6;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,7,(void**)&argp7,SWIGTYPE_p_WORD,0))){
    SWIG_fail_ptr("CAnimatedEntity_SetSharkChain",7,SWIGTYPE_WORD);
  }
  arg7 = *argp7;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,8,(void**)&argp8,SWIGTYPE_p_WORD,0))){
    SWIG_fail_ptr("CAnimatedEntity_SetSharkChain",8,SWIGTYPE_WORD);
  }
  arg8 = *argp8;
  
  (arg1)->SetSharkChain(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CAnimatedEntity_SetJumpDataChain(lua_State* L) {
  int SWIG_arg = -1;
  CAnimatedEntity *arg1 = (CAnimatedEntity *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  double arg5 ;
  unsigned int arg6 ;
  bool arg7 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  if(!lua_isnumber(L,6)) SWIG_fail_arg(6);
  if(!lua_isboolean(L,7)) SWIG_fail_arg(7);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CAnimatedEntity,0))){
    SWIG_fail_ptr("CAnimatedEntity_SetJumpDataChain",1,SWIGTYPE_p_CAnimatedEntity);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  arg6 = (unsigned int)lua_tonumber(L, 6);
  arg7 = (bool)lua_toboolean(L, 7);
  (arg1)->SetJumpDataChain(arg2,arg3,arg4,arg5,arg6,arg7);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CAnimatedEntity_SetChainStartTime(lua_State* L) {
  int SWIG_arg = -1;
  CAnimatedEntity *arg1 = (CAnimatedEntity *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CAnimatedEntity,0))){
    SWIG_fail_ptr("CAnimatedEntity_SetChainStartTime",1,SWIGTYPE_p_CAnimatedEntity);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetChainStartTime(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CAnimatedEntity_GetAnimationIndex(lua_State* L) {
  int SWIG_arg = -1;
  CAnimatedEntity *arg1 = (CAnimatedEntity *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CAnimatedEntity,0))){
    SWIG_fail_ptr("CAnimatedEntity_GetAnimationIndex",1,SWIGTYPE_p_CAnimatedEntity);
  }
  
  result = (int)(arg1)->GetAnimationIndex();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CAnimatedEntity_GetAnimationRotation(lua_State* L) {
  int SWIG_arg = -1;
  CAnimatedEntity *arg1 = (CAnimatedEntity *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CAnimatedEntity,0))){
    SWIG_fail_ptr("CAnimatedEntity_GetAnimationRotation",1,SWIGTYPE_p_CAnimatedEntity);
  }
  
  result = (int)(arg1)->GetAnimationRotation();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CAnimatedEntity(lua_State* L) {
  int SWIG_arg = -1;
  CAnimatedEntity *result = 0 ;
  
  result = (CAnimatedEntity *)new CAnimatedEntity();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CAnimatedEntity,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CAnimatedEntity(lua_State* L) {
  int SWIG_arg = -1;
  CAnimatedEntity *arg1 = (CAnimatedEntity *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CAnimatedEntity,0))){
    SWIG_fail_ptr("delete_CAnimatedEntity",1,SWIGTYPE_p_CAnimatedEntity);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CAnimatedEntity(void *obj) {
CAnimatedEntity *arg1 = (CAnimatedEntity *) obj;
delete arg1;
}
static swig_lua_method swig_CAnimatedEntity_methods[] = {
    {"SetEntOffsetJumpY", _wrap_CAnimatedEntity_SetEntOffsetJumpY}, 
    {"AppendAnimationSet", _wrap_CAnimatedEntity_AppendAnimationSet}, 
    {"InitChainData", _wrap_CAnimatedEntity_InitChainData}, 
    {"PushChainData", _wrap_CAnimatedEntity_PushChainData}, 
    {"SetAnimIndexChain", _wrap_CAnimatedEntity_SetAnimIndexChain}, 
    {"SetSharkChain", _wrap_CAnimatedEntity_SetSharkChain}, 
    {"SetJumpDataChain", _wrap_CAnimatedEntity_SetJumpDataChain}, 
    {"SetChainStartTime", _wrap_CAnimatedEntity_SetChainStartTime}, 
    {"GetAnimationIndex", _wrap_CAnimatedEntity_GetAnimationIndex}, 
    {"GetAnimationRotation", _wrap_CAnimatedEntity_GetAnimationRotation}, 
    {0,0}
};
static swig_lua_attribute swig_CAnimatedEntity_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CAnimatedEntity_bases[] = {0};
swig_lua_class _wrap_class_CAnimatedEntity = { "CAnimatedEntity", &SWIGTYPE_p_CAnimatedEntity,_wrap_new_CAnimatedEntity, swig_delete_CAnimatedEntity, swig_CAnimatedEntity_methods, swig_CAnimatedEntity_attributes, swig_CAnimatedEntity_bases };

static int _wrap_CMenuSkillProcess_UpdateSkillMenu(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSkillProcess *arg1 = (CMenuSkillProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSkillProcess,0))){
    SWIG_fail_ptr("CMenuSkillProcess_UpdateSkillMenu",1,SWIGTYPE_p_CMenuSkillProcess);
  }
  
  (arg1)->UpdateSkillMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSkillProcess_UpdateSubSkillMenu(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSkillProcess *arg1 = (CMenuSkillProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSkillProcess,0))){
    SWIG_fail_ptr("CMenuSkillProcess_UpdateSubSkillMenu",1,SWIGTYPE_p_CMenuSkillProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->UpdateSubSkillMenu(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSkillProcess_UpdateMainSkillMenu(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSkillProcess *arg1 = (CMenuSkillProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSkillProcess,0))){
    SWIG_fail_ptr("CMenuSkillProcess_UpdateMainSkillMenu",1,SWIGTYPE_p_CMenuSkillProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->UpdateMainSkillMenu(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSkillProcess_SkillMenuMainUp(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSkillProcess *arg1 = (CMenuSkillProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSkillProcess,0))){
    SWIG_fail_ptr("CMenuSkillProcess_SkillMenuMainUp",1,SWIGTYPE_p_CMenuSkillProcess);
  }
  
  (arg1)->SkillMenuMainUp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSkillProcess_SkillMenuMainDown(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSkillProcess *arg1 = (CMenuSkillProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSkillProcess,0))){
    SWIG_fail_ptr("CMenuSkillProcess_SkillMenuMainDown",1,SWIGTYPE_p_CMenuSkillProcess);
  }
  
  (arg1)->SkillMenuMainDown();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSkillProcess_SkillMenuMainSubUp(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSkillProcess *arg1 = (CMenuSkillProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSkillProcess,0))){
    SWIG_fail_ptr("CMenuSkillProcess_SkillMenuMainSubUp",1,SWIGTYPE_p_CMenuSkillProcess);
  }
  
  (arg1)->SkillMenuMainSubUp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSkillProcess_SkillMenuMainSubDown(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSkillProcess *arg1 = (CMenuSkillProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSkillProcess,0))){
    SWIG_fail_ptr("CMenuSkillProcess_SkillMenuMainSubDown",1,SWIGTYPE_p_CMenuSkillProcess);
  }
  
  (arg1)->SkillMenuMainSubDown();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSkillProcess_SkillMenuMainScroll(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSkillProcess *arg1 = (CMenuSkillProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSkillProcess,0))){
    SWIG_fail_ptr("CMenuSkillProcess_SkillMenuMainScroll",1,SWIGTYPE_p_CMenuSkillProcess);
  }
  
  (arg1)->SkillMenuMainScroll();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSkillProcess_SkillMenuSubScroll(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSkillProcess *arg1 = (CMenuSkillProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSkillProcess,0))){
    SWIG_fail_ptr("CMenuSkillProcess_SkillMenuSubScroll",1,SWIGTYPE_p_CMenuSkillProcess);
  }
  
  (arg1)->SkillMenuSubScroll();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSkillProcess_GetUseSkillID(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSkillProcess *arg1 = (CMenuSkillProcess *) 0 ;
  Int arg2 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSkillProcess,0))){
    SWIG_fail_ptr("CMenuSkillProcess_GetUseSkillID",1,SWIGTYPE_p_CMenuSkillProcess);
  }
  
  arg2 = (Int)lua_tonumber(L, 2);
  result = (int)(arg1)->GetUseSkillID(arg2);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSkillProcess_UseSkill(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSkillProcess *arg1 = (CMenuSkillProcess *) 0 ;
  int arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSkillProcess,0))){
    SWIG_fail_ptr("CMenuSkillProcess_UseSkill",1,SWIGTYPE_p_CMenuSkillProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  result = (bool)(arg1)->UseSkill(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSkillProcess_UseSkillID(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSkillProcess *arg1 = (CMenuSkillProcess *) 0 ;
  Int arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSkillProcess,0))){
    SWIG_fail_ptr("CMenuSkillProcess_UseSkillID",1,SWIGTYPE_p_CMenuSkillProcess);
  }
  
  arg2 = (Int)lua_tonumber(L, 2);
  result = (bool)(arg1)->UseSkillID(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSkillProcess_OpenSkillDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSkillProcess *arg1 = (CMenuSkillProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSkillProcess,0))){
    SWIG_fail_ptr("CMenuSkillProcess_OpenSkillDetail",1,SWIGTYPE_p_CMenuSkillProcess);
  }
  
  (arg1)->OpenSkillDetail();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSkillProcess_SetSkillDetailIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSkillProcess *arg1 = (CMenuSkillProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSkillProcess,0))){
    SWIG_fail_ptr("CMenuSkillProcess_SetSkillDetailIndex",1,SWIGTYPE_p_CMenuSkillProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SetSkillDetailIndex(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSkillProcess_SetSkillShop(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSkillProcess *arg1 = (CMenuSkillProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSkillProcess,0))){
    SWIG_fail_ptr("CMenuSkillProcess_SetSkillShop",1,SWIGTYPE_p_CMenuSkillProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SetSkillShop(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSkillProcess_GetIsShop(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSkillProcess *arg1 = (CMenuSkillProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSkillProcess,0))){
    SWIG_fail_ptr("CMenuSkillProcess_GetIsShop",1,SWIGTYPE_p_CMenuSkillProcess);
  }
  
  result = (bool)(arg1)->GetIsShop();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSkillProcess_ShopLearn(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSkillProcess *arg1 = (CMenuSkillProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSkillProcess,0))){
    SWIG_fail_ptr("CMenuSkillProcess_ShopLearn",1,SWIGTYPE_p_CMenuSkillProcess);
  }
  
  (arg1)->ShopLearn();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSkillProcess_ResetPosition(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSkillProcess *arg1 = (CMenuSkillProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSkillProcess,0))){
    SWIG_fail_ptr("CMenuSkillProcess_ResetPosition",1,SWIGTYPE_p_CMenuSkillProcess);
  }
  
  (arg1)->ResetPosition();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuSkillProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSkillProcess *result = 0 ;
  
  result = (CMenuSkillProcess *)new CMenuSkillProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuSkillProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuSkillProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSkillProcess *arg1 = (CMenuSkillProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSkillProcess,0))){
    SWIG_fail_ptr("delete_CMenuSkillProcess",1,SWIGTYPE_p_CMenuSkillProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuSkillProcess(void *obj) {
CMenuSkillProcess *arg1 = (CMenuSkillProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuSkillProcess_methods[] = {
    {"UpdateSkillMenu", _wrap_CMenuSkillProcess_UpdateSkillMenu}, 
    {"UpdateSubSkillMenu", _wrap_CMenuSkillProcess_UpdateSubSkillMenu}, 
    {"UpdateMainSkillMenu", _wrap_CMenuSkillProcess_UpdateMainSkillMenu}, 
    {"SkillMenuMainUp", _wrap_CMenuSkillProcess_SkillMenuMainUp}, 
    {"SkillMenuMainDown", _wrap_CMenuSkillProcess_SkillMenuMainDown}, 
    {"SkillMenuMainSubUp", _wrap_CMenuSkillProcess_SkillMenuMainSubUp}, 
    {"SkillMenuMainSubDown", _wrap_CMenuSkillProcess_SkillMenuMainSubDown}, 
    {"SkillMenuMainScroll", _wrap_CMenuSkillProcess_SkillMenuMainScroll}, 
    {"SkillMenuSubScroll", _wrap_CMenuSkillProcess_SkillMenuSubScroll}, 
    {"GetUseSkillID", _wrap_CMenuSkillProcess_GetUseSkillID}, 
    {"UseSkill", _wrap_CMenuSkillProcess_UseSkill}, 
    {"UseSkillID", _wrap_CMenuSkillProcess_UseSkillID}, 
    {"OpenSkillDetail", _wrap_CMenuSkillProcess_OpenSkillDetail}, 
    {"SetSkillDetailIndex", _wrap_CMenuSkillProcess_SetSkillDetailIndex}, 
    {"SetSkillShop", _wrap_CMenuSkillProcess_SetSkillShop}, 
    {"GetIsShop", _wrap_CMenuSkillProcess_GetIsShop}, 
    {"ShopLearn", _wrap_CMenuSkillProcess_ShopLearn}, 
    {"ResetPosition", _wrap_CMenuSkillProcess_ResetPosition}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuSkillProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuSkillProcess_bases[] = {0};
swig_lua_class _wrap_class_CMenuSkillProcess = { "CMenuSkillProcess", &SWIGTYPE_p_CMenuSkillProcess,_wrap_new_CMenuSkillProcess, swig_delete_CMenuSkillProcess, swig_CMenuSkillProcess_methods, swig_CMenuSkillProcess_attributes, swig_CMenuSkillProcess_bases };

static int _wrap_CMenuQuestLogProcess_CallMissionButtonEffect(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestLogProcess *arg1 = (CMenuQuestLogProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuQuestLogProcess,0))){
    SWIG_fail_ptr("CMenuQuestLogProcess_CallMissionButtonEffect",1,SWIGTYPE_p_CMenuQuestLogProcess);
  }
  
  (arg1)->CallMissionButtonEffect();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuQuestLogProcess_OnSelectQuestTrace(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestLogProcess *arg1 = (CMenuQuestLogProcess *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuQuestLogProcess,0))){
    SWIG_fail_ptr("CMenuQuestLogProcess_OnSelectQuestTrace",1,SWIGTYPE_p_CMenuQuestLogProcess);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->OnSelectQuestTrace(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuQuestLogProcess_OnSelectLogDType(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestLogProcess *arg1 = (CMenuQuestLogProcess *) 0 ;
  UInt16 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuQuestLogProcess,0))){
    SWIG_fail_ptr("CMenuQuestLogProcess_OnSelectLogDType",1,SWIGTYPE_p_CMenuQuestLogProcess);
  }
  
  arg2 = (UInt16)lua_tonumber(L, 2);
  (arg1)->OnSelectLogDType(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuQuestLogProcess_UpdateMainQuestLstUI(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestLogProcess *arg1 = (CMenuQuestLogProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuQuestLogProcess,0))){
    SWIG_fail_ptr("CMenuQuestLogProcess_UpdateMainQuestLstUI",1,SWIGTYPE_p_CMenuQuestLogProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->UpdateMainQuestLstUI(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuQuestLogProcess_OnUpdateNoteUI(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestLogProcess *arg1 = (CMenuQuestLogProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuQuestLogProcess,0))){
    SWIG_fail_ptr("CMenuQuestLogProcess_OnUpdateNoteUI",1,SWIGTYPE_p_CMenuQuestLogProcess);
  }
  
  (arg1)->OnUpdateNoteUI();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuQuestLogProcess_LuaMainLstUpRow(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestLogProcess *arg1 = (CMenuQuestLogProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuQuestLogProcess,0))){
    SWIG_fail_ptr("CMenuQuestLogProcess_LuaMainLstUpRow",1,SWIGTYPE_p_CMenuQuestLogProcess);
  }
  
  (arg1)->LuaMainLstUpRow();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuQuestLogProcess_LuaMainLstDownRow(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestLogProcess *arg1 = (CMenuQuestLogProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuQuestLogProcess,0))){
    SWIG_fail_ptr("CMenuQuestLogProcess_LuaMainLstDownRow",1,SWIGTYPE_p_CMenuQuestLogProcess);
  }
  
  (arg1)->LuaMainLstDownRow();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuQuestLogProcess_LuaMainLstScrollMove(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestLogProcess *arg1 = (CMenuQuestLogProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuQuestLogProcess,0))){
    SWIG_fail_ptr("CMenuQuestLogProcess_LuaMainLstScrollMove",1,SWIGTYPE_p_CMenuQuestLogProcess);
  }
  
  (arg1)->LuaMainLstScrollMove();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuQuestLogProcess_LuaSubDescUpRow(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestLogProcess *arg1 = (CMenuQuestLogProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuQuestLogProcess,0))){
    SWIG_fail_ptr("CMenuQuestLogProcess_LuaSubDescUpRow",1,SWIGTYPE_p_CMenuQuestLogProcess);
  }
  
  (arg1)->LuaSubDescUpRow();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuQuestLogProcess_LuaSubDescDownRow(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestLogProcess *arg1 = (CMenuQuestLogProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuQuestLogProcess,0))){
    SWIG_fail_ptr("CMenuQuestLogProcess_LuaSubDescDownRow",1,SWIGTYPE_p_CMenuQuestLogProcess);
  }
  
  (arg1)->LuaSubDescDownRow();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuQuestLogProcess_LuaSubDescScrollMove(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestLogProcess *arg1 = (CMenuQuestLogProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuQuestLogProcess,0))){
    SWIG_fail_ptr("CMenuQuestLogProcess_LuaSubDescScrollMove",1,SWIGTYPE_p_CMenuQuestLogProcess);
  }
  
  (arg1)->LuaSubDescScrollMove();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuQuestLogProcess_LuaUpdateSubDescScrollV(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestLogProcess *arg1 = (CMenuQuestLogProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuQuestLogProcess,0))){
    SWIG_fail_ptr("CMenuQuestLogProcess_LuaUpdateSubDescScrollV",1,SWIGTYPE_p_CMenuQuestLogProcess);
  }
  
  (arg1)->LuaUpdateSubDescScrollV();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuQuestLogProcess_LuaCancelQuestClient(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestLogProcess *arg1 = (CMenuQuestLogProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuQuestLogProcess,0))){
    SWIG_fail_ptr("CMenuQuestLogProcess_LuaCancelQuestClient",1,SWIGTYPE_p_CMenuQuestLogProcess);
  }
  
  (arg1)->LuaCancelQuestClient();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuQuestLogProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestLogProcess *result = 0 ;
  
  result = (CMenuQuestLogProcess *)new CMenuQuestLogProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuQuestLogProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuQuestLogProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestLogProcess *arg1 = (CMenuQuestLogProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuQuestLogProcess,0))){
    SWIG_fail_ptr("delete_CMenuQuestLogProcess",1,SWIGTYPE_p_CMenuQuestLogProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuQuestLogProcess(void *obj) {
CMenuQuestLogProcess *arg1 = (CMenuQuestLogProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuQuestLogProcess_methods[] = {
    {"CallMissionButtonEffect", _wrap_CMenuQuestLogProcess_CallMissionButtonEffect}, 
    {"OnSelectQuestTrace", _wrap_CMenuQuestLogProcess_OnSelectQuestTrace}, 
    {"OnSelectLogDType", _wrap_CMenuQuestLogProcess_OnSelectLogDType}, 
    {"UpdateMainQuestLstUI", _wrap_CMenuQuestLogProcess_UpdateMainQuestLstUI}, 
    {"OnUpdateNoteUI", _wrap_CMenuQuestLogProcess_OnUpdateNoteUI}, 
    {"LuaMainLstUpRow", _wrap_CMenuQuestLogProcess_LuaMainLstUpRow}, 
    {"LuaMainLstDownRow", _wrap_CMenuQuestLogProcess_LuaMainLstDownRow}, 
    {"LuaMainLstScrollMove", _wrap_CMenuQuestLogProcess_LuaMainLstScrollMove}, 
    {"LuaSubDescUpRow", _wrap_CMenuQuestLogProcess_LuaSubDescUpRow}, 
    {"LuaSubDescDownRow", _wrap_CMenuQuestLogProcess_LuaSubDescDownRow}, 
    {"LuaSubDescScrollMove", _wrap_CMenuQuestLogProcess_LuaSubDescScrollMove}, 
    {"LuaUpdateSubDescScrollV", _wrap_CMenuQuestLogProcess_LuaUpdateSubDescScrollV}, 
    {"LuaCancelQuestClient", _wrap_CMenuQuestLogProcess_LuaCancelQuestClient}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuQuestLogProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuQuestLogProcess_bases[] = {0};
swig_lua_class _wrap_class_CMenuQuestLogProcess = { "CMenuQuestLogProcess", &SWIGTYPE_p_CMenuQuestLogProcess,_wrap_new_CMenuQuestLogProcess, swig_delete_CMenuQuestLogProcess, swig_CMenuQuestLogProcess_methods, swig_CMenuQuestLogProcess_attributes, swig_CMenuQuestLogProcess_bases };

static int _wrap_CMenuPartnerProcess_UpdatePartnerMenu(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_UpdatePartnerMenu",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  (arg1)->UpdatePartnerMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_AttrUp(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_AttrUp",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->AttrUp(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_AttrDown(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_AttrDown",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->AttrDown(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_AddConfirm(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_AddConfirm",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  (arg1)->AddConfirm();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_SelectPartner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_SelectPartner",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SelectPartner(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_ScrollPartner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_ScrollPartner",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->ScrollPartner(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_SetFollow(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_SetFollow",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  (arg1)->SetFollow();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_ResetValue(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_ResetValue",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  (arg1)->ResetValue();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_ChangePartnerName(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_ChangePartnerName",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  (arg1)->ChangePartnerName();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_SetPartnerState(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_SetPartnerState",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SetPartnerState(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_ShowRemovePartnerName(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_ShowRemovePartnerName",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  (arg1)->ShowRemovePartnerName();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_DeleteOnShowPartner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_DeleteOnShowPartner",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  (arg1)->DeleteOnShowPartner();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_UpdateStateButton(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_UpdateStateButton",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  (arg1)->UpdateStateButton();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_ShowSkillDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_ShowSkillDetail",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  (arg1)->ShowSkillDetail();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_UpdateBattleSkillMenu(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_UpdateBattleSkillMenu",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  (arg1)->UpdateBattleSkillMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_SelectSkill(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_SelectSkill",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  result = (bool)(arg1)->SelectSkill();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_ShortCutSelectSkill(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  unsigned int arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_ShortCutSelectSkill",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  result = (bool)(arg1)->ShortCutSelectSkill(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_IsBattleSkillExist(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_IsBattleSkillExist",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  result = (bool)(arg1)->IsBattleSkillExist();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_GetSelectIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  UInt8 result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_GetSelectIndex",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  result = (UInt8)(arg1)->GetSelectIndex();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_ShowPublicPartnerDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_ShowPublicPartnerDetail",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  (arg1)->ShowPublicPartnerDetail(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_HasPartner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_HasPartner",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  result = (bool)(arg1)->HasPartner();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_UpdatePartnerCollectionMenu(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  UInt8 arg2 ;
  UInt8 arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_UpdatePartnerCollectionMenu",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  arg3 = (UInt8)lua_tonumber(L, 3);
  (arg1)->UpdatePartnerCollectionMenu(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_ShowPartnerCollectionDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_ShowPartnerCollectionDetail",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->ShowPartnerCollectionDetail(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_PartnerCollectionNextPage(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  UInt8 arg2 ;
  bool arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isboolean(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_PartnerCollectionNextPage",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  arg3 = (bool)lua_toboolean(L, 3);
  (arg1)->PartnerCollectionNextPage(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_PartnerCollectionUseBuffTemp(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_PartnerCollectionUseBuffTemp",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->PartnerCollectionUseBuffTemp(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_DragPartner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_DragPartner",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  (arg1)->DragPartner();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_AddPartnerCollection(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_AddPartnerCollection",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  (arg1)->AddPartnerCollection();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerProcess_PartnerEatFastFood(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("CMenuPartnerProcess_PartnerEatFastFood",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->PartnerEatFastFood(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuPartnerProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *result = 0 ;
  
  result = (CMenuPartnerProcess *)new CMenuPartnerProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuPartnerProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuPartnerProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerProcess,0))){
    SWIG_fail_ptr("delete_CMenuPartnerProcess",1,SWIGTYPE_p_CMenuPartnerProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuPartnerProcess(void *obj) {
CMenuPartnerProcess *arg1 = (CMenuPartnerProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuPartnerProcess_methods[] = {
    {"UpdatePartnerMenu", _wrap_CMenuPartnerProcess_UpdatePartnerMenu}, 
    {"AttrUp", _wrap_CMenuPartnerProcess_AttrUp}, 
    {"AttrDown", _wrap_CMenuPartnerProcess_AttrDown}, 
    {"AddConfirm", _wrap_CMenuPartnerProcess_AddConfirm}, 
    {"SelectPartner", _wrap_CMenuPartnerProcess_SelectPartner}, 
    {"ScrollPartner", _wrap_CMenuPartnerProcess_ScrollPartner}, 
    {"SetFollow", _wrap_CMenuPartnerProcess_SetFollow}, 
    {"ResetValue", _wrap_CMenuPartnerProcess_ResetValue}, 
    {"ChangePartnerName", _wrap_CMenuPartnerProcess_ChangePartnerName}, 
    {"SetPartnerState", _wrap_CMenuPartnerProcess_SetPartnerState}, 
    {"ShowRemovePartnerName", _wrap_CMenuPartnerProcess_ShowRemovePartnerName}, 
    {"DeleteOnShowPartner", _wrap_CMenuPartnerProcess_DeleteOnShowPartner}, 
    {"UpdateStateButton", _wrap_CMenuPartnerProcess_UpdateStateButton}, 
    {"ShowSkillDetail", _wrap_CMenuPartnerProcess_ShowSkillDetail}, 
    {"UpdateBattleSkillMenu", _wrap_CMenuPartnerProcess_UpdateBattleSkillMenu}, 
    {"SelectSkill", _wrap_CMenuPartnerProcess_SelectSkill}, 
    {"ShortCutSelectSkill", _wrap_CMenuPartnerProcess_ShortCutSelectSkill}, 
    {"IsBattleSkillExist", _wrap_CMenuPartnerProcess_IsBattleSkillExist}, 
    {"GetSelectIndex", _wrap_CMenuPartnerProcess_GetSelectIndex}, 
    {"ShowPublicPartnerDetail", _wrap_CMenuPartnerProcess_ShowPublicPartnerDetail}, 
    {"HasPartner", _wrap_CMenuPartnerProcess_HasPartner}, 
    {"UpdatePartnerCollectionMenu", _wrap_CMenuPartnerProcess_UpdatePartnerCollectionMenu}, 
    {"ShowPartnerCollectionDetail", _wrap_CMenuPartnerProcess_ShowPartnerCollectionDetail}, 
    {"PartnerCollectionNextPage", _wrap_CMenuPartnerProcess_PartnerCollectionNextPage}, 
    {"PartnerCollectionUseBuffTemp", _wrap_CMenuPartnerProcess_PartnerCollectionUseBuffTemp}, 
    {"DragPartner", _wrap_CMenuPartnerProcess_DragPartner}, 
    {"AddPartnerCollection", _wrap_CMenuPartnerProcess_AddPartnerCollection}, 
    {"PartnerEatFastFood", _wrap_CMenuPartnerProcess_PartnerEatFastFood}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuPartnerProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuPartnerProcess_bases[] = {0};
swig_lua_class _wrap_class_CMenuPartnerProcess = { "CMenuPartnerProcess", &SWIGTYPE_p_CMenuPartnerProcess,_wrap_new_CMenuPartnerProcess, swig_delete_CMenuPartnerProcess, swig_CMenuPartnerProcess_methods, swig_CMenuPartnerProcess_attributes, swig_CMenuPartnerProcess_bases };

static int _wrap_CAntiHack_SetHack(lua_State* L) {
  int SWIG_arg = -1;
  CAntiHack *arg1 = (CAntiHack *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CAntiHack,0))){
    SWIG_fail_ptr("CAntiHack_SetHack",1,SWIGTYPE_p_CAntiHack);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->SetHack(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CAntiHack(lua_State* L) {
  int SWIG_arg = -1;
  CAntiHack *result = 0 ;
  
  result = (CAntiHack *)new CAntiHack();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CAntiHack,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CAntiHack(lua_State* L) {
  int SWIG_arg = -1;
  CAntiHack *arg1 = (CAntiHack *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CAntiHack,0))){
    SWIG_fail_ptr("delete_CAntiHack",1,SWIGTYPE_p_CAntiHack);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CAntiHack(void *obj) {
CAntiHack *arg1 = (CAntiHack *) obj;
delete arg1;
}
static swig_lua_method swig_CAntiHack_methods[] = {
    {"SetHack", _wrap_CAntiHack_SetHack}, 
    {0,0}
};
static swig_lua_attribute swig_CAntiHack_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CAntiHack_bases[] = {0};
swig_lua_class _wrap_class_CAntiHack = { "CAntiHack", &SWIGTYPE_p_CAntiHack,_wrap_new_CAntiHack, swig_delete_CAntiHack, swig_CAntiHack_methods, swig_CAntiHack_attributes, swig_CAntiHack_bases };

static int _wrap_CMenuBankService_ConfirmBankAction(lua_State* L) {
  int SWIG_arg = -1;
  CMenuBankService *arg1 = (CMenuBankService *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuBankService,0))){
    SWIG_fail_ptr("CMenuBankService_ConfirmBankAction",1,SWIGTYPE_p_CMenuBankService);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->ConfirmBankAction(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuBankService_CheckDepositAmount(lua_State* L) {
  int SWIG_arg = -1;
  CMenuBankService *arg1 = (CMenuBankService *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuBankService,0))){
    SWIG_fail_ptr("CMenuBankService_CheckDepositAmount",1,SWIGTYPE_p_CMenuBankService);
  }
  
  result = (bool)(arg1)->CheckDepositAmount();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuBankService_CheckWithdrawalAmount(lua_State* L) {
  int SWIG_arg = -1;
  CMenuBankService *arg1 = (CMenuBankService *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuBankService,0))){
    SWIG_fail_ptr("CMenuBankService_CheckWithdrawalAmount",1,SWIGTYPE_p_CMenuBankService);
  }
  
  result = (bool)(arg1)->CheckWithdrawalAmount();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuBankService_RefreshInputValue(lua_State* L) {
  int SWIG_arg = -1;
  CMenuBankService *arg1 = (CMenuBankService *) 0 ;
  unsigned int arg2 ;
  bool arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isboolean(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuBankService,0))){
    SWIG_fail_ptr("CMenuBankService_RefreshInputValue",1,SWIGTYPE_p_CMenuBankService);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  arg3 = (bool)lua_toboolean(L, 3);
  (arg1)->RefreshInputValue(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuBankService_OpenDepositInterface(lua_State* L) {
  int SWIG_arg = -1;
  CMenuBankService *arg1 = (CMenuBankService *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuBankService,0))){
    SWIG_fail_ptr("CMenuBankService_OpenDepositInterface",1,SWIGTYPE_p_CMenuBankService);
  }
  
  (arg1)->OpenDepositInterface();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuBankService_OpenWithdrawalInterface(lua_State* L) {
  int SWIG_arg = -1;
  CMenuBankService *arg1 = (CMenuBankService *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuBankService,0))){
    SWIG_fail_ptr("CMenuBankService_OpenWithdrawalInterface",1,SWIGTYPE_p_CMenuBankService);
  }
  
  (arg1)->OpenWithdrawalInterface();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuBankService_SetInputMoneyColour(lua_State* L) {
  int SWIG_arg = -1;
  CMenuBankService *arg1 = (CMenuBankService *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuBankService,0))){
    SWIG_fail_ptr("CMenuBankService_SetInputMoneyColour",1,SWIGTYPE_p_CMenuBankService);
  }
  
  (arg1)->SetInputMoneyColour();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuBankService(lua_State* L) {
  int SWIG_arg = -1;
  CMenuBankService *result = 0 ;
  
  result = (CMenuBankService *)new CMenuBankService();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuBankService,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuBankService(lua_State* L) {
  int SWIG_arg = -1;
  CMenuBankService *arg1 = (CMenuBankService *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuBankService,0))){
    SWIG_fail_ptr("delete_CMenuBankService",1,SWIGTYPE_p_CMenuBankService);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuBankService(void *obj) {
CMenuBankService *arg1 = (CMenuBankService *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuBankService_methods[] = {
    {"ConfirmBankAction", _wrap_CMenuBankService_ConfirmBankAction}, 
    {"CheckDepositAmount", _wrap_CMenuBankService_CheckDepositAmount}, 
    {"CheckWithdrawalAmount", _wrap_CMenuBankService_CheckWithdrawalAmount}, 
    {"RefreshInputValue", _wrap_CMenuBankService_RefreshInputValue}, 
    {"OpenDepositInterface", _wrap_CMenuBankService_OpenDepositInterface}, 
    {"OpenWithdrawalInterface", _wrap_CMenuBankService_OpenWithdrawalInterface}, 
    {"SetInputMoneyColour", _wrap_CMenuBankService_SetInputMoneyColour}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuBankService_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuBankService_bases[] = {0};
swig_lua_class _wrap_class_CMenuBankService = { "CMenuBankService", &SWIGTYPE_p_CMenuBankService,_wrap_new_CMenuBankService, swig_delete_CMenuBankService, swig_CMenuBankService_methods, swig_CMenuBankService_attributes, swig_CMenuBankService_bases };

static int _wrap_CMenuGivenProcess_ResetAll(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGivenProcess *arg1 = (CMenuGivenProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGivenProcess,0))){
    SWIG_fail_ptr("CMenuGivenProcess_ResetAll",1,SWIGTYPE_p_CMenuGivenProcess);
  }
  
  (arg1)->ResetAll();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGivenProcess_SetTargetCharIDNameToPanel(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGivenProcess *arg1 = (CMenuGivenProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGivenProcess,0))){
    SWIG_fail_ptr("CMenuGivenProcess_SetTargetCharIDNameToPanel",1,SWIGTYPE_p_CMenuGivenProcess);
  }
  
  (arg1)->SetTargetCharIDNameToPanel();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGivenProcess_SetItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGivenProcess *arg1 = (CMenuGivenProcess *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGivenProcess,0))){
    SWIG_fail_ptr("CMenuGivenProcess_SetItem",1,SWIGTYPE_p_CMenuGivenProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  (arg1)->SetItem(arg2,arg3,arg4);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGivenProcess_RemoveItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGivenProcess *arg1 = (CMenuGivenProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGivenProcess,0))){
    SWIG_fail_ptr("CMenuGivenProcess_RemoveItem",1,SWIGTYPE_p_CMenuGivenProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->RemoveItem(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGivenProcess_SetPartner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGivenProcess *arg1 = (CMenuGivenProcess *) 0 ;
  int arg2 ;
  unsigned int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGivenProcess,0))){
    SWIG_fail_ptr("CMenuGivenProcess_SetPartner",1,SWIGTYPE_p_CMenuGivenProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  (arg1)->SetPartner(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGivenProcess_RemovePartner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGivenProcess *arg1 = (CMenuGivenProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGivenProcess,0))){
    SWIG_fail_ptr("CMenuGivenProcess_RemovePartner",1,SWIGTYPE_p_CMenuGivenProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->RemovePartner(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGivenProcess_SetPet(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGivenProcess *arg1 = (CMenuGivenProcess *) 0 ;
  int arg2 ;
  unsigned int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGivenProcess,0))){
    SWIG_fail_ptr("CMenuGivenProcess_SetPet",1,SWIGTYPE_p_CMenuGivenProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  (arg1)->SetPet(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGivenProcess_RemovePet(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGivenProcess *arg1 = (CMenuGivenProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGivenProcess,0))){
    SWIG_fail_ptr("CMenuGivenProcess_RemovePet",1,SWIGTYPE_p_CMenuGivenProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->RemovePet(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGivenProcess_ConfirmGiven(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGivenProcess *arg1 = (CMenuGivenProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGivenProcess,0))){
    SWIG_fail_ptr("CMenuGivenProcess_ConfirmGiven",1,SWIGTYPE_p_CMenuGivenProcess);
  }
  
  (arg1)->ConfirmGiven();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGivenProcess_IsNpcGiven(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGivenProcess *arg1 = (CMenuGivenProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGivenProcess,0))){
    SWIG_fail_ptr("CMenuGivenProcess_IsNpcGiven",1,SWIGTYPE_p_CMenuGivenProcess);
  }
  
  result = (bool)(arg1)->IsNpcGiven();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGivenProcess_IsSuitableNpcGivenItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGivenProcess *arg1 = (CMenuGivenProcess *) 0 ;
  int arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGivenProcess,0))){
    SWIG_fail_ptr("CMenuGivenProcess_IsSuitableNpcGivenItem",1,SWIGTYPE_p_CMenuGivenProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  result = (bool)(arg1)->IsSuitableNpcGivenItem(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGivenProcess_IsSuitableNpcGivenPartner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGivenProcess *arg1 = (CMenuGivenProcess *) 0 ;
  unsigned int arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGivenProcess,0))){
    SWIG_fail_ptr("CMenuGivenProcess_IsSuitableNpcGivenPartner",1,SWIGTYPE_p_CMenuGivenProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  result = (bool)(arg1)->IsSuitableNpcGivenPartner(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGivenProcess_IsSuitableNpcGivenPet(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGivenProcess *arg1 = (CMenuGivenProcess *) 0 ;
  unsigned int arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGivenProcess,0))){
    SWIG_fail_ptr("CMenuGivenProcess_IsSuitableNpcGivenPet",1,SWIGTYPE_p_CMenuGivenProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  result = (bool)(arg1)->IsSuitableNpcGivenPet(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGivenProcess_ShowMoneyColour(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGivenProcess *arg1 = (CMenuGivenProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGivenProcess,0))){
    SWIG_fail_ptr("CMenuGivenProcess_ShowMoneyColour",1,SWIGTYPE_p_CMenuGivenProcess);
  }
  
  (arg1)->ShowMoneyColour();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuGivenProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGivenProcess *result = 0 ;
  
  result = (CMenuGivenProcess *)new CMenuGivenProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuGivenProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuGivenProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGivenProcess *arg1 = (CMenuGivenProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGivenProcess,0))){
    SWIG_fail_ptr("delete_CMenuGivenProcess",1,SWIGTYPE_p_CMenuGivenProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuGivenProcess(void *obj) {
CMenuGivenProcess *arg1 = (CMenuGivenProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuGivenProcess_methods[] = {
    {"ResetAll", _wrap_CMenuGivenProcess_ResetAll}, 
    {"SetTargetCharIDNameToPanel", _wrap_CMenuGivenProcess_SetTargetCharIDNameToPanel}, 
    {"SetItem", _wrap_CMenuGivenProcess_SetItem}, 
    {"RemoveItem", _wrap_CMenuGivenProcess_RemoveItem}, 
    {"SetPartner", _wrap_CMenuGivenProcess_SetPartner}, 
    {"RemovePartner", _wrap_CMenuGivenProcess_RemovePartner}, 
    {"SetPet", _wrap_CMenuGivenProcess_SetPet}, 
    {"RemovePet", _wrap_CMenuGivenProcess_RemovePet}, 
    {"ConfirmGiven", _wrap_CMenuGivenProcess_ConfirmGiven}, 
    {"IsNpcGiven", _wrap_CMenuGivenProcess_IsNpcGiven}, 
    {"IsSuitableNpcGivenItem", _wrap_CMenuGivenProcess_IsSuitableNpcGivenItem}, 
    {"IsSuitableNpcGivenPartner", _wrap_CMenuGivenProcess_IsSuitableNpcGivenPartner}, 
    {"IsSuitableNpcGivenPet", _wrap_CMenuGivenProcess_IsSuitableNpcGivenPet}, 
    {"ShowMoneyColour", _wrap_CMenuGivenProcess_ShowMoneyColour}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuGivenProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuGivenProcess_bases[] = {0};
swig_lua_class _wrap_class_CMenuGivenProcess = { "CMenuGivenProcess", &SWIGTYPE_p_CMenuGivenProcess,_wrap_new_CMenuGivenProcess, swig_delete_CMenuGivenProcess, swig_CMenuGivenProcess_methods, swig_CMenuGivenProcess_attributes, swig_CMenuGivenProcess_bases };

static int _wrap_CMenuItemProcess_NewUpdateItemMenu__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_NewUpdateItemMenu",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->NewUpdateItemMenu(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_NewUpdateItemMenu__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_NewUpdateItemMenu",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  (arg1)->NewUpdateItemMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_NewUpdateItemMenu(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuItemProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_CMenuItemProcess_NewUpdateItemMenu__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuItemProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_CMenuItemProcess_NewUpdateItemMenu__SWIG_0(L);
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'CMenuItemProcess_NewUpdateItemMenu'");
  lua_error(L);return 0;
}


static int _wrap_CMenuItemProcess_NewUpdateItemCharacter(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_NewUpdateItemCharacter",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  (arg1)->NewUpdateItemCharacter();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_UpdateItemPartner__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_UpdateItemPartner",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->UpdateItemPartner(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_UpdateItemPartner__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_UpdateItemPartner",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  (arg1)->UpdateItemPartner();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_UpdateItemPartner(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuItemProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_CMenuItemProcess_UpdateItemPartner__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuItemProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_CMenuItemProcess_UpdateItemPartner__SWIG_0(L);
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'CMenuItemProcess_UpdateItemPartner'");
  lua_error(L);return 0;
}


static int _wrap_CMenuItemProcess_Scroll(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_Scroll",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->Scroll(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_UpdateItemMenu__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_UpdateItemMenu",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->UpdateItemMenu(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_UpdateItemMenu__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_UpdateItemMenu",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  (arg1)->UpdateItemMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_UpdateItemMenu(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuItemProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_CMenuItemProcess_UpdateItemMenu__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuItemProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_CMenuItemProcess_UpdateItemMenu__SWIG_0(L);
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'CMenuItemProcess_UpdateItemMenu'");
  lua_error(L);return 0;
}


static int _wrap_CMenuItemProcess_ResetScroll(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_ResetScroll",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  (arg1)->ResetScroll();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_ItemUse(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_ItemUse",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->ItemUse(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_DragPartner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_DragPartner",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  (arg1)->DragPartner();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_GetSelectedPartnerID(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_GetSelectedPartnerID",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  result = (unsigned int)(arg1)->GetSelectedPartnerID();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_IsGivenPartner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_IsGivenPartner",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  result = (bool)(arg1)->IsGivenPartner();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_GetItemStack(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  UInt8 arg2 ;
  UInt8 result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_GetItemStack",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  result = (UInt8)(arg1)->GetItemStack(arg2);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_UpdateItemDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_UpdateItemDetail",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->UpdateItemDetail(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_ShowPublicItemDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_ShowPublicItemDetail",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  (arg1)->ShowPublicItemDetail(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_IsItemBind(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  UInt8 arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_IsItemBind",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  result = (bool)(arg1)->IsItemBind(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_IsItemGiven(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  UInt8 arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_IsItemGiven",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  result = (bool)(arg1)->IsItemGiven(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_IsItemSent(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  UInt8 arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_IsItemSent",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  result = (bool)(arg1)->IsItemSent(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_NeedRedBox(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  UInt8 arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_NeedRedBox",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  result = (bool)(arg1)->NeedRedBox(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_BindCantTrading__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_BindCantTrading",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->BindCantTrading(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_BindCantTrading__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_BindCantTrading",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  (arg1)->BindCantTrading();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_BindCantTrading(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuItemProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_CMenuItemProcess_BindCantTrading__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuItemProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_CMenuItemProcess_BindCantTrading__SWIG_0(L);
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'CMenuItemProcess_BindCantTrading'");
  lua_error(L);return 0;
}


static int _wrap_CMenuItemProcess_UpdateItemPet__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_UpdateItemPet",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->UpdateItemPet(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_UpdateItemPet__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_UpdateItemPet",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  (arg1)->UpdateItemPet();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_UpdateItemPet(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuItemProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_CMenuItemProcess_UpdateItemPet__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuItemProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_CMenuItemProcess_UpdateItemPet__SWIG_0(L);
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'CMenuItemProcess_UpdateItemPet'");
  lua_error(L);return 0;
}


static int _wrap_CMenuItemProcess_UpdateShortCutSlot(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_UpdateShortCutSlot",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->UpdateShortCutSlot(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_DragPet(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_DragPet",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  (arg1)->DragPet();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_IsGivenPet(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_IsGivenPet",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  result = (bool)(arg1)->IsGivenPet();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_GetSelectedPetID(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_GetSelectedPetID",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  result = (unsigned int)(arg1)->GetSelectedPetID();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_IsItemSellable(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  UInt8 arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_IsItemSellable",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  result = (bool)(arg1)->IsItemSellable(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_GetMenuSelectedPartnerIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  UInt8 result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_GetMenuSelectedPartnerIndex",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  result = (UInt8)(arg1)->GetMenuSelectedPartnerIndex();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_GetMenuSelectedPetIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  UInt8 result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_GetMenuSelectedPetIndex",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  result = (UInt8)(arg1)->GetMenuSelectedPetIndex();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_ResetIdentify(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_ResetIdentify",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  (arg1)->ResetIdentify();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_IdentifyItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_IdentifyItem",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  (arg1)->IdentifyItem();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_ConfirmAssetLockPassword(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  Int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_ConfirmAssetLockPassword",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  arg2 = (Int)lua_tonumber(L, 2);
  (arg1)->ConfirmAssetLockPassword(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_ConfirmAssetUnLockPassword(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  Int arg2 ;
  unsigned int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_ConfirmAssetUnLockPassword",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  arg2 = (Int)lua_tonumber(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  (arg1)->ConfirmAssetUnLockPassword(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_IsPartnerLocked(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  unsigned int arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_IsPartnerLocked",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  result = (bool)(arg1)->IsPartnerLocked(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_IsPetLocked(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  unsigned int arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_IsPetLocked",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  result = (bool)(arg1)->IsPetLocked(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_ForceResetAssetPassword(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_ForceResetAssetPassword",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  (arg1)->ForceResetAssetPassword();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuItemProcess_JpackBag(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("CMenuItemProcess_JpackBag",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->JpackBag(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuItemProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *result = 0 ;
  
  result = (CMenuItemProcess *)new CMenuItemProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuItemProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuItemProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *arg1 = (CMenuItemProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuItemProcess,0))){
    SWIG_fail_ptr("delete_CMenuItemProcess",1,SWIGTYPE_p_CMenuItemProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuItemProcess(void *obj) {
CMenuItemProcess *arg1 = (CMenuItemProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuItemProcess_methods[] = {
    {"NewUpdateItemMenu", _wrap_CMenuItemProcess_NewUpdateItemMenu}, 
    {"NewUpdateItemCharacter", _wrap_CMenuItemProcess_NewUpdateItemCharacter}, 
    {"UpdateItemPartner", _wrap_CMenuItemProcess_UpdateItemPartner}, 
    {"Scroll", _wrap_CMenuItemProcess_Scroll}, 
    {"UpdateItemMenu", _wrap_CMenuItemProcess_UpdateItemMenu}, 
    {"ResetScroll", _wrap_CMenuItemProcess_ResetScroll}, 
    {"ItemUse", _wrap_CMenuItemProcess_ItemUse}, 
    {"DragPartner", _wrap_CMenuItemProcess_DragPartner}, 
    {"GetSelectedPartnerID", _wrap_CMenuItemProcess_GetSelectedPartnerID}, 
    {"IsGivenPartner", _wrap_CMenuItemProcess_IsGivenPartner}, 
    {"GetItemStack", _wrap_CMenuItemProcess_GetItemStack}, 
    {"UpdateItemDetail", _wrap_CMenuItemProcess_UpdateItemDetail}, 
    {"ShowPublicItemDetail", _wrap_CMenuItemProcess_ShowPublicItemDetail}, 
    {"IsItemBind", _wrap_CMenuItemProcess_IsItemBind}, 
    {"IsItemGiven", _wrap_CMenuItemProcess_IsItemGiven}, 
    {"IsItemSent", _wrap_CMenuItemProcess_IsItemSent}, 
    {"NeedRedBox", _wrap_CMenuItemProcess_NeedRedBox}, 
    {"BindCantTrading", _wrap_CMenuItemProcess_BindCantTrading}, 
    {"UpdateItemPet", _wrap_CMenuItemProcess_UpdateItemPet}, 
    {"UpdateShortCutSlot", _wrap_CMenuItemProcess_UpdateShortCutSlot}, 
    {"DragPet", _wrap_CMenuItemProcess_DragPet}, 
    {"IsGivenPet", _wrap_CMenuItemProcess_IsGivenPet}, 
    {"GetSelectedPetID", _wrap_CMenuItemProcess_GetSelectedPetID}, 
    {"IsItemSellable", _wrap_CMenuItemProcess_IsItemSellable}, 
    {"GetMenuSelectedPartnerIndex", _wrap_CMenuItemProcess_GetMenuSelectedPartnerIndex}, 
    {"GetMenuSelectedPetIndex", _wrap_CMenuItemProcess_GetMenuSelectedPetIndex}, 
    {"ResetIdentify", _wrap_CMenuItemProcess_ResetIdentify}, 
    {"IdentifyItem", _wrap_CMenuItemProcess_IdentifyItem}, 
    {"ConfirmAssetLockPassword", _wrap_CMenuItemProcess_ConfirmAssetLockPassword}, 
    {"ConfirmAssetUnLockPassword", _wrap_CMenuItemProcess_ConfirmAssetUnLockPassword}, 
    {"IsPartnerLocked", _wrap_CMenuItemProcess_IsPartnerLocked}, 
    {"IsPetLocked", _wrap_CMenuItemProcess_IsPetLocked}, 
    {"ForceResetAssetPassword", _wrap_CMenuItemProcess_ForceResetAssetPassword}, 
    {"JpackBag", _wrap_CMenuItemProcess_JpackBag}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuItemProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuItemProcess_bases[] = {0};
swig_lua_class _wrap_class_CMenuItemProcess = { "CMenuItemProcess", &SWIGTYPE_p_CMenuItemProcess,_wrap_new_CMenuItemProcess, swig_delete_CMenuItemProcess, swig_CMenuItemProcess_methods, swig_CMenuItemProcess_attributes, swig_CMenuItemProcess_bases };

static int _wrap_CBigMap_DrawButton(lua_State* L) {
  int SWIG_arg = -1;
  CBigMap *arg1 = (CBigMap *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CBigMap,0))){
    SWIG_fail_ptr("CBigMap_DrawButton",1,SWIGTYPE_p_CBigMap);
  }
  
  (arg1)->DrawButton();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CBigMap_GetButtonCount(lua_State* L) {
  int SWIG_arg = -1;
  CBigMap *arg1 = (CBigMap *) 0 ;
  int arg2 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CBigMap,0))){
    SWIG_fail_ptr("CBigMap_GetButtonCount",1,SWIGTYPE_p_CBigMap);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  result = (unsigned int)(arg1)->GetButtonCount(arg2);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CBigMap_ShowPath(lua_State* L) {
  int SWIG_arg = -1;
  CBigMap *arg1 = (CBigMap *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CBigMap,0))){
    SWIG_fail_ptr("CBigMap_ShowPath",1,SWIGTYPE_p_CBigMap);
  }
  
  (arg1)->ShowPath();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CBigMap_StartBigMapDescMode(lua_State* L) {
  int SWIG_arg = -1;
  CBigMap *arg1 = (CBigMap *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CBigMap,0))){
    SWIG_fail_ptr("CBigMap_StartBigMapDescMode",1,SWIGTYPE_p_CBigMap);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->StartBigMapDescMode(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CBigMap_ShowDesc(lua_State* L) {
  int SWIG_arg = -1;
  CBigMap *arg1 = (CBigMap *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CBigMap,0))){
    SWIG_fail_ptr("CBigMap_ShowDesc",1,SWIGTYPE_p_CBigMap);
  }
  
  (arg1)->ShowDesc();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CBigMap_DisableAllFlag(lua_State* L) {
  int SWIG_arg = -1;
  CBigMap *arg1 = (CBigMap *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CBigMap,0))){
    SWIG_fail_ptr("CBigMap_DisableAllFlag",1,SWIGTYPE_p_CBigMap);
  }
  
  (arg1)->DisableAllFlag();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CBigMap_ResetDes(lua_State* L) {
  int SWIG_arg = -1;
  CBigMap *arg1 = (CBigMap *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CBigMap,0))){
    SWIG_fail_ptr("CBigMap_ResetDes",1,SWIGTYPE_p_CBigMap);
  }
  
  (arg1)->ResetDes();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CBigMap_SetOpenBigMap(lua_State* L) {
  int SWIG_arg = -1;
  CBigMap *arg1 = (CBigMap *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CBigMap,0))){
    SWIG_fail_ptr("CBigMap_SetOpenBigMap",1,SWIGTYPE_p_CBigMap);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetOpenBigMap(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CBigMap(lua_State* L) {
  int SWIG_arg = -1;
  CBigMap *result = 0 ;
  
  result = (CBigMap *)new CBigMap();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CBigMap,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CBigMap(lua_State* L) {
  int SWIG_arg = -1;
  CBigMap *arg1 = (CBigMap *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CBigMap,0))){
    SWIG_fail_ptr("delete_CBigMap",1,SWIGTYPE_p_CBigMap);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CBigMap(void *obj) {
CBigMap *arg1 = (CBigMap *) obj;
delete arg1;
}
static swig_lua_method swig_CBigMap_methods[] = {
    {"DrawButton", _wrap_CBigMap_DrawButton}, 
    {"GetButtonCount", _wrap_CBigMap_GetButtonCount}, 
    {"ShowPath", _wrap_CBigMap_ShowPath}, 
    {"StartBigMapDescMode", _wrap_CBigMap_StartBigMapDescMode}, 
    {"ShowDesc", _wrap_CBigMap_ShowDesc}, 
    {"DisableAllFlag", _wrap_CBigMap_DisableAllFlag}, 
    {"ResetDes", _wrap_CBigMap_ResetDes}, 
    {"SetOpenBigMap", _wrap_CBigMap_SetOpenBigMap}, 
    {0,0}
};
static swig_lua_attribute swig_CBigMap_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CBigMap_bases[] = {0};
swig_lua_class _wrap_class_CBigMap = { "CBigMap", &SWIGTYPE_p_CBigMap,_wrap_new_CBigMap, swig_delete_CBigMap, swig_CBigMap_methods, swig_CBigMap_attributes, swig_CBigMap_bases };

static int _wrap_CMenuOnlineShopProcess_ShowCap(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_ShowCap",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->ShowCap(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_ShowHotSale(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_ShowHotSale",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->ShowHotSale(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_ShowMix(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_ShowMix",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->ShowMix(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_ShowAssc(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_ShowAssc",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->ShowAssc(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_ShowPet(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_ShowPet",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->ShowPet(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_ShowDiamond(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_ShowDiamond",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->ShowDiamond(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_ShowBook(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_ShowBook",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->ShowBook(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_ShowMould(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_ShowMould",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->ShowMould(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_ShowFireworks(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_ShowFireworks",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->ShowFireworks(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_ShowPartner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_ShowPartner",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->ShowPartner(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_ShowCloth(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_ShowCloth",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->ShowCloth(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_ShowOther(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_ShowOther",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->ShowOther(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_ShowLimitedItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_ShowLimitedItem",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  (arg1)->ShowLimitedItem();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_ShowDiscountItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_ShowDiscountItem",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  (arg1)->ShowDiscountItem();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_GetShowIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  UInt8 result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_GetShowIndex",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  result = (UInt8)(arg1)->GetShowIndex();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_GetPageNo(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  UInt8 result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_GetPageNo",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  result = (UInt8)(arg1)->GetPageNo();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_GetSelectedIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_GetSelectedIndex",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  result = (int)(arg1)->GetSelectedIndex();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_GetSelectedDiscountIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_GetSelectedDiscountIndex",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  result = (int)(arg1)->GetSelectedDiscountIndex();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_GetSelectedLimitedIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_GetSelectedLimitedIndex",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  result = (int)(arg1)->GetSelectedLimitedIndex();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_ResetSelectedIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_ResetSelectedIndex",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  (arg1)->ResetSelectedIndex();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_ResetSelectedDiscountIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_ResetSelectedDiscountIndex",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  (arg1)->ResetSelectedDiscountIndex();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_ResetSelectedLimitedIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_ResetSelectedLimitedIndex",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  (arg1)->ResetSelectedLimitedIndex();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_SetSelectedIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_SetSelectedIndex",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SetSelectedIndex(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_SetSelectedDiscountIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_SetSelectedDiscountIndex",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SetSelectedDiscountIndex(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_SetSelectedLimitedIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_SetSelectedLimitedIndex",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SetSelectedLimitedIndex(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_AskForOnlineShop(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_AskForOnlineShop",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  (arg1)->AskForOnlineShop();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_CloseOnlineShop(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_CloseOnlineShop",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  (arg1)->CloseOnlineShop();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_NextPage(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_NextPage",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  (arg1)->NextPage();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_PrevPage(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_PrevPage",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  (arg1)->PrevPage();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_ShowItemDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_ShowItemDetail",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  (arg1)->ShowItemDetail();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_ShowDiscountItemDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_ShowDiscountItemDetail",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  (arg1)->ShowDiscountItemDetail();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_ShowLimitedItemDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_ShowLimitedItemDetail",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  (arg1)->ShowLimitedItemDetail();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_GetSelectedItemType(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_GetSelectedItemType",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  result = (int)(arg1)->GetSelectedItemType();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_GetSelectedItemPrice(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  UInt16 arg2 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_GetSelectedItemPrice",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  arg2 = (UInt16)lua_tonumber(L, 2);
  result = (unsigned int)(arg1)->GetSelectedItemPrice(arg2);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_GetMaxSelectedItemStack(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  UInt16 result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_GetMaxSelectedItemStack",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  result = (UInt16)(arg1)->GetMaxSelectedItemStack();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_SetBuyItemStack(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  UInt16 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_SetBuyItemStack",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  arg2 = (UInt16)lua_tonumber(L, 2);
  (arg1)->SetBuyItemStack(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_ConfirmBuyItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_ConfirmBuyItem",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  (arg1)->ConfirmBuyItem();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_GetSelectedItemOverLap(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  UInt8 result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_GetSelectedItemOverLap",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  result = (UInt8)(arg1)->GetSelectedItemOverLap();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_Preview(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_Preview",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  (arg1)->Preview();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_PreviewRotate(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_PreviewRotate",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->PreviewRotate(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_ShowLackMoneyMessage(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_ShowLackMoneyMessage",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  (arg1)->ShowLackMoneyMessage();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_OpenChargeShopWebSite(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_OpenChargeShopWebSite",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->OpenChargeShopWebSite(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_UpdateYuanBao__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_UpdateYuanBao",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->UpdateYuanBao(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_UpdateYuanBao__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("CMenuOnlineShopProcess_UpdateYuanBao",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  (arg1)->UpdateYuanBao();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuOnlineShopProcess_UpdateYuanBao(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuOnlineShopProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_CMenuOnlineShopProcess_UpdateYuanBao__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuOnlineShopProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        return _wrap_CMenuOnlineShopProcess_UpdateYuanBao__SWIG_0(L);
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'CMenuOnlineShopProcess_UpdateYuanBao'");
  lua_error(L);return 0;
}


static int _wrap_new_CMenuOnlineShopProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *result = 0 ;
  
  result = (CMenuOnlineShopProcess *)new CMenuOnlineShopProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuOnlineShopProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuOnlineShopProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuOnlineShopProcess,0))){
    SWIG_fail_ptr("delete_CMenuOnlineShopProcess",1,SWIGTYPE_p_CMenuOnlineShopProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuOnlineShopProcess(void *obj) {
CMenuOnlineShopProcess *arg1 = (CMenuOnlineShopProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuOnlineShopProcess_methods[] = {
    {"ShowCap", _wrap_CMenuOnlineShopProcess_ShowCap}, 
    {"ShowHotSale", _wrap_CMenuOnlineShopProcess_ShowHotSale}, 
    {"ShowMix", _wrap_CMenuOnlineShopProcess_ShowMix}, 
    {"ShowAssc", _wrap_CMenuOnlineShopProcess_ShowAssc}, 
    {"ShowPet", _wrap_CMenuOnlineShopProcess_ShowPet}, 
    {"ShowDiamond", _wrap_CMenuOnlineShopProcess_ShowDiamond}, 
    {"ShowBook", _wrap_CMenuOnlineShopProcess_ShowBook}, 
    {"ShowMould", _wrap_CMenuOnlineShopProcess_ShowMould}, 
    {"ShowFireworks", _wrap_CMenuOnlineShopProcess_ShowFireworks}, 
    {"ShowPartner", _wrap_CMenuOnlineShopProcess_ShowPartner}, 
    {"ShowCloth", _wrap_CMenuOnlineShopProcess_ShowCloth}, 
    {"ShowOther", _wrap_CMenuOnlineShopProcess_ShowOther}, 
    {"ShowLimitedItem", _wrap_CMenuOnlineShopProcess_ShowLimitedItem}, 
    {"ShowDiscountItem", _wrap_CMenuOnlineShopProcess_ShowDiscountItem}, 
    {"GetShowIndex", _wrap_CMenuOnlineShopProcess_GetShowIndex}, 
    {"GetPageNo", _wrap_CMenuOnlineShopProcess_GetPageNo}, 
    {"GetSelectedIndex", _wrap_CMenuOnlineShopProcess_GetSelectedIndex}, 
    {"GetSelectedDiscountIndex", _wrap_CMenuOnlineShopProcess_GetSelectedDiscountIndex}, 
    {"GetSelectedLimitedIndex", _wrap_CMenuOnlineShopProcess_GetSelectedLimitedIndex}, 
    {"ResetSelectedIndex", _wrap_CMenuOnlineShopProcess_ResetSelectedIndex}, 
    {"ResetSelectedDiscountIndex", _wrap_CMenuOnlineShopProcess_ResetSelectedDiscountIndex}, 
    {"ResetSelectedLimitedIndex", _wrap_CMenuOnlineShopProcess_ResetSelectedLimitedIndex}, 
    {"SetSelectedIndex", _wrap_CMenuOnlineShopProcess_SetSelectedIndex}, 
    {"SetSelectedDiscountIndex", _wrap_CMenuOnlineShopProcess_SetSelectedDiscountIndex}, 
    {"SetSelectedLimitedIndex", _wrap_CMenuOnlineShopProcess_SetSelectedLimitedIndex}, 
    {"AskForOnlineShop", _wrap_CMenuOnlineShopProcess_AskForOnlineShop}, 
    {"CloseOnlineShop", _wrap_CMenuOnlineShopProcess_CloseOnlineShop}, 
    {"NextPage", _wrap_CMenuOnlineShopProcess_NextPage}, 
    {"PrevPage", _wrap_CMenuOnlineShopProcess_PrevPage}, 
    {"ShowItemDetail", _wrap_CMenuOnlineShopProcess_ShowItemDetail}, 
    {"ShowDiscountItemDetail", _wrap_CMenuOnlineShopProcess_ShowDiscountItemDetail}, 
    {"ShowLimitedItemDetail", _wrap_CMenuOnlineShopProcess_ShowLimitedItemDetail}, 
    {"GetSelectedItemType", _wrap_CMenuOnlineShopProcess_GetSelectedItemType}, 
    {"GetSelectedItemPrice", _wrap_CMenuOnlineShopProcess_GetSelectedItemPrice}, 
    {"GetMaxSelectedItemStack", _wrap_CMenuOnlineShopProcess_GetMaxSelectedItemStack}, 
    {"SetBuyItemStack", _wrap_CMenuOnlineShopProcess_SetBuyItemStack}, 
    {"ConfirmBuyItem", _wrap_CMenuOnlineShopProcess_ConfirmBuyItem}, 
    {"GetSelectedItemOverLap", _wrap_CMenuOnlineShopProcess_GetSelectedItemOverLap}, 
    {"Preview", _wrap_CMenuOnlineShopProcess_Preview}, 
    {"PreviewRotate", _wrap_CMenuOnlineShopProcess_PreviewRotate}, 
    {"ShowLackMoneyMessage", _wrap_CMenuOnlineShopProcess_ShowLackMoneyMessage}, 
    {"OpenChargeShopWebSite", _wrap_CMenuOnlineShopProcess_OpenChargeShopWebSite}, 
    {"UpdateYuanBao", _wrap_CMenuOnlineShopProcess_UpdateYuanBao}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuOnlineShopProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuOnlineShopProcess_bases[] = {0};
swig_lua_class _wrap_class_CMenuOnlineShopProcess = { "CMenuOnlineShopProcess", &SWIGTYPE_p_CMenuOnlineShopProcess,_wrap_new_CMenuOnlineShopProcess, swig_delete_CMenuOnlineShopProcess, swig_CMenuOnlineShopProcess_methods, swig_CMenuOnlineShopProcess_attributes, swig_CMenuOnlineShopProcess_bases };

static int _wrap_CMenuGiftBox_ShowGiftBoxItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGiftBox *arg1 = (CMenuGiftBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGiftBox,0))){
    SWIG_fail_ptr("CMenuGiftBox_ShowGiftBoxItem",1,SWIGTYPE_p_CMenuGiftBox);
  }
  
  (arg1)->ShowGiftBoxItem();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGiftBox_ShowGiftBoxPartner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGiftBox *arg1 = (CMenuGiftBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGiftBox,0))){
    SWIG_fail_ptr("CMenuGiftBox_ShowGiftBoxPartner",1,SWIGTYPE_p_CMenuGiftBox);
  }
  
  (arg1)->ShowGiftBoxPartner();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGiftBox_ShowGiftBoxPet(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGiftBox *arg1 = (CMenuGiftBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGiftBox,0))){
    SWIG_fail_ptr("CMenuGiftBox_ShowGiftBoxPet",1,SWIGTYPE_p_CMenuGiftBox);
  }
  
  (arg1)->ShowGiftBoxPet();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGiftBox_ShowConfirmGetGiftName(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGiftBox *arg1 = (CMenuGiftBox *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGiftBox,0))){
    SWIG_fail_ptr("CMenuGiftBox_ShowConfirmGetGiftName",1,SWIGTYPE_p_CMenuGiftBox);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->ShowConfirmGetGiftName(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGiftBox_ConfirmGetGift(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGiftBox *arg1 = (CMenuGiftBox *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGiftBox,0))){
    SWIG_fail_ptr("CMenuGiftBox_ConfirmGetGift",1,SWIGTYPE_p_CMenuGiftBox);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->ConfirmGetGift(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGiftBox_ShowDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGiftBox *arg1 = (CMenuGiftBox *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGiftBox,0))){
    SWIG_fail_ptr("CMenuGiftBox_ShowDetail",1,SWIGTYPE_p_CMenuGiftBox);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->ShowDetail(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGiftBox_CloseGiftBox(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGiftBox *arg1 = (CMenuGiftBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGiftBox,0))){
    SWIG_fail_ptr("CMenuGiftBox_CloseGiftBox",1,SWIGTYPE_p_CMenuGiftBox);
  }
  
  (arg1)->CloseGiftBox();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGiftBox_UpdateGiftBoxFromServer(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGiftBox *arg1 = (CMenuGiftBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGiftBox,0))){
    SWIG_fail_ptr("CMenuGiftBox_UpdateGiftBoxFromServer",1,SWIGTYPE_p_CMenuGiftBox);
  }
  
  (arg1)->UpdateGiftBoxFromServer();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuGiftBox(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGiftBox *result = 0 ;
  
  result = (CMenuGiftBox *)new CMenuGiftBox();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuGiftBox,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuGiftBox(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGiftBox *arg1 = (CMenuGiftBox *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGiftBox,0))){
    SWIG_fail_ptr("delete_CMenuGiftBox",1,SWIGTYPE_p_CMenuGiftBox);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuGiftBox(void *obj) {
CMenuGiftBox *arg1 = (CMenuGiftBox *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuGiftBox_methods[] = {
    {"ShowGiftBoxItem", _wrap_CMenuGiftBox_ShowGiftBoxItem}, 
    {"ShowGiftBoxPartner", _wrap_CMenuGiftBox_ShowGiftBoxPartner}, 
    {"ShowGiftBoxPet", _wrap_CMenuGiftBox_ShowGiftBoxPet}, 
    {"ShowConfirmGetGiftName", _wrap_CMenuGiftBox_ShowConfirmGetGiftName}, 
    {"ConfirmGetGift", _wrap_CMenuGiftBox_ConfirmGetGift}, 
    {"ShowDetail", _wrap_CMenuGiftBox_ShowDetail}, 
    {"CloseGiftBox", _wrap_CMenuGiftBox_CloseGiftBox}, 
    {"UpdateGiftBoxFromServer", _wrap_CMenuGiftBox_UpdateGiftBoxFromServer}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuGiftBox_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuGiftBox_bases[] = {0};
swig_lua_class _wrap_class_CMenuGiftBox = { "CMenuGiftBox", &SWIGTYPE_p_CMenuGiftBox,_wrap_new_CMenuGiftBox, swig_delete_CMenuGiftBox, swig_CMenuGiftBox_methods, swig_CMenuGiftBox_attributes, swig_CMenuGiftBox_bases };

static int _wrap_ChatLst_GetEntity(lua_State* L) {
  int SWIG_arg = -1;
  ChatLst *arg1 = (ChatLst *) 0 ;
  CAnimatedEntity *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_ChatLst,0))){
    SWIG_fail_ptr("ChatLst_GetEntity",1,SWIGTYPE_p_ChatLst);
  }
  
  result = (CAnimatedEntity *)(arg1)->GetEntity();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CAnimatedEntity,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ChatLst_GetNext(lua_State* L) {
  int SWIG_arg = -1;
  ChatLst *arg1 = (ChatLst *) 0 ;
  ChatLst *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_ChatLst,0))){
    SWIG_fail_ptr("ChatLst_GetNext",1,SWIGTYPE_p_ChatLst);
  }
  
  result = (ChatLst *)(arg1)->GetNext();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_ChatLst,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ChatLst_Init(lua_State* L) {
  int SWIG_arg = -1;
  ChatLst *arg1 = (ChatLst *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_ChatLst,0))){
    SWIG_fail_ptr("ChatLst_Init",1,SWIGTYPE_p_ChatLst);
  }
  
  (arg1)->Init();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_ChatLst(lua_State* L) {
  int SWIG_arg = -1;
  ChatLst *result = 0 ;
  
  result = (ChatLst *)new ChatLst();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_ChatLst,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_ChatLst(lua_State* L) {
  int SWIG_arg = -1;
  ChatLst *arg1 = (ChatLst *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_ChatLst,0))){
    SWIG_fail_ptr("delete_ChatLst",1,SWIGTYPE_p_ChatLst);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_ChatLst(void *obj) {
ChatLst *arg1 = (ChatLst *) obj;
delete arg1;
}
static swig_lua_method swig_ChatLst_methods[] = {
    {"GetEntity", _wrap_ChatLst_GetEntity}, 
    {"GetNext", _wrap_ChatLst_GetNext}, 
    {"Init", _wrap_ChatLst_Init}, 
    {0,0}
};
static swig_lua_attribute swig_ChatLst_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_ChatLst_bases[] = {0};
swig_lua_class _wrap_class_ChatLst = { "ChatLst", &SWIGTYPE_p_ChatLst,_wrap_new_ChatLst, swig_delete_ChatLst, swig_ChatLst_methods, swig_ChatLst_attributes, swig_ChatLst_bases };

static int _wrap_CBatBubbleControl_LuaAddBatBubble(lua_State* L) {
  int SWIG_arg = -1;
  CBatBubbleControl *arg1 = (CBatBubbleControl *) 0 ;
  Int arg2 ;
  Int arg3 ;
  char *arg4 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isstring(L,4)) SWIG_fail_arg(4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CBatBubbleControl,0))){
    SWIG_fail_ptr("CBatBubbleControl_LuaAddBatBubble",1,SWIGTYPE_p_CBatBubbleControl);
  }
  
  arg2 = (Int)lua_tonumber(L, 2);
  arg3 = (Int)lua_tonumber(L, 3);
  arg4 = (char *)lua_tostring(L, 4);
  (arg1)->LuaAddBatBubble(arg2,arg3,(char const *)arg4);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CBatBubbleControl_LuaAddEnemyDialogue(lua_State* L) {
  int SWIG_arg = -1;
  CBatBubbleControl *arg1 = (CBatBubbleControl *) 0 ;
  unsigned int arg2 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  int arg5 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isstring(L,4)) SWIG_fail_arg(4);
  if(!lua_isnumber(L,5)) SWIG_fail_arg(5);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CBatBubbleControl,0))){
    SWIG_fail_ptr("CBatBubbleControl_LuaAddEnemyDialogue",1,SWIGTYPE_p_CBatBubbleControl);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (char *)lua_tostring(L, 4);
  arg5 = (int)lua_tonumber(L, 5);
  (arg1)->LuaAddEnemyDialogue(arg2,arg3,(char const *)arg4,arg5);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CBatBubbleControl_LuaGetMobIdCount(lua_State* L) {
  int SWIG_arg = -1;
  CBatBubbleControl *arg1 = (CBatBubbleControl *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CBatBubbleControl,0))){
    SWIG_fail_ptr("CBatBubbleControl_LuaGetMobIdCount",1,SWIGTYPE_p_CBatBubbleControl);
  }
  
  result = (int)(arg1)->LuaGetMobIdCount();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CBatBubbleControl_LuaGetMobId(lua_State* L) {
  int SWIG_arg = -1;
  CBatBubbleControl *arg1 = (CBatBubbleControl *) 0 ;
  int arg2 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CBatBubbleControl,0))){
    SWIG_fail_ptr("CBatBubbleControl_LuaGetMobId",1,SWIGTYPE_p_CBatBubbleControl);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  result = (unsigned int)(arg1)->LuaGetMobId(arg2);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CBatBubbleControl_LuaGetMobDialgoueFile(lua_State* L) {
  int SWIG_arg = -1;
  CBatBubbleControl *arg1 = (CBatBubbleControl *) 0 ;
  int arg2 ;
  char *result = 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CBatBubbleControl,0))){
    SWIG_fail_ptr("CBatBubbleControl_LuaGetMobDialgoueFile",1,SWIGTYPE_p_CBatBubbleControl);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  result = (char *)(arg1)->LuaGetMobDialgoueFile(arg2);
  SWIG_arg=0;
  lua_pushstring(L,(const char*)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CBatBubbleControl(lua_State* L) {
  int SWIG_arg = -1;
  CBatBubbleControl *result = 0 ;
  
  result = (CBatBubbleControl *)new CBatBubbleControl();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CBatBubbleControl,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CBatBubbleControl(lua_State* L) {
  int SWIG_arg = -1;
  CBatBubbleControl *arg1 = (CBatBubbleControl *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CBatBubbleControl,0))){
    SWIG_fail_ptr("delete_CBatBubbleControl",1,SWIGTYPE_p_CBatBubbleControl);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CBatBubbleControl(void *obj) {
CBatBubbleControl *arg1 = (CBatBubbleControl *) obj;
delete arg1;
}
static swig_lua_method swig_CBatBubbleControl_methods[] = {
    {"LuaAddBatBubble", _wrap_CBatBubbleControl_LuaAddBatBubble}, 
    {"LuaAddEnemyDialogue", _wrap_CBatBubbleControl_LuaAddEnemyDialogue}, 
    {"LuaGetMobIdCount", _wrap_CBatBubbleControl_LuaGetMobIdCount}, 
    {"LuaGetMobId", _wrap_CBatBubbleControl_LuaGetMobId}, 
    {"LuaGetMobDialgoueFile", _wrap_CBatBubbleControl_LuaGetMobDialgoueFile}, 
    {0,0}
};
static swig_lua_attribute swig_CBatBubbleControl_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CBatBubbleControl_bases[] = {0};
swig_lua_class _wrap_class_CBatBubbleControl = { "CBatBubbleControl", &SWIGTYPE_p_CBatBubbleControl,_wrap_new_CBatBubbleControl, swig_delete_CBatBubbleControl, swig_CBatBubbleControl_methods, swig_CBatBubbleControl_attributes, swig_CBatBubbleControl_bases };

static int _wrap_CMenuTargetProcess_PopUpFunctionCall(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTargetProcess *arg1 = (CMenuTargetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTargetProcess,0))){
    SWIG_fail_ptr("CMenuTargetProcess_PopUpFunctionCall",1,SWIGTYPE_p_CMenuTargetProcess);
  }
  
  (arg1)->PopUpFunctionCall();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTargetProcess_ShowTargetPopUp(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTargetProcess *arg1 = (CMenuTargetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTargetProcess,0))){
    SWIG_fail_ptr("CMenuTargetProcess_ShowTargetPopUp",1,SWIGTYPE_p_CMenuTargetProcess);
  }
  
  (arg1)->ShowTargetPopUp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTargetProcess_HideTargetMenu(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTargetProcess *arg1 = (CMenuTargetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTargetProcess,0))){
    SWIG_fail_ptr("CMenuTargetProcess_HideTargetMenu",1,SWIGTYPE_p_CMenuTargetProcess);
  }
  
  (arg1)->HideTargetMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTargetProcess_UpdateInfo(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTargetProcess *arg1 = (CMenuTargetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTargetProcess,0))){
    SWIG_fail_ptr("CMenuTargetProcess_UpdateInfo",1,SWIGTYPE_p_CMenuTargetProcess);
  }
  
  (arg1)->UpdateInfo();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTargetProcess_FindCharNameFriend(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTargetProcess *arg1 = (CMenuTargetProcess *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTargetProcess,0))){
    SWIG_fail_ptr("CMenuTargetProcess_FindCharNameFriend",1,SWIGTYPE_p_CMenuTargetProcess);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("CMenuTargetProcess_FindCharNameFriend",2,SWIGTYPE_p_wchar_t);
  }
  
  (arg1)->FindCharNameFriend((wchar_t const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTargetProcess_PrivateMsg(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTargetProcess *arg1 = (CMenuTargetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTargetProcess,0))){
    SWIG_fail_ptr("CMenuTargetProcess_PrivateMsg",1,SWIGTYPE_p_CMenuTargetProcess);
  }
  
  (arg1)->PrivateMsg();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTargetProcess_AddToFriend(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTargetProcess *arg1 = (CMenuTargetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTargetProcess,0))){
    SWIG_fail_ptr("CMenuTargetProcess_AddToFriend",1,SWIGTYPE_p_CMenuTargetProcess);
  }
  
  (arg1)->AddToFriend();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTargetProcess_ChangeGrp(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTargetProcess *arg1 = (CMenuTargetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTargetProcess,0))){
    SWIG_fail_ptr("CMenuTargetProcess_ChangeGrp",1,SWIGTYPE_p_CMenuTargetProcess);
  }
  
  (arg1)->ChangeGrp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTargetProcess_BreakRelation(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTargetProcess *arg1 = (CMenuTargetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTargetProcess,0))){
    SWIG_fail_ptr("CMenuTargetProcess_BreakRelation",1,SWIGTYPE_p_CMenuTargetProcess);
  }
  
  (arg1)->BreakRelation();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTargetProcess_BlackList(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTargetProcess *arg1 = (CMenuTargetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTargetProcess,0))){
    SWIG_fail_ptr("CMenuTargetProcess_BlackList",1,SWIGTYPE_p_CMenuTargetProcess);
  }
  
  (arg1)->BlackList();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuTargetProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTargetProcess *result = 0 ;
  
  result = (CMenuTargetProcess *)new CMenuTargetProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuTargetProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuTargetProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTargetProcess *arg1 = (CMenuTargetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTargetProcess,0))){
    SWIG_fail_ptr("delete_CMenuTargetProcess",1,SWIGTYPE_p_CMenuTargetProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuTargetProcess(void *obj) {
CMenuTargetProcess *arg1 = (CMenuTargetProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuTargetProcess_methods[] = {
    {"PopUpFunctionCall", _wrap_CMenuTargetProcess_PopUpFunctionCall}, 
    {"ShowTargetPopUp", _wrap_CMenuTargetProcess_ShowTargetPopUp}, 
    {"HideTargetMenu", _wrap_CMenuTargetProcess_HideTargetMenu}, 
    {"UpdateInfo", _wrap_CMenuTargetProcess_UpdateInfo}, 
    {"FindCharNameFriend", _wrap_CMenuTargetProcess_FindCharNameFriend}, 
    {"PrivateMsg", _wrap_CMenuTargetProcess_PrivateMsg}, 
    {"AddToFriend", _wrap_CMenuTargetProcess_AddToFriend}, 
    {"ChangeGrp", _wrap_CMenuTargetProcess_ChangeGrp}, 
    {"BreakRelation", _wrap_CMenuTargetProcess_BreakRelation}, 
    {"BlackList", _wrap_CMenuTargetProcess_BlackList}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuTargetProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuTargetProcess_bases[] = {0};
swig_lua_class _wrap_class_CMenuTargetProcess = { "CMenuTargetProcess", &SWIGTYPE_p_CMenuTargetProcess,_wrap_new_CMenuTargetProcess, swig_delete_CMenuTargetProcess, swig_CMenuTargetProcess_methods, swig_CMenuTargetProcess_attributes, swig_CMenuTargetProcess_bases };

static int _wrap_CMenuBuffIconProcess_HideAllBuff(lua_State* L) {
  int SWIG_arg = -1;
  CMenuBuffIconProcess *arg1 = (CMenuBuffIconProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuBuffIconProcess,0))){
    SWIG_fail_ptr("CMenuBuffIconProcess_HideAllBuff",1,SWIGTYPE_p_CMenuBuffIconProcess);
  }
  
  (arg1)->HideAllBuff();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuBuffIconProcess_ShowBuffIcon(lua_State* L) {
  int SWIG_arg = -1;
  CMenuBuffIconProcess *arg1 = (CMenuBuffIconProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuBuffIconProcess,0))){
    SWIG_fail_ptr("CMenuBuffIconProcess_ShowBuffIcon",1,SWIGTYPE_p_CMenuBuffIconProcess);
  }
  
  (arg1)->ShowBuffIcon();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuBuffIconProcess_OpenBuffDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuBuffIconProcess *arg1 = (CMenuBuffIconProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuBuffIconProcess,0))){
    SWIG_fail_ptr("CMenuBuffIconProcess_OpenBuffDetail",1,SWIGTYPE_p_CMenuBuffIconProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->OpenBuffDetail(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuBuffIconProcess_HideBuffDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuBuffIconProcess *arg1 = (CMenuBuffIconProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuBuffIconProcess,0))){
    SWIG_fail_ptr("CMenuBuffIconProcess_HideBuffDetail",1,SWIGTYPE_p_CMenuBuffIconProcess);
  }
  
  (arg1)->HideBuffDetail();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuBuffIconProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuBuffIconProcess *result = 0 ;
  
  result = (CMenuBuffIconProcess *)new CMenuBuffIconProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuBuffIconProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuBuffIconProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuBuffIconProcess *arg1 = (CMenuBuffIconProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuBuffIconProcess,0))){
    SWIG_fail_ptr("delete_CMenuBuffIconProcess",1,SWIGTYPE_p_CMenuBuffIconProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuBuffIconProcess(void *obj) {
CMenuBuffIconProcess *arg1 = (CMenuBuffIconProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuBuffIconProcess_methods[] = {
    {"HideAllBuff", _wrap_CMenuBuffIconProcess_HideAllBuff}, 
    {"ShowBuffIcon", _wrap_CMenuBuffIconProcess_ShowBuffIcon}, 
    {"OpenBuffDetail", _wrap_CMenuBuffIconProcess_OpenBuffDetail}, 
    {"HideBuffDetail", _wrap_CMenuBuffIconProcess_HideBuffDetail}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuBuffIconProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuBuffIconProcess_bases[] = {0};
swig_lua_class _wrap_class_CMenuBuffIconProcess = { "CMenuBuffIconProcess", &SWIGTYPE_p_CMenuBuffIconProcess,_wrap_new_CMenuBuffIconProcess, swig_delete_CMenuBuffIconProcess, swig_CMenuBuffIconProcess_methods, swig_CMenuBuffIconProcess_attributes, swig_CMenuBuffIconProcess_bases };

static int _wrap_CMenuFriendProcess_ConstructData(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_ConstructData",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  (arg1)->ConstructData();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_RefreshMenu(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_RefreshMenu",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  (arg1)->RefreshMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_PageUp(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_PageUp",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  (arg1)->PageUp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_PageDown(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_PageDown",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  (arg1)->PageDown();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_ChangeGroup(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_ChangeGroup",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->ChangeGroup(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_GetStartIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  UInt16 result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_GetStartIndex",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  result = (UInt16)(arg1)->GetStartIndex();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_OpenFriendChat(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_OpenFriendChat",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->OpenFriendChat(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_SendMessageToFriend(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_SendMessageToFriend",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  (arg1)->SendMessageToFriend();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_RefreshSelfSetting(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_RefreshSelfSetting",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  (arg1)->RefreshSelfSetting();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_OpenHistory(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_OpenHistory",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  (arg1)->OpenHistory();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_FindFriend(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  wchar_t *arg3 = (wchar_t *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_FindFriend",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("CMenuFriendProcess_FindFriend",2,SWIGTYPE_p_wchar_t);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("CMenuFriendProcess_FindFriend",3,SWIGTYPE_p_wchar_t);
  }
  
  (arg1)->FindFriend((wchar_t const *)arg2,(wchar_t const *)arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_RefreshPopUp(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_RefreshPopUp",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->RefreshPopUp(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_MoveGroup(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  int arg2 ;
  int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_MoveGroup",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->MoveGroup(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_MoveGroupImm(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_MoveGroupImm",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  (arg1)->MoveGroupImm();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_SetChangeGroup(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_SetChangeGroup",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SetChangeGroup(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_OpenFriendDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_OpenFriendDetail",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->OpenFriendDetail(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_OpenTalkingFriendDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_OpenTalkingFriendDetail",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  (arg1)->OpenTalkingFriendDetail();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_ConfirmChangeToGroup(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_ConfirmChangeToGroup",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->ConfirmChangeToGroup(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_ConfirmSettingChange(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_ConfirmSettingChange",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  (arg1)->ConfirmSettingChange();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_NextChatMessage(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_NextChatMessage",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  (arg1)->NextChatMessage();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_HasNextMessage(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_HasNextMessage",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  result = (bool)(arg1)->HasNextMessage();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_FriendScroll(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_FriendScroll",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  (arg1)->FriendScroll();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_FriendChatScroll(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_FriendChatScroll",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  (arg1)->FriendChatScroll();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_FriendHisScroll(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_FriendHisScroll",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  (arg1)->FriendHisScroll();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_ConfirmDelete(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_ConfirmDelete",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  (arg1)->ConfirmDelete();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_ResetTalkingTarget(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_ResetTalkingTarget",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  (arg1)->ResetTalkingTarget();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuFriendProcess_ClearHistory(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("CMenuFriendProcess_ClearHistory",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  (arg1)->ClearHistory();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuFriendProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *result = 0 ;
  
  result = (CMenuFriendProcess *)new CMenuFriendProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuFriendProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuFriendProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *arg1 = (CMenuFriendProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuFriendProcess,0))){
    SWIG_fail_ptr("delete_CMenuFriendProcess",1,SWIGTYPE_p_CMenuFriendProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuFriendProcess(void *obj) {
CMenuFriendProcess *arg1 = (CMenuFriendProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuFriendProcess_methods[] = {
    {"ConstructData", _wrap_CMenuFriendProcess_ConstructData}, 
    {"RefreshMenu", _wrap_CMenuFriendProcess_RefreshMenu}, 
    {"PageUp", _wrap_CMenuFriendProcess_PageUp}, 
    {"PageDown", _wrap_CMenuFriendProcess_PageDown}, 
    {"ChangeGroup", _wrap_CMenuFriendProcess_ChangeGroup}, 
    {"GetStartIndex", _wrap_CMenuFriendProcess_GetStartIndex}, 
    {"OpenFriendChat", _wrap_CMenuFriendProcess_OpenFriendChat}, 
    {"SendMessageToFriend", _wrap_CMenuFriendProcess_SendMessageToFriend}, 
    {"RefreshSelfSetting", _wrap_CMenuFriendProcess_RefreshSelfSetting}, 
    {"OpenHistory", _wrap_CMenuFriendProcess_OpenHistory}, 
    {"FindFriend", _wrap_CMenuFriendProcess_FindFriend}, 
    {"RefreshPopUp", _wrap_CMenuFriendProcess_RefreshPopUp}, 
    {"MoveGroup", _wrap_CMenuFriendProcess_MoveGroup}, 
    {"MoveGroupImm", _wrap_CMenuFriendProcess_MoveGroupImm}, 
    {"SetChangeGroup", _wrap_CMenuFriendProcess_SetChangeGroup}, 
    {"OpenFriendDetail", _wrap_CMenuFriendProcess_OpenFriendDetail}, 
    {"OpenTalkingFriendDetail", _wrap_CMenuFriendProcess_OpenTalkingFriendDetail}, 
    {"ConfirmChangeToGroup", _wrap_CMenuFriendProcess_ConfirmChangeToGroup}, 
    {"ConfirmSettingChange", _wrap_CMenuFriendProcess_ConfirmSettingChange}, 
    {"NextChatMessage", _wrap_CMenuFriendProcess_NextChatMessage}, 
    {"HasNextMessage", _wrap_CMenuFriendProcess_HasNextMessage}, 
    {"FriendScroll", _wrap_CMenuFriendProcess_FriendScroll}, 
    {"FriendChatScroll", _wrap_CMenuFriendProcess_FriendChatScroll}, 
    {"FriendHisScroll", _wrap_CMenuFriendProcess_FriendHisScroll}, 
    {"ConfirmDelete", _wrap_CMenuFriendProcess_ConfirmDelete}, 
    {"ResetTalkingTarget", _wrap_CMenuFriendProcess_ResetTalkingTarget}, 
    {"ClearHistory", _wrap_CMenuFriendProcess_ClearHistory}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuFriendProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuFriendProcess_bases[] = {0};
swig_lua_class _wrap_class_CMenuFriendProcess = { "CMenuFriendProcess", &SWIGTYPE_p_CMenuFriendProcess,_wrap_new_CMenuFriendProcess, swig_delete_CMenuFriendProcess, swig_CMenuFriendProcess_methods, swig_CMenuFriendProcess_attributes, swig_CMenuFriendProcess_bases };

static int _wrap_CMenuGuildProcess_RefreshInfoMenu(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_RefreshInfoMenu",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->RefreshInfoMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_RefreshMemberMenu(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_RefreshMemberMenu",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->RefreshMemberMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_RefreshRuleMenu(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_RefreshRuleMenu",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->RefreshRuleMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_RefreshApplicantMenu(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_RefreshApplicantMenu",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->RefreshApplicantMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_RefreshManorMenu(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_RefreshManorMenu",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->RefreshManorMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_RequestMemberInfo(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_RequestMemberInfo",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->RequestMemberInfo();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_RequestApplicantInfo(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_RequestApplicantInfo",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->RequestApplicantInfo();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_RequestGuildInfo(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_RequestGuildInfo",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->RequestGuildInfo();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_RefreshPostMenu(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_RefreshPostMenu",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->RefreshPostMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_RefreshGuildAimEdit(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_RefreshGuildAimEdit",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->RefreshGuildAimEdit();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_RefreshGuildRuleEdit(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_RefreshGuildRuleEdit",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->RefreshGuildRuleEdit();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_ConfirmGuildAimChange(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_ConfirmGuildAimChange",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->ConfirmGuildAimChange();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_ConfirmGuildRuleChange(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_ConfirmGuildRuleChange",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->ConfirmGuildRuleChange();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_HasGuild(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_HasGuild",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  result = (bool)(arg1)->HasGuild();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_RefreshGuildApplyPanel(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_RefreshGuildApplyPanel",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->RefreshGuildApplyPanel();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_ShowAim(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_ShowAim",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->ShowAim(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_ApplyConfirm(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_ApplyConfirm",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->ApplyConfirm();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_AddGuildMember(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_AddGuildMember",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->AddGuildMember();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_RejectGuildMember(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_RejectGuildMember",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->RejectGuildMember();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_SetMenuIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_SetMenuIndex",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SetMenuIndex(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_SetGuildPostSelectIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_SetGuildPostSelectIndex",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SetGuildPostSelectIndex(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_DeleteGuildMember(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_DeleteGuildMember",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->DeleteGuildMember();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_ConfirmPostChange(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_ConfirmPostChange",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->ConfirmPostChange();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_ShowInfo(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_ShowInfo",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->ShowInfo();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_RefreshGuildButton(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_RefreshGuildButton",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->RefreshGuildButton();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_ConfirmDonate(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_ConfirmDonate",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->ConfirmDonate();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_ConfirmGuildNameInput(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_ConfirmGuildNameInput",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->ConfirmGuildNameInput();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_CancelGuildNameInput(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_CancelGuildNameInput",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->CancelGuildNameInput();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_GetSelectedMember(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  int arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_GetSelectedMember",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  result = (bool)(arg1)->GetSelectedMember(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_ScrollMember(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_ScrollMember",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->ScrollMember();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_MemberPageUp(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_MemberPageUp",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->MemberPageUp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_MemberPageDown(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_MemberPageDown",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->MemberPageDown();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_ScrollGuildApply(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_ScrollGuildApply",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->ScrollGuildApply();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_GuildApplyPageUp(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_GuildApplyPageUp",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->GuildApplyPageUp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_GuildApplyPageDown(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_GuildApplyPageDown",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->GuildApplyPageDown();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_LeaveGuild(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_LeaveGuild",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->LeaveGuild();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_IsSelectedMember(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  bool arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_IsSelectedMember",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  result = (bool)(arg1)->IsSelectedMember(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_FreeGuild(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_FreeGuild",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->FreeGuild();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_SortMember(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_SortMember",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SortMember(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_RefreshGuildBusinessLogPanel(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_RefreshGuildBusinessLogPanel",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->RefreshGuildBusinessLogPanel();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_ScrollGuildBusinessLog(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_ScrollGuildBusinessLog",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->ScrollGuildBusinessLog();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_GuildBusinessLogPageUp(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_GuildBusinessLogPageUp",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->GuildBusinessLogPageUp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_GuildBusinessLogPageDown(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_GuildBusinessLogPageDown",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->GuildBusinessLogPageDown();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_ConfirmGuildBusinessLogSearchYes(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_ConfirmGuildBusinessLogSearchYes",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->ConfirmGuildBusinessLogSearchYes();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_SetGuildBusinessLogSelectIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_SetGuildBusinessLogSelectIndex",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SetGuildBusinessLogSelectIndex(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuGuildProcess_ClearGuildBusinessLog(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("CMenuGuildProcess_ClearGuildBusinessLog",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  (arg1)->ClearGuildBusinessLog();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuGuildProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *result = 0 ;
  
  result = (CMenuGuildProcess *)new CMenuGuildProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuGuildProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuGuildProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *arg1 = (CMenuGuildProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuGuildProcess,0))){
    SWIG_fail_ptr("delete_CMenuGuildProcess",1,SWIGTYPE_p_CMenuGuildProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuGuildProcess(void *obj) {
CMenuGuildProcess *arg1 = (CMenuGuildProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuGuildProcess_methods[] = {
    {"RefreshInfoMenu", _wrap_CMenuGuildProcess_RefreshInfoMenu}, 
    {"RefreshMemberMenu", _wrap_CMenuGuildProcess_RefreshMemberMenu}, 
    {"RefreshRuleMenu", _wrap_CMenuGuildProcess_RefreshRuleMenu}, 
    {"RefreshApplicantMenu", _wrap_CMenuGuildProcess_RefreshApplicantMenu}, 
    {"RefreshManorMenu", _wrap_CMenuGuildProcess_RefreshManorMenu}, 
    {"RequestMemberInfo", _wrap_CMenuGuildProcess_RequestMemberInfo}, 
    {"RequestApplicantInfo", _wrap_CMenuGuildProcess_RequestApplicantInfo}, 
    {"RequestGuildInfo", _wrap_CMenuGuildProcess_RequestGuildInfo}, 
    {"RefreshPostMenu", _wrap_CMenuGuildProcess_RefreshPostMenu}, 
    {"RefreshGuildAimEdit", _wrap_CMenuGuildProcess_RefreshGuildAimEdit}, 
    {"RefreshGuildRuleEdit", _wrap_CMenuGuildProcess_RefreshGuildRuleEdit}, 
    {"ConfirmGuildAimChange", _wrap_CMenuGuildProcess_ConfirmGuildAimChange}, 
    {"ConfirmGuildRuleChange", _wrap_CMenuGuildProcess_ConfirmGuildRuleChange}, 
    {"HasGuild", _wrap_CMenuGuildProcess_HasGuild}, 
    {"RefreshGuildApplyPanel", _wrap_CMenuGuildProcess_RefreshGuildApplyPanel}, 
    {"ShowAim", _wrap_CMenuGuildProcess_ShowAim}, 
    {"ApplyConfirm", _wrap_CMenuGuildProcess_ApplyConfirm}, 
    {"AddGuildMember", _wrap_CMenuGuildProcess_AddGuildMember}, 
    {"RejectGuildMember", _wrap_CMenuGuildProcess_RejectGuildMember}, 
    {"SetMenuIndex", _wrap_CMenuGuildProcess_SetMenuIndex}, 
    {"SetGuildPostSelectIndex", _wrap_CMenuGuildProcess_SetGuildPostSelectIndex}, 
    {"DeleteGuildMember", _wrap_CMenuGuildProcess_DeleteGuildMember}, 
    {"ConfirmPostChange", _wrap_CMenuGuildProcess_ConfirmPostChange}, 
    {"ShowInfo", _wrap_CMenuGuildProcess_ShowInfo}, 
    {"RefreshGuildButton", _wrap_CMenuGuildProcess_RefreshGuildButton}, 
    {"ConfirmDonate", _wrap_CMenuGuildProcess_ConfirmDonate}, 
    {"ConfirmGuildNameInput", _wrap_CMenuGuildProcess_ConfirmGuildNameInput}, 
    {"CancelGuildNameInput", _wrap_CMenuGuildProcess_CancelGuildNameInput}, 
    {"GetSelectedMember", _wrap_CMenuGuildProcess_GetSelectedMember}, 
    {"ScrollMember", _wrap_CMenuGuildProcess_ScrollMember}, 
    {"MemberPageUp", _wrap_CMenuGuildProcess_MemberPageUp}, 
    {"MemberPageDown", _wrap_CMenuGuildProcess_MemberPageDown}, 
    {"ScrollGuildApply", _wrap_CMenuGuildProcess_ScrollGuildApply}, 
    {"GuildApplyPageUp", _wrap_CMenuGuildProcess_GuildApplyPageUp}, 
    {"GuildApplyPageDown", _wrap_CMenuGuildProcess_GuildApplyPageDown}, 
    {"LeaveGuild", _wrap_CMenuGuildProcess_LeaveGuild}, 
    {"IsSelectedMember", _wrap_CMenuGuildProcess_IsSelectedMember}, 
    {"FreeGuild", _wrap_CMenuGuildProcess_FreeGuild}, 
    {"SortMember", _wrap_CMenuGuildProcess_SortMember}, 
    {"RefreshGuildBusinessLogPanel", _wrap_CMenuGuildProcess_RefreshGuildBusinessLogPanel}, 
    {"ScrollGuildBusinessLog", _wrap_CMenuGuildProcess_ScrollGuildBusinessLog}, 
    {"GuildBusinessLogPageUp", _wrap_CMenuGuildProcess_GuildBusinessLogPageUp}, 
    {"GuildBusinessLogPageDown", _wrap_CMenuGuildProcess_GuildBusinessLogPageDown}, 
    {"ConfirmGuildBusinessLogSearchYes", _wrap_CMenuGuildProcess_ConfirmGuildBusinessLogSearchYes}, 
    {"SetGuildBusinessLogSelectIndex", _wrap_CMenuGuildProcess_SetGuildBusinessLogSelectIndex}, 
    {"ClearGuildBusinessLog", _wrap_CMenuGuildProcess_ClearGuildBusinessLog}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuGuildProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuGuildProcess_bases[] = {0};
swig_lua_class _wrap_class_CMenuGuildProcess = { "CMenuGuildProcess", &SWIGTYPE_p_CMenuGuildProcess,_wrap_new_CMenuGuildProcess, swig_delete_CMenuGuildProcess, swig_CMenuGuildProcess_methods, swig_CMenuGuildProcess_attributes, swig_CMenuGuildProcess_bases };

static int _wrap_CMenuPetProcess_ResetMenu(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *arg1 = (CMenuPetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPetProcess,0))){
    SWIG_fail_ptr("CMenuPetProcess_ResetMenu",1,SWIGTYPE_p_CMenuPetProcess);
  }
  
  (arg1)->ResetMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPetProcess_RefreshMenu(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *arg1 = (CMenuPetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPetProcess,0))){
    SWIG_fail_ptr("CMenuPetProcess_RefreshMenu",1,SWIGTYPE_p_CMenuPetProcess);
  }
  
  (arg1)->RefreshMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPetProcess_PageUp(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *arg1 = (CMenuPetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPetProcess,0))){
    SWIG_fail_ptr("CMenuPetProcess_PageUp",1,SWIGTYPE_p_CMenuPetProcess);
  }
  
  (arg1)->PageUp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPetProcess_PageDown(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *arg1 = (CMenuPetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPetProcess,0))){
    SWIG_fail_ptr("CMenuPetProcess_PageDown",1,SWIGTYPE_p_CMenuPetProcess);
  }
  
  (arg1)->PageDown();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPetProcess_Scroll(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *arg1 = (CMenuPetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPetProcess,0))){
    SWIG_fail_ptr("CMenuPetProcess_Scroll",1,SWIGTYPE_p_CMenuPetProcess);
  }
  
  (arg1)->Scroll();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPetProcess_SetSelIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *arg1 = (CMenuPetProcess *) 0 ;
  Int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPetProcess,0))){
    SWIG_fail_ptr("CMenuPetProcess_SetSelIndex",1,SWIGTYPE_p_CMenuPetProcess);
  }
  
  arg2 = (Int)lua_tonumber(L, 2);
  (arg1)->SetSelIndex(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPetProcess_UsePet(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *arg1 = (CMenuPetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPetProcess,0))){
    SWIG_fail_ptr("CMenuPetProcess_UsePet",1,SWIGTYPE_p_CMenuPetProcess);
  }
  
  (arg1)->UsePet();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPetProcess_PetRest(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *arg1 = (CMenuPetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPetProcess,0))){
    SWIG_fail_ptr("CMenuPetProcess_PetRest",1,SWIGTYPE_p_CMenuPetProcess);
  }
  
  (arg1)->PetRest();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPetProcess_DumpPet(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *arg1 = (CMenuPetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPetProcess,0))){
    SWIG_fail_ptr("CMenuPetProcess_DumpPet",1,SWIGTYPE_p_CMenuPetProcess);
  }
  
  (arg1)->DumpPet();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPetProcess_ChangePetName(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *arg1 = (CMenuPetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPetProcess,0))){
    SWIG_fail_ptr("CMenuPetProcess_ChangePetName",1,SWIGTYPE_p_CMenuPetProcess);
  }
  
  (arg1)->ChangePetName();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPetProcess_ShowRemovePetName(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *arg1 = (CMenuPetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPetProcess,0))){
    SWIG_fail_ptr("CMenuPetProcess_ShowRemovePetName",1,SWIGTYPE_p_CMenuPetProcess);
  }
  
  (arg1)->ShowRemovePetName();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPetProcess_OpenPetSkillDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *arg1 = (CMenuPetProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPetProcess,0))){
    SWIG_fail_ptr("CMenuPetProcess_OpenPetSkillDetail",1,SWIGTYPE_p_CMenuPetProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->OpenPetSkillDetail(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPetProcess_ClosePetSkillDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *arg1 = (CMenuPetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPetProcess,0))){
    SWIG_fail_ptr("CMenuPetProcess_ClosePetSkillDetail",1,SWIGTYPE_p_CMenuPetProcess);
  }
  
  (arg1)->ClosePetSkillDetail();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPetProcess_ShowPublicPetDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *arg1 = (CMenuPetProcess *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPetProcess,0))){
    SWIG_fail_ptr("CMenuPetProcess_ShowPublicPetDetail",1,SWIGTYPE_p_CMenuPetProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  (arg1)->ShowPublicPetDetail(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPetProcess_GetPetSelectIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *arg1 = (CMenuPetProcess *) 0 ;
  Int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPetProcess,0))){
    SWIG_fail_ptr("CMenuPetProcess_GetPetSelectIndex",1,SWIGTYPE_p_CMenuPetProcess);
  }
  
  result = (Int)(arg1)->GetPetSelectIndex();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPetProcess_HasPet(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *arg1 = (CMenuPetProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPetProcess,0))){
    SWIG_fail_ptr("CMenuPetProcess_HasPet",1,SWIGTYPE_p_CMenuPetProcess);
  }
  
  result = (bool)(arg1)->HasPet();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPetProcess_PetCanUseItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *arg1 = (CMenuPetProcess *) 0 ;
  UInt16 arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPetProcess,0))){
    SWIG_fail_ptr("CMenuPetProcess_PetCanUseItem",1,SWIGTYPE_p_CMenuPetProcess);
  }
  
  arg2 = (UInt16)lua_tonumber(L, 2);
  result = (bool)(arg1)->PetCanUseItem(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPetProcess_SetUseFoodItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *arg1 = (CMenuPetProcess *) 0 ;
  UInt16 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPetProcess,0))){
    SWIG_fail_ptr("CMenuPetProcess_SetUseFoodItem",1,SWIGTYPE_p_CMenuPetProcess);
  }
  
  arg2 = (UInt16)lua_tonumber(L, 2);
  (arg1)->SetUseFoodItem(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPetProcess_CanEatFood(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *arg1 = (CMenuPetProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPetProcess,0))){
    SWIG_fail_ptr("CMenuPetProcess_CanEatFood",1,SWIGTYPE_p_CMenuPetProcess);
  }
  
  result = (bool)(arg1)->CanEatFood();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPetProcess_ReSetFoodUseItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *arg1 = (CMenuPetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPetProcess,0))){
    SWIG_fail_ptr("CMenuPetProcess_ReSetFoodUseItem",1,SWIGTYPE_p_CMenuPetProcess);
  }
  
  (arg1)->ReSetFoodUseItem();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPetProcess_PetUseFood(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *arg1 = (CMenuPetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPetProcess,0))){
    SWIG_fail_ptr("CMenuPetProcess_PetUseFood",1,SWIGTYPE_p_CMenuPetProcess);
  }
  
  (arg1)->PetUseFood();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPetProcess_InitUsePetFoodPanel(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *arg1 = (CMenuPetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPetProcess,0))){
    SWIG_fail_ptr("CMenuPetProcess_InitUsePetFoodPanel",1,SWIGTYPE_p_CMenuPetProcess);
  }
  
  (arg1)->InitUsePetFoodPanel();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuPetProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *result = 0 ;
  
  result = (CMenuPetProcess *)new CMenuPetProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuPetProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuPetProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *arg1 = (CMenuPetProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPetProcess,0))){
    SWIG_fail_ptr("delete_CMenuPetProcess",1,SWIGTYPE_p_CMenuPetProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuPetProcess(void *obj) {
CMenuPetProcess *arg1 = (CMenuPetProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuPetProcess_methods[] = {
    {"ResetMenu", _wrap_CMenuPetProcess_ResetMenu}, 
    {"RefreshMenu", _wrap_CMenuPetProcess_RefreshMenu}, 
    {"PageUp", _wrap_CMenuPetProcess_PageUp}, 
    {"PageDown", _wrap_CMenuPetProcess_PageDown}, 
    {"Scroll", _wrap_CMenuPetProcess_Scroll}, 
    {"SetSelIndex", _wrap_CMenuPetProcess_SetSelIndex}, 
    {"UsePet", _wrap_CMenuPetProcess_UsePet}, 
    {"PetRest", _wrap_CMenuPetProcess_PetRest}, 
    {"DumpPet", _wrap_CMenuPetProcess_DumpPet}, 
    {"ChangePetName", _wrap_CMenuPetProcess_ChangePetName}, 
    {"ShowRemovePetName", _wrap_CMenuPetProcess_ShowRemovePetName}, 
    {"OpenPetSkillDetail", _wrap_CMenuPetProcess_OpenPetSkillDetail}, 
    {"ClosePetSkillDetail", _wrap_CMenuPetProcess_ClosePetSkillDetail}, 
    {"ShowPublicPetDetail", _wrap_CMenuPetProcess_ShowPublicPetDetail}, 
    {"GetPetSelectIndex", _wrap_CMenuPetProcess_GetPetSelectIndex}, 
    {"HasPet", _wrap_CMenuPetProcess_HasPet}, 
    {"PetCanUseItem", _wrap_CMenuPetProcess_PetCanUseItem}, 
    {"SetUseFoodItem", _wrap_CMenuPetProcess_SetUseFoodItem}, 
    {"CanEatFood", _wrap_CMenuPetProcess_CanEatFood}, 
    {"ReSetFoodUseItem", _wrap_CMenuPetProcess_ReSetFoodUseItem}, 
    {"PetUseFood", _wrap_CMenuPetProcess_PetUseFood}, 
    {"InitUsePetFoodPanel", _wrap_CMenuPetProcess_InitUsePetFoodPanel}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuPetProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuPetProcess_bases[] = {0};
swig_lua_class _wrap_class_CMenuPetProcess = { "CMenuPetProcess", &SWIGTYPE_p_CMenuPetProcess,_wrap_new_CMenuPetProcess, swig_delete_CMenuPetProcess, swig_CMenuPetProcess_methods, swig_CMenuPetProcess_attributes, swig_CMenuPetProcess_bases };

static int _wrap_CMenuHelpProcess_RefreshMenu(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHelpProcess *arg1 = (CMenuHelpProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHelpProcess,0))){
    SWIG_fail_ptr("CMenuHelpProcess_RefreshMenu",1,SWIGTYPE_p_CMenuHelpProcess);
  }
  
  (arg1)->RefreshMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHelpProcess_PageUp(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHelpProcess *arg1 = (CMenuHelpProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHelpProcess,0))){
    SWIG_fail_ptr("CMenuHelpProcess_PageUp",1,SWIGTYPE_p_CMenuHelpProcess);
  }
  
  (arg1)->PageUp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHelpProcess_PageDown(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHelpProcess *arg1 = (CMenuHelpProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHelpProcess,0))){
    SWIG_fail_ptr("CMenuHelpProcess_PageDown",1,SWIGTYPE_p_CMenuHelpProcess);
  }
  
  (arg1)->PageDown();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHelpProcess_IsOpenChange(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHelpProcess *arg1 = (CMenuHelpProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHelpProcess,0))){
    SWIG_fail_ptr("CMenuHelpProcess_IsOpenChange",1,SWIGTYPE_p_CMenuHelpProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->IsOpenChange(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHelpProcess_ShowTextContent__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHelpProcess *arg1 = (CMenuHelpProcess *) 0 ;
  int arg2 ;
  size_t arg3 ;
  UInt arg4 ;
  size_t *argp3 ;
  UInt *argp4 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isuserdata(L,3)) SWIG_fail_arg(3);
  if(!lua_isuserdata(L,4)) SWIG_fail_arg(4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHelpProcess,0))){
    SWIG_fail_ptr("CMenuHelpProcess_ShowTextContent",1,SWIGTYPE_p_CMenuHelpProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&argp3,SWIGTYPE_p_size_t,0))){
    SWIG_fail_ptr("CMenuHelpProcess_ShowTextContent",3,SWIGTYPE_size_t);
  }
  arg3 = *argp3;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&argp4,SWIGTYPE_p_UInt,0))){
    SWIG_fail_ptr("CMenuHelpProcess_ShowTextContent",4,SWIGTYPE_UInt);
  }
  arg4 = *argp4;
  
  (arg1)->ShowTextContent(arg2,arg3,arg4);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHelpProcess_ShowTextContent__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHelpProcess *arg1 = (CMenuHelpProcess *) 0 ;
  int arg2 ;
  size_t arg3 ;
  size_t *argp3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isuserdata(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHelpProcess,0))){
    SWIG_fail_ptr("CMenuHelpProcess_ShowTextContent",1,SWIGTYPE_p_CMenuHelpProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&argp3,SWIGTYPE_p_size_t,0))){
    SWIG_fail_ptr("CMenuHelpProcess_ShowTextContent",3,SWIGTYPE_size_t);
  }
  arg3 = *argp3;
  
  (arg1)->ShowTextContent(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHelpProcess_ShowTextContent__SWIG_2(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHelpProcess *arg1 = (CMenuHelpProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHelpProcess,0))){
    SWIG_fail_ptr("CMenuHelpProcess_ShowTextContent",1,SWIGTYPE_p_CMenuHelpProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->ShowTextContent(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHelpProcess_ShowTextContent(lua_State* L) {
  int argc;
  int argv[5]={
    1,2,3,4,5
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuHelpProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_CMenuHelpProcess_ShowTextContent__SWIG_2(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuHelpProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_size_t, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_CMenuHelpProcess_ShowTextContent__SWIG_1(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuHelpProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_size_t, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            void *ptr;
            if (lua_isuserdata(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_UInt, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_CMenuHelpProcess_ShowTextContent__SWIG_0(L);
          }
        }
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'CMenuHelpProcess_ShowTextContent'");
  lua_error(L);return 0;
}


static int _wrap_CMenuHelpProcess_SearchContent(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHelpProcess *arg1 = (CMenuHelpProcess *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHelpProcess,0))){
    SWIG_fail_ptr("CMenuHelpProcess_SearchContent",1,SWIGTYPE_p_CMenuHelpProcess);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("CMenuHelpProcess_SearchContent",2,SWIGTYPE_p_wchar_t);
  }
  
  (arg1)->SearchContent((wchar_t const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHelpProcess_ResetSearch(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHelpProcess *arg1 = (CMenuHelpProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHelpProcess,0))){
    SWIG_fail_ptr("CMenuHelpProcess_ResetSearch",1,SWIGTYPE_p_CMenuHelpProcess);
  }
  
  (arg1)->ResetSearch();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHelpProcess_SetIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHelpProcess *arg1 = (CMenuHelpProcess *) 0 ;
  Int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHelpProcess,0))){
    SWIG_fail_ptr("CMenuHelpProcess_SetIndex",1,SWIGTYPE_p_CMenuHelpProcess);
  }
  
  arg2 = (Int)lua_tonumber(L, 2);
  (arg1)->SetIndex(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHelpProcess_CalOpenCount(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHelpProcess *arg1 = (CMenuHelpProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHelpProcess,0))){
    SWIG_fail_ptr("CMenuHelpProcess_CalOpenCount",1,SWIGTYPE_p_CMenuHelpProcess);
  }
  
  (arg1)->CalOpenCount();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHelpProcess_HandleEvent(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHelpProcess *arg1 = (CMenuHelpProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHelpProcess,0))){
    SWIG_fail_ptr("CMenuHelpProcess_HandleEvent",1,SWIGTYPE_p_CMenuHelpProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->HandleEvent(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHelpProcess_HandleGuideEvent(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHelpProcess *arg1 = (CMenuHelpProcess *) 0 ;
  UInt16 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHelpProcess,0))){
    SWIG_fail_ptr("CMenuHelpProcess_HandleGuideEvent",1,SWIGTYPE_p_CMenuHelpProcess);
  }
  
  arg2 = (UInt16)lua_tonumber(L, 2);
  (arg1)->HandleGuideEvent(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHelpProcess_CloseNewGuide(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHelpProcess *arg1 = (CMenuHelpProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHelpProcess,0))){
    SWIG_fail_ptr("CMenuHelpProcess_CloseNewGuide",1,SWIGTYPE_p_CMenuHelpProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->CloseNewGuide(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuHelpProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHelpProcess *result = 0 ;
  
  result = (CMenuHelpProcess *)new CMenuHelpProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuHelpProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuHelpProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHelpProcess *arg1 = (CMenuHelpProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHelpProcess,0))){
    SWIG_fail_ptr("delete_CMenuHelpProcess",1,SWIGTYPE_p_CMenuHelpProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuHelpProcess(void *obj) {
CMenuHelpProcess *arg1 = (CMenuHelpProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuHelpProcess_methods[] = {
    {"RefreshMenu", _wrap_CMenuHelpProcess_RefreshMenu}, 
    {"PageUp", _wrap_CMenuHelpProcess_PageUp}, 
    {"PageDown", _wrap_CMenuHelpProcess_PageDown}, 
    {"IsOpenChange", _wrap_CMenuHelpProcess_IsOpenChange}, 
    {"ShowTextContent", _wrap_CMenuHelpProcess_ShowTextContent}, 
    {"SearchContent", _wrap_CMenuHelpProcess_SearchContent}, 
    {"ResetSearch", _wrap_CMenuHelpProcess_ResetSearch}, 
    {"SetIndex", _wrap_CMenuHelpProcess_SetIndex}, 
    {"CalOpenCount", _wrap_CMenuHelpProcess_CalOpenCount}, 
    {"HandleEvent", _wrap_CMenuHelpProcess_HandleEvent}, 
    {"HandleGuideEvent", _wrap_CMenuHelpProcess_HandleGuideEvent}, 
    {"CloseNewGuide", _wrap_CMenuHelpProcess_CloseNewGuide}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuHelpProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuHelpProcess_bases[] = {0};
swig_lua_class _wrap_class_CMenuHelpProcess = { "CMenuHelpProcess", &SWIGTYPE_p_CMenuHelpProcess,_wrap_new_CMenuHelpProcess, swig_delete_CMenuHelpProcess, swig_CMenuHelpProcess_methods, swig_CMenuHelpProcess_attributes, swig_CMenuHelpProcess_bases };

static int _wrap_CMenuRankProcess_RefreshMenu(lua_State* L) {
  int SWIG_arg = -1;
  CMenuRankProcess *arg1 = (CMenuRankProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuRankProcess,0))){
    SWIG_fail_ptr("CMenuRankProcess_RefreshMenu",1,SWIGTYPE_p_CMenuRankProcess);
  }
  
  (arg1)->RefreshMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuRankProcess_PageUp(lua_State* L) {
  int SWIG_arg = -1;
  CMenuRankProcess *arg1 = (CMenuRankProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuRankProcess,0))){
    SWIG_fail_ptr("CMenuRankProcess_PageUp",1,SWIGTYPE_p_CMenuRankProcess);
  }
  
  (arg1)->PageUp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuRankProcess_PageDown(lua_State* L) {
  int SWIG_arg = -1;
  CMenuRankProcess *arg1 = (CMenuRankProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuRankProcess,0))){
    SWIG_fail_ptr("CMenuRankProcess_PageDown",1,SWIGTYPE_p_CMenuRankProcess);
  }
  
  (arg1)->PageDown();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuRankProcess_SetIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuRankProcess *arg1 = (CMenuRankProcess *) 0 ;
  Int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuRankProcess,0))){
    SWIG_fail_ptr("CMenuRankProcess_SetIndex",1,SWIGTYPE_p_CMenuRankProcess);
  }
  
  arg2 = (Int)lua_tonumber(L, 2);
  (arg1)->SetIndex(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuRankProcess_RankScroll(lua_State* L) {
  int SWIG_arg = -1;
  CMenuRankProcess *arg1 = (CMenuRankProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuRankProcess,0))){
    SWIG_fail_ptr("CMenuRankProcess_RankScroll",1,SWIGTYPE_p_CMenuRankProcess);
  }
  
  (arg1)->RankScroll();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuRankProcess_FindRank(lua_State* L) {
  int SWIG_arg = -1;
  CMenuRankProcess *arg1 = (CMenuRankProcess *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuRankProcess,0))){
    SWIG_fail_ptr("CMenuRankProcess_FindRank",1,SWIGTYPE_p_CMenuRankProcess);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("CMenuRankProcess_FindRank",2,SWIGTYPE_p_wchar_t);
  }
  
  (arg1)->FindRank((wchar_t const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuRankProcess_SetSelIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuRankProcess *arg1 = (CMenuRankProcess *) 0 ;
  Int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuRankProcess,0))){
    SWIG_fail_ptr("CMenuRankProcess_SetSelIndex",1,SWIGTYPE_p_CMenuRankProcess);
  }
  
  arg2 = (Int)lua_tonumber(L, 2);
  (arg1)->SetSelIndex(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuRankProcess_SetRankSubType(lua_State* L) {
  int SWIG_arg = -1;
  CMenuRankProcess *arg1 = (CMenuRankProcess *) 0 ;
  Int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuRankProcess,0))){
    SWIG_fail_ptr("CMenuRankProcess_SetRankSubType",1,SWIGTYPE_p_CMenuRankProcess);
  }
  
  arg2 = (Int)lua_tonumber(L, 2);
  (arg1)->SetRankSubType(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuRankProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuRankProcess *result = 0 ;
  
  result = (CMenuRankProcess *)new CMenuRankProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuRankProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuRankProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuRankProcess *arg1 = (CMenuRankProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuRankProcess,0))){
    SWIG_fail_ptr("delete_CMenuRankProcess",1,SWIGTYPE_p_CMenuRankProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuRankProcess(void *obj) {
CMenuRankProcess *arg1 = (CMenuRankProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuRankProcess_methods[] = {
    {"RefreshMenu", _wrap_CMenuRankProcess_RefreshMenu}, 
    {"PageUp", _wrap_CMenuRankProcess_PageUp}, 
    {"PageDown", _wrap_CMenuRankProcess_PageDown}, 
    {"SetIndex", _wrap_CMenuRankProcess_SetIndex}, 
    {"RankScroll", _wrap_CMenuRankProcess_RankScroll}, 
    {"FindRank", _wrap_CMenuRankProcess_FindRank}, 
    {"SetSelIndex", _wrap_CMenuRankProcess_SetSelIndex}, 
    {"SetRankSubType", _wrap_CMenuRankProcess_SetRankSubType}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuRankProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuRankProcess_bases[] = {0};
swig_lua_class _wrap_class_CMenuRankProcess = { "CMenuRankProcess", &SWIGTYPE_p_CMenuRankProcess,_wrap_new_CMenuRankProcess, swig_delete_CMenuRankProcess, swig_CMenuRankProcess_methods, swig_CMenuRankProcess_attributes, swig_CMenuRankProcess_bases };

static int _wrap_CMenuSystemSetting_SetWindowMode(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_SetWindowMode",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetWindowMode(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_SetNightMode(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_SetNightMode",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetNightMode(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_SetMapAnimeMode(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_SetMapAnimeMode",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetMapAnimeMode(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_SetWeatherMode(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_SetWeatherMode",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetWeatherMode(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_SetBlockGivenMode(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_SetBlockGivenMode",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetBlockGivenMode(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_SetBlockPartyMode(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_SetBlockPartyMode",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetBlockPartyMode(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_SetBlockMessageMode(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_SetBlockMessageMode",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetBlockMessageMode(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_SetBlockPKMode(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_SetBlockPKMode",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetBlockPKMode(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_SetBlockMakeFriendMode(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_SetBlockMakeFriendMode",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetBlockMakeFriendMode(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_SetBlockTradingMode(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_SetBlockTradingMode",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetBlockTradingMode(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_SetMusicMode(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_SetMusicMode",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetMusicMode(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_SetMusicVolume(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_SetMusicVolume",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->SetMusicVolume(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_SetSoundEffectMode(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_SetSoundEffectMode",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetSoundEffectMode(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_SetSoundEffectVolume(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_SetSoundEffectVolume",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->SetSoundEffectVolume(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_SetSaveChatHistory(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_SetSaveChatHistory",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetSaveChatHistory(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_SetShowEquipMode(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_SetShowEquipMode",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetShowEquipMode(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_IsWindowModeEnable(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_IsWindowModeEnable",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  result = (bool)(arg1)->IsWindowModeEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_IsNightModeEnable(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_IsNightModeEnable",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  result = (bool)(arg1)->IsNightModeEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_IsMapAnimeModeEnable(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_IsMapAnimeModeEnable",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  result = (bool)(arg1)->IsMapAnimeModeEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_IsWeatherModeEnable(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_IsWeatherModeEnable",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  result = (bool)(arg1)->IsWeatherModeEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_IsBlockGivenModeEnable(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_IsBlockGivenModeEnable",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  result = (bool)(arg1)->IsBlockGivenModeEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_IsBlockPartyModeEnable(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_IsBlockPartyModeEnable",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  result = (bool)(arg1)->IsBlockPartyModeEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_IsBlockMessageModeEnable(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_IsBlockMessageModeEnable",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  result = (bool)(arg1)->IsBlockMessageModeEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_IsBlockPKModeEnable(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_IsBlockPKModeEnable",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  result = (bool)(arg1)->IsBlockPKModeEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_IsBlockMakeFriendModeEnable(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_IsBlockMakeFriendModeEnable",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  result = (bool)(arg1)->IsBlockMakeFriendModeEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_IsBlockTradingModeEnable(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_IsBlockTradingModeEnable",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  result = (bool)(arg1)->IsBlockTradingModeEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_IsMusicModeEnable(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_IsMusicModeEnable",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  result = (bool)(arg1)->IsMusicModeEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_IsSaveChatHistory(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_IsSaveChatHistory",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  result = (bool)(arg1)->IsSaveChatHistory();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_GetTempMusicVolume(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  UInt8 result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_GetTempMusicVolume",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  result = (UInt8)(arg1)->GetTempMusicVolume();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_GetMusicVolume(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  UInt8 result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_GetMusicVolume",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  result = (UInt8)(arg1)->GetMusicVolume();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_IsSoundEffectModeEnable(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_IsSoundEffectModeEnable",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  result = (bool)(arg1)->IsSoundEffectModeEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_GetTempSoundEffectVolume(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  UInt8 result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_GetTempSoundEffectVolume",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  result = (UInt8)(arg1)->GetTempSoundEffectVolume();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_GetSoundEffectVolume(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  UInt8 result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_GetSoundEffectVolume",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  result = (UInt8)(arg1)->GetSoundEffectVolume();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_GetSoundEffectVolForFmod(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  Int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_GetSoundEffectVolForFmod",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  result = (Int)(arg1)->GetSoundEffectVolForFmod();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_GetMusicVolForFmod(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  Int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_GetMusicVolForFmod",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  result = (Int)(arg1)->GetMusicVolForFmod();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_IsShowEquipModeEnable(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_IsShowEquipModeEnable",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  result = (bool)(arg1)->IsShowEquipModeEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_InitSystemSetting(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_InitSystemSetting",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  (arg1)->InitSystemSetting();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_AddMusicVolume(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_AddMusicVolume",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  (arg1)->AddMusicVolume();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_SubMusicVolume(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_SubMusicVolume",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  (arg1)->SubMusicVolume();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_AddSoundEffectVolume(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_AddSoundEffectVolume",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  (arg1)->AddSoundEffectVolume();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_SubSoundEffectVolume(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_SubSoundEffectVolume",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  (arg1)->SubSoundEffectVolume();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_ResetTempVolume(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_ResetTempVolume",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  (arg1)->ResetTempVolume();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_RestoreTempVolumeToDefault(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_RestoreTempVolumeToDefault",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  (arg1)->RestoreTempVolumeToDefault();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_WriteSystemSetting(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_WriteSystemSetting",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  (arg1)->WriteSystemSetting();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_SetSubChatPosition(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_SetSubChatPosition",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->SetSubChatPosition(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_SetSubChatEnable(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_SetSubChatEnable",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetSubChatEnable(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSystemSetting_SaveBlockSetting(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("CMenuSystemSetting_SaveBlockSetting",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  (arg1)->SaveBlockSetting();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuSystemSetting(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *result = 0 ;
  
  result = (CMenuSystemSetting *)new CMenuSystemSetting();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuSystemSetting,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuSystemSetting(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *arg1 = (CMenuSystemSetting *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSystemSetting,0))){
    SWIG_fail_ptr("delete_CMenuSystemSetting",1,SWIGTYPE_p_CMenuSystemSetting);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuSystemSetting(void *obj) {
CMenuSystemSetting *arg1 = (CMenuSystemSetting *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuSystemSetting_methods[] = {
    {"SetWindowMode", _wrap_CMenuSystemSetting_SetWindowMode}, 
    {"SetNightMode", _wrap_CMenuSystemSetting_SetNightMode}, 
    {"SetMapAnimeMode", _wrap_CMenuSystemSetting_SetMapAnimeMode}, 
    {"SetWeatherMode", _wrap_CMenuSystemSetting_SetWeatherMode}, 
    {"SetBlockGivenMode", _wrap_CMenuSystemSetting_SetBlockGivenMode}, 
    {"SetBlockPartyMode", _wrap_CMenuSystemSetting_SetBlockPartyMode}, 
    {"SetBlockMessageMode", _wrap_CMenuSystemSetting_SetBlockMessageMode}, 
    {"SetBlockPKMode", _wrap_CMenuSystemSetting_SetBlockPKMode}, 
    {"SetBlockMakeFriendMode", _wrap_CMenuSystemSetting_SetBlockMakeFriendMode}, 
    {"SetBlockTradingMode", _wrap_CMenuSystemSetting_SetBlockTradingMode}, 
    {"SetMusicMode", _wrap_CMenuSystemSetting_SetMusicMode}, 
    {"SetMusicVolume", _wrap_CMenuSystemSetting_SetMusicVolume}, 
    {"SetSoundEffectMode", _wrap_CMenuSystemSetting_SetSoundEffectMode}, 
    {"SetSoundEffectVolume", _wrap_CMenuSystemSetting_SetSoundEffectVolume}, 
    {"SetSaveChatHistory", _wrap_CMenuSystemSetting_SetSaveChatHistory}, 
    {"SetShowEquipMode", _wrap_CMenuSystemSetting_SetShowEquipMode}, 
    {"IsWindowModeEnable", _wrap_CMenuSystemSetting_IsWindowModeEnable}, 
    {"IsNightModeEnable", _wrap_CMenuSystemSetting_IsNightModeEnable}, 
    {"IsMapAnimeModeEnable", _wrap_CMenuSystemSetting_IsMapAnimeModeEnable}, 
    {"IsWeatherModeEnable", _wrap_CMenuSystemSetting_IsWeatherModeEnable}, 
    {"IsBlockGivenModeEnable", _wrap_CMenuSystemSetting_IsBlockGivenModeEnable}, 
    {"IsBlockPartyModeEnable", _wrap_CMenuSystemSetting_IsBlockPartyModeEnable}, 
    {"IsBlockMessageModeEnable", _wrap_CMenuSystemSetting_IsBlockMessageModeEnable}, 
    {"IsBlockPKModeEnable", _wrap_CMenuSystemSetting_IsBlockPKModeEnable}, 
    {"IsBlockMakeFriendModeEnable", _wrap_CMenuSystemSetting_IsBlockMakeFriendModeEnable}, 
    {"IsBlockTradingModeEnable", _wrap_CMenuSystemSetting_IsBlockTradingModeEnable}, 
    {"IsMusicModeEnable", _wrap_CMenuSystemSetting_IsMusicModeEnable}, 
    {"IsSaveChatHistory", _wrap_CMenuSystemSetting_IsSaveChatHistory}, 
    {"GetTempMusicVolume", _wrap_CMenuSystemSetting_GetTempMusicVolume}, 
    {"GetMusicVolume", _wrap_CMenuSystemSetting_GetMusicVolume}, 
    {"IsSoundEffectModeEnable", _wrap_CMenuSystemSetting_IsSoundEffectModeEnable}, 
    {"GetTempSoundEffectVolume", _wrap_CMenuSystemSetting_GetTempSoundEffectVolume}, 
    {"GetSoundEffectVolume", _wrap_CMenuSystemSetting_GetSoundEffectVolume}, 
    {"GetSoundEffectVolForFmod", _wrap_CMenuSystemSetting_GetSoundEffectVolForFmod}, 
    {"GetMusicVolForFmod", _wrap_CMenuSystemSetting_GetMusicVolForFmod}, 
    {"IsShowEquipModeEnable", _wrap_CMenuSystemSetting_IsShowEquipModeEnable}, 
    {"InitSystemSetting", _wrap_CMenuSystemSetting_InitSystemSetting}, 
    {"AddMusicVolume", _wrap_CMenuSystemSetting_AddMusicVolume}, 
    {"SubMusicVolume", _wrap_CMenuSystemSetting_SubMusicVolume}, 
    {"AddSoundEffectVolume", _wrap_CMenuSystemSetting_AddSoundEffectVolume}, 
    {"SubSoundEffectVolume", _wrap_CMenuSystemSetting_SubSoundEffectVolume}, 
    {"ResetTempVolume", _wrap_CMenuSystemSetting_ResetTempVolume}, 
    {"RestoreTempVolumeToDefault", _wrap_CMenuSystemSetting_RestoreTempVolumeToDefault}, 
    {"WriteSystemSetting", _wrap_CMenuSystemSetting_WriteSystemSetting}, 
    {"SetSubChatPosition", _wrap_CMenuSystemSetting_SetSubChatPosition}, 
    {"SetSubChatEnable", _wrap_CMenuSystemSetting_SetSubChatEnable}, 
    {"SaveBlockSetting", _wrap_CMenuSystemSetting_SaveBlockSetting}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuSystemSetting_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuSystemSetting_bases[] = {0};
swig_lua_class _wrap_class_CMenuSystemSetting = { "CMenuSystemSetting", &SWIGTYPE_p_CMenuSystemSetting,_wrap_new_CMenuSystemSetting, swig_delete_CMenuSystemSetting, swig_CMenuSystemSetting_methods, swig_CMenuSystemSetting_attributes, swig_CMenuSystemSetting_bases };

static int _wrap_CMenuTradingProcess_ConfirmReqTrading(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTradingProcess *arg1 = (CMenuTradingProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTradingProcess,0))){
    SWIG_fail_ptr("CMenuTradingProcess_ConfirmReqTrading",1,SWIGTYPE_p_CMenuTradingProcess);
  }
  
  (arg1)->ConfirmReqTrading();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTradingProcess_RejectReqTrading(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTradingProcess *arg1 = (CMenuTradingProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTradingProcess,0))){
    SWIG_fail_ptr("CMenuTradingProcess_RejectReqTrading",1,SWIGTYPE_p_CMenuTradingProcess);
  }
  
  (arg1)->RejectReqTrading();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTradingProcess_SetItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTradingProcess *arg1 = (CMenuTradingProcess *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTradingProcess,0))){
    SWIG_fail_ptr("CMenuTradingProcess_SetItem",1,SWIGTYPE_p_CMenuTradingProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  (arg1)->SetItem(arg2,arg3,arg4);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTradingProcess_RemoveItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTradingProcess *arg1 = (CMenuTradingProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTradingProcess,0))){
    SWIG_fail_ptr("CMenuTradingProcess_RemoveItem",1,SWIGTYPE_p_CMenuTradingProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->RemoveItem(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTradingProcess_SetPartner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTradingProcess *arg1 = (CMenuTradingProcess *) 0 ;
  int arg2 ;
  unsigned int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTradingProcess,0))){
    SWIG_fail_ptr("CMenuTradingProcess_SetPartner",1,SWIGTYPE_p_CMenuTradingProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  (arg1)->SetPartner(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTradingProcess_RemovePartner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTradingProcess *arg1 = (CMenuTradingProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTradingProcess,0))){
    SWIG_fail_ptr("CMenuTradingProcess_RemovePartner",1,SWIGTYPE_p_CMenuTradingProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->RemovePartner(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTradingProcess_SetLock(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTradingProcess *arg1 = (CMenuTradingProcess *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTradingProcess,0))){
    SWIG_fail_ptr("CMenuTradingProcess_SetLock",1,SWIGTYPE_p_CMenuTradingProcess);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetLock(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTradingProcess_CancelTrading(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTradingProcess *arg1 = (CMenuTradingProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTradingProcess,0))){
    SWIG_fail_ptr("CMenuTradingProcess_CancelTrading",1,SWIGTYPE_p_CMenuTradingProcess);
  }
  
  (arg1)->CancelTrading();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTradingProcess_SetMoney(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTradingProcess *arg1 = (CMenuTradingProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTradingProcess,0))){
    SWIG_fail_ptr("CMenuTradingProcess_SetMoney",1,SWIGTYPE_p_CMenuTradingProcess);
  }
  
  (arg1)->SetMoney();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTradingProcess_CheckMoney(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTradingProcess *arg1 = (CMenuTradingProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTradingProcess,0))){
    SWIG_fail_ptr("CMenuTradingProcess_CheckMoney",1,SWIGTYPE_p_CMenuTradingProcess);
  }
  
  (arg1)->CheckMoney();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTradingProcess_ConfirmTrading(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTradingProcess *arg1 = (CMenuTradingProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTradingProcess,0))){
    SWIG_fail_ptr("CMenuTradingProcess_ConfirmTrading",1,SWIGTYPE_p_CMenuTradingProcess);
  }
  
  (arg1)->ConfirmTrading();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTradingProcess_IsConfirm(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTradingProcess *arg1 = (CMenuTradingProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTradingProcess,0))){
    SWIG_fail_ptr("CMenuTradingProcess_IsConfirm",1,SWIGTYPE_p_CMenuTradingProcess);
  }
  
  result = (bool)(arg1)->IsConfirm();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTradingProcess_ShowItemDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTradingProcess *arg1 = (CMenuTradingProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTradingProcess,0))){
    SWIG_fail_ptr("CMenuTradingProcess_ShowItemDetail",1,SWIGTYPE_p_CMenuTradingProcess);
  }
  
  (arg1)->ShowItemDetail();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTradingProcess_ShowPartnerDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTradingProcess *arg1 = (CMenuTradingProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTradingProcess,0))){
    SWIG_fail_ptr("CMenuTradingProcess_ShowPartnerDetail",1,SWIGTYPE_p_CMenuTradingProcess);
  }
  
  (arg1)->ShowPartnerDetail();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTradingProcess_SetPet(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTradingProcess *arg1 = (CMenuTradingProcess *) 0 ;
  int arg2 ;
  unsigned int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTradingProcess,0))){
    SWIG_fail_ptr("CMenuTradingProcess_SetPet",1,SWIGTYPE_p_CMenuTradingProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  (arg1)->SetPet(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTradingProcess_RemovePet(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTradingProcess *arg1 = (CMenuTradingProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTradingProcess,0))){
    SWIG_fail_ptr("CMenuTradingProcess_RemovePet",1,SWIGTYPE_p_CMenuTradingProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->RemovePet(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTradingProcess_ShowPetDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTradingProcess *arg1 = (CMenuTradingProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTradingProcess,0))){
    SWIG_fail_ptr("CMenuTradingProcess_ShowPetDetail",1,SWIGTYPE_p_CMenuTradingProcess);
  }
  
  (arg1)->ShowPetDetail();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTradingProcess_ShowMoneyColour(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTradingProcess *arg1 = (CMenuTradingProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTradingProcess,0))){
    SWIG_fail_ptr("CMenuTradingProcess_ShowMoneyColour",1,SWIGTYPE_p_CMenuTradingProcess);
  }
  
  (arg1)->ShowMoneyColour();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuTradingProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTradingProcess *result = 0 ;
  
  result = (CMenuTradingProcess *)new CMenuTradingProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuTradingProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuTradingProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTradingProcess *arg1 = (CMenuTradingProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTradingProcess,0))){
    SWIG_fail_ptr("delete_CMenuTradingProcess",1,SWIGTYPE_p_CMenuTradingProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuTradingProcess(void *obj) {
CMenuTradingProcess *arg1 = (CMenuTradingProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuTradingProcess_methods[] = {
    {"ConfirmReqTrading", _wrap_CMenuTradingProcess_ConfirmReqTrading}, 
    {"RejectReqTrading", _wrap_CMenuTradingProcess_RejectReqTrading}, 
    {"SetItem", _wrap_CMenuTradingProcess_SetItem}, 
    {"RemoveItem", _wrap_CMenuTradingProcess_RemoveItem}, 
    {"SetPartner", _wrap_CMenuTradingProcess_SetPartner}, 
    {"RemovePartner", _wrap_CMenuTradingProcess_RemovePartner}, 
    {"SetLock", _wrap_CMenuTradingProcess_SetLock}, 
    {"CancelTrading", _wrap_CMenuTradingProcess_CancelTrading}, 
    {"SetMoney", _wrap_CMenuTradingProcess_SetMoney}, 
    {"CheckMoney", _wrap_CMenuTradingProcess_CheckMoney}, 
    {"ConfirmTrading", _wrap_CMenuTradingProcess_ConfirmTrading}, 
    {"IsConfirm", _wrap_CMenuTradingProcess_IsConfirm}, 
    {"ShowItemDetail", _wrap_CMenuTradingProcess_ShowItemDetail}, 
    {"ShowPartnerDetail", _wrap_CMenuTradingProcess_ShowPartnerDetail}, 
    {"SetPet", _wrap_CMenuTradingProcess_SetPet}, 
    {"RemovePet", _wrap_CMenuTradingProcess_RemovePet}, 
    {"ShowPetDetail", _wrap_CMenuTradingProcess_ShowPetDetail}, 
    {"ShowMoneyColour", _wrap_CMenuTradingProcess_ShowMoneyColour}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuTradingProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuTradingProcess_bases[] = {0};
swig_lua_class _wrap_class_CMenuTradingProcess = { "CMenuTradingProcess", &SWIGTYPE_p_CMenuTradingProcess,_wrap_new_CMenuTradingProcess, swig_delete_CMenuTradingProcess, swig_CMenuTradingProcess_methods, swig_CMenuTradingProcess_attributes, swig_CMenuTradingProcess_bases };

static int _wrap_CMenuAutoWalkProcess_StartAutoWalk(lua_State* L) {
  int SWIG_arg = -1;
  CMenuAutoWalkProcess *arg1 = (CMenuAutoWalkProcess *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuAutoWalkProcess,0))){
    SWIG_fail_ptr("CMenuAutoWalkProcess_StartAutoWalk",1,SWIGTYPE_p_CMenuAutoWalkProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->StartAutoWalk(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuAutoWalkProcess_StopAutoWalk(lua_State* L) {
  int SWIG_arg = -1;
  CMenuAutoWalkProcess *arg1 = (CMenuAutoWalkProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuAutoWalkProcess,0))){
    SWIG_fail_ptr("CMenuAutoWalkProcess_StopAutoWalk",1,SWIGTYPE_p_CMenuAutoWalkProcess);
  }
  
  (arg1)->StopAutoWalk();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuAutoWalkProcess_ChangeHitBoss(lua_State* L) {
  int SWIG_arg = -1;
  CMenuAutoWalkProcess *arg1 = (CMenuAutoWalkProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuAutoWalkProcess,0))){
    SWIG_fail_ptr("CMenuAutoWalkProcess_ChangeHitBoss",1,SWIGTYPE_p_CMenuAutoWalkProcess);
  }
  
  (arg1)->ChangeHitBoss();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuAutoWalkProcess_OnOpenAutoWalk(lua_State* L) {
  int SWIG_arg = -1;
  CMenuAutoWalkProcess *arg1 = (CMenuAutoWalkProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuAutoWalkProcess,0))){
    SWIG_fail_ptr("CMenuAutoWalkProcess_OnOpenAutoWalk",1,SWIGTYPE_p_CMenuAutoWalkProcess);
  }
  
  (arg1)->OnOpenAutoWalk();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuAutoWalkProcess_SetRunning(lua_State* L) {
  int SWIG_arg = -1;
  CMenuAutoWalkProcess *arg1 = (CMenuAutoWalkProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuAutoWalkProcess,0))){
    SWIG_fail_ptr("CMenuAutoWalkProcess_SetRunning",1,SWIGTYPE_p_CMenuAutoWalkProcess);
  }
  
  (arg1)->SetRunning();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuAutoWalkProcess_ShowTime(lua_State* L) {
  int SWIG_arg = -1;
  CMenuAutoWalkProcess *arg1 = (CMenuAutoWalkProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuAutoWalkProcess,0))){
    SWIG_fail_ptr("CMenuAutoWalkProcess_ShowTime",1,SWIGTYPE_p_CMenuAutoWalkProcess);
  }
  
  (arg1)->ShowTime();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuAutoWalkProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuAutoWalkProcess *result = 0 ;
  
  result = (CMenuAutoWalkProcess *)new CMenuAutoWalkProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuAutoWalkProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuAutoWalkProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuAutoWalkProcess *arg1 = (CMenuAutoWalkProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuAutoWalkProcess,0))){
    SWIG_fail_ptr("delete_CMenuAutoWalkProcess",1,SWIGTYPE_p_CMenuAutoWalkProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuAutoWalkProcess(void *obj) {
CMenuAutoWalkProcess *arg1 = (CMenuAutoWalkProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuAutoWalkProcess_methods[] = {
    {"StartAutoWalk", _wrap_CMenuAutoWalkProcess_StartAutoWalk}, 
    {"StopAutoWalk", _wrap_CMenuAutoWalkProcess_StopAutoWalk}, 
    {"ChangeHitBoss", _wrap_CMenuAutoWalkProcess_ChangeHitBoss}, 
    {"OnOpenAutoWalk", _wrap_CMenuAutoWalkProcess_OnOpenAutoWalk}, 
    {"SetRunning", _wrap_CMenuAutoWalkProcess_SetRunning}, 
    {"ShowTime", _wrap_CMenuAutoWalkProcess_ShowTime}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuAutoWalkProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuAutoWalkProcess_bases[] = {0};
swig_lua_class _wrap_class_CMenuAutoWalkProcess = { "CMenuAutoWalkProcess", &SWIGTYPE_p_CMenuAutoWalkProcess,_wrap_new_CMenuAutoWalkProcess, swig_delete_CMenuAutoWalkProcess, swig_CMenuAutoWalkProcess_methods, swig_CMenuAutoWalkProcess_attributes, swig_CMenuAutoWalkProcess_bases };

static int _wrap_CMenuMixProcess_SetSelectedIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_SetSelectedIndex",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SetSelectedIndex(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_ResetMixShopMake(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_ResetMixShopMake",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  (arg1)->ResetMixShopMake();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_MixShopMakeProductScroll(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_MixShopMakeProductScroll",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->MixShopMakeProductScroll(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_MixShopMakeSourceScroll(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_MixShopMakeSourceScroll",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->MixShopMakeSourceScroll(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_HaveSelectedItemMix(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_HaveSelectedItemMix",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  result = (bool)(arg1)->HaveSelectedItemMix();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_IsSuitableItemMix(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  int arg2 ;
  int arg3 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_IsSuitableItemMix",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  result = (bool)(arg1)->IsSuitableItemMix(arg2,arg3);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_SetSourceItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  int arg2 ;
  int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_SetSourceItem",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->SetSourceItem(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_SetIronShopItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_SetIronShopItem",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  (arg1)->SetIronShopItem(arg2,arg3,arg4);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_IsSuitableIronShopItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  int arg2 ;
  int arg3 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_IsSuitableIronShopItem",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  result = (bool)(arg1)->IsSuitableIronShopItem(arg2,arg3);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_IsIronShopMake(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_IsIronShopMake",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  result = (bool)(arg1)->IsIronShopMake();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_RemoveIronItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_RemoveIronItem",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->RemoveIronItem(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_ResetIronShop(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_ResetIronShop",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  (arg1)->ResetIronShop();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_IsIronShopRepair(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_IsIronShopRepair",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  result = (bool)(arg1)->IsIronShopRepair();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_IsStartMaking(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_IsStartMaking",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  result = (bool)(arg1)->IsStartMaking();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_CancelMake(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_CancelMake",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  (arg1)->CancelMake();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_RemoveMakeItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_RemoveMakeItem",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->RemoveMakeItem(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_StartServerTime(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_StartServerTime",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  (arg1)->StartServerTime();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_ResetMixShop(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_ResetMixShop",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  (arg1)->ResetMixShop();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_IsSuitableMixShopItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  int arg2 ;
  int arg3 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_IsSuitableMixShopItem",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  result = (bool)(arg1)->IsSuitableMixShopItem(arg2,arg3);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_SetMixShopItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_SetMixShopItem",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  (arg1)->SetMixShopItem(arg2,arg3,arg4);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_RemoveMixItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_RemoveMixItem",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->RemoveMixItem(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_SetRemainItemCount(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_SetRemainItemCount",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SetRemainItemCount(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_SetMakeAll(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_SetMakeAll",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->SetMakeAll(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_IsRepairShop(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_IsRepairShop",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  result = (bool)(arg1)->IsRepairShop();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_IsStoneMixShop(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_IsStoneMixShop",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  result = (bool)(arg1)->IsStoneMixShop();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_GetMaxStoneNumByItemSlot(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  int arg2 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_GetMaxStoneNumByItemSlot",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  result = (int)(arg1)->GetMaxStoneNumByItemSlot(arg2);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_HasResultStone(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  int arg2 ;
  bool arg3 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isboolean(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_HasResultStone",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (bool)lua_toboolean(L, 3);
  result = (bool)(arg1)->HasResultStone(arg2,arg3);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_IsUnSoulBoundShop(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_IsUnSoulBoundShop",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  result = (bool)(arg1)->IsUnSoulBoundShop();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_GetUnSoulBoundStoneNum(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_GetUnSoulBoundStoneNum",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  result = (int)(arg1)->GetUnSoulBoundStoneNum();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_IsSuitableGemMixShopItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  int arg2 ;
  int arg3 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_IsSuitableGemMixShopItem",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  result = (bool)(arg1)->IsSuitableGemMixShopItem(arg2,arg3);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_IsGemMixShop(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_IsGemMixShop",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  result = (bool)(arg1)->IsGemMixShop();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_SetGemMixShopItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_SetGemMixShopItem",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  (arg1)->SetGemMixShopItem(arg2,arg3,arg4);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_IsGemInlayShop(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_IsGemInlayShop",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  result = (bool)(arg1)->IsGemInlayShop();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_IsGemRemoveShop(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_IsGemRemoveShop",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  result = (bool)(arg1)->IsGemRemoveShop();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_IsGemMeltingShop(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_IsGemMeltingShop",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  result = (bool)(arg1)->IsGemMeltingShop();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_IsGemPolishingShop(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_IsGemPolishingShop",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  result = (bool)(arg1)->IsGemPolishingShop();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_IsColorStoneMixShop(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_IsColorStoneMixShop",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  result = (bool)(arg1)->IsColorStoneMixShop();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_SetGemRemoveIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_SetGemRemoveIndex",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SetGemRemoveIndex(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_UpdateMixItemDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_UpdateMixItemDetail",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->UpdateMixItemDetail(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuMixProcess_isShowItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  int arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("CMenuMixProcess_isShowItem",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  result = (bool)(arg1)->isShowItem(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuMixProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *result = 0 ;
  
  result = (CMenuMixProcess *)new CMenuMixProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuMixProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuMixProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *arg1 = (CMenuMixProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuMixProcess,0))){
    SWIG_fail_ptr("delete_CMenuMixProcess",1,SWIGTYPE_p_CMenuMixProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuMixProcess(void *obj) {
CMenuMixProcess *arg1 = (CMenuMixProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuMixProcess_methods[] = {
    {"SetSelectedIndex", _wrap_CMenuMixProcess_SetSelectedIndex}, 
    {"ResetMixShopMake", _wrap_CMenuMixProcess_ResetMixShopMake}, 
    {"MixShopMakeProductScroll", _wrap_CMenuMixProcess_MixShopMakeProductScroll}, 
    {"MixShopMakeSourceScroll", _wrap_CMenuMixProcess_MixShopMakeSourceScroll}, 
    {"HaveSelectedItemMix", _wrap_CMenuMixProcess_HaveSelectedItemMix}, 
    {"IsSuitableItemMix", _wrap_CMenuMixProcess_IsSuitableItemMix}, 
    {"SetSourceItem", _wrap_CMenuMixProcess_SetSourceItem}, 
    {"SetIronShopItem", _wrap_CMenuMixProcess_SetIronShopItem}, 
    {"IsSuitableIronShopItem", _wrap_CMenuMixProcess_IsSuitableIronShopItem}, 
    {"IsIronShopMake", _wrap_CMenuMixProcess_IsIronShopMake}, 
    {"RemoveIronItem", _wrap_CMenuMixProcess_RemoveIronItem}, 
    {"ResetIronShop", _wrap_CMenuMixProcess_ResetIronShop}, 
    {"IsIronShopRepair", _wrap_CMenuMixProcess_IsIronShopRepair}, 
    {"IsStartMaking", _wrap_CMenuMixProcess_IsStartMaking}, 
    {"CancelMake", _wrap_CMenuMixProcess_CancelMake}, 
    {"RemoveMakeItem", _wrap_CMenuMixProcess_RemoveMakeItem}, 
    {"StartServerTime", _wrap_CMenuMixProcess_StartServerTime}, 
    {"ResetMixShop", _wrap_CMenuMixProcess_ResetMixShop}, 
    {"IsSuitableMixShopItem", _wrap_CMenuMixProcess_IsSuitableMixShopItem}, 
    {"SetMixShopItem", _wrap_CMenuMixProcess_SetMixShopItem}, 
    {"RemoveMixItem", _wrap_CMenuMixProcess_RemoveMixItem}, 
    {"SetRemainItemCount", _wrap_CMenuMixProcess_SetRemainItemCount}, 
    {"SetMakeAll", _wrap_CMenuMixProcess_SetMakeAll}, 
    {"IsRepairShop", _wrap_CMenuMixProcess_IsRepairShop}, 
    {"IsStoneMixShop", _wrap_CMenuMixProcess_IsStoneMixShop}, 
    {"GetMaxStoneNumByItemSlot", _wrap_CMenuMixProcess_GetMaxStoneNumByItemSlot}, 
    {"HasResultStone", _wrap_CMenuMixProcess_HasResultStone}, 
    {"IsUnSoulBoundShop", _wrap_CMenuMixProcess_IsUnSoulBoundShop}, 
    {"GetUnSoulBoundStoneNum", _wrap_CMenuMixProcess_GetUnSoulBoundStoneNum}, 
    {"IsSuitableGemMixShopItem", _wrap_CMenuMixProcess_IsSuitableGemMixShopItem}, 
    {"IsGemMixShop", _wrap_CMenuMixProcess_IsGemMixShop}, 
    {"SetGemMixShopItem", _wrap_CMenuMixProcess_SetGemMixShopItem}, 
    {"IsGemInlayShop", _wrap_CMenuMixProcess_IsGemInlayShop}, 
    {"IsGemRemoveShop", _wrap_CMenuMixProcess_IsGemRemoveShop}, 
    {"IsGemMeltingShop", _wrap_CMenuMixProcess_IsGemMeltingShop}, 
    {"IsGemPolishingShop", _wrap_CMenuMixProcess_IsGemPolishingShop}, 
    {"IsColorStoneMixShop", _wrap_CMenuMixProcess_IsColorStoneMixShop}, 
    {"SetGemRemoveIndex", _wrap_CMenuMixProcess_SetGemRemoveIndex}, 
    {"UpdateMixItemDetail", _wrap_CMenuMixProcess_UpdateMixItemDetail}, 
    {"isShowItem", _wrap_CMenuMixProcess_isShowItem}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuMixProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuMixProcess_bases[] = {0};
swig_lua_class _wrap_class_CMenuMixProcess = { "CMenuMixProcess", &SWIGTYPE_p_CMenuMixProcess,_wrap_new_CMenuMixProcess, swig_delete_CMenuMixProcess, swig_CMenuMixProcess_methods, swig_CMenuMixProcess_attributes, swig_CMenuMixProcess_bases };

static int _wrap_CMenuTitleProcess_RefreshMenu(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTitleProcess *arg1 = (CMenuTitleProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTitleProcess,0))){
    SWIG_fail_ptr("CMenuTitleProcess_RefreshMenu",1,SWIGTYPE_p_CMenuTitleProcess);
  }
  
  (arg1)->RefreshMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTitleProcess_PageUp(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTitleProcess *arg1 = (CMenuTitleProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTitleProcess,0))){
    SWIG_fail_ptr("CMenuTitleProcess_PageUp",1,SWIGTYPE_p_CMenuTitleProcess);
  }
  
  (arg1)->PageUp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTitleProcess_PageDown(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTitleProcess *arg1 = (CMenuTitleProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTitleProcess,0))){
    SWIG_fail_ptr("CMenuTitleProcess_PageDown",1,SWIGTYPE_p_CMenuTitleProcess);
  }
  
  (arg1)->PageDown();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTitleProcess_Sroll(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTitleProcess *arg1 = (CMenuTitleProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTitleProcess,0))){
    SWIG_fail_ptr("CMenuTitleProcess_Sroll",1,SWIGTYPE_p_CMenuTitleProcess);
  }
  
  (arg1)->Sroll();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTitleProcess_SetSelectIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTitleProcess *arg1 = (CMenuTitleProcess *) 0 ;
  Int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTitleProcess,0))){
    SWIG_fail_ptr("CMenuTitleProcess_SetSelectIndex",1,SWIGTYPE_p_CMenuTitleProcess);
  }
  
  arg2 = (Int)lua_tonumber(L, 2);
  (arg1)->SetSelectIndex(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTitleProcess_ConfirmChange(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTitleProcess *arg1 = (CMenuTitleProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTitleProcess,0))){
    SWIG_fail_ptr("CMenuTitleProcess_ConfirmChange",1,SWIGTYPE_p_CMenuTitleProcess);
  }
  
  (arg1)->ConfirmChange();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuTitleProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTitleProcess *result = 0 ;
  
  result = (CMenuTitleProcess *)new CMenuTitleProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuTitleProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuTitleProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTitleProcess *arg1 = (CMenuTitleProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTitleProcess,0))){
    SWIG_fail_ptr("delete_CMenuTitleProcess",1,SWIGTYPE_p_CMenuTitleProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuTitleProcess(void *obj) {
CMenuTitleProcess *arg1 = (CMenuTitleProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuTitleProcess_methods[] = {
    {"RefreshMenu", _wrap_CMenuTitleProcess_RefreshMenu}, 
    {"PageUp", _wrap_CMenuTitleProcess_PageUp}, 
    {"PageDown", _wrap_CMenuTitleProcess_PageDown}, 
    {"Sroll", _wrap_CMenuTitleProcess_Sroll}, 
    {"SetSelectIndex", _wrap_CMenuTitleProcess_SetSelectIndex}, 
    {"ConfirmChange", _wrap_CMenuTitleProcess_ConfirmChange}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuTitleProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuTitleProcess_bases[] = {0};
swig_lua_class _wrap_class_CMenuTitleProcess = { "CMenuTitleProcess", &SWIGTYPE_p_CMenuTitleProcess,_wrap_new_CMenuTitleProcess, swig_delete_CMenuTitleProcess, swig_CMenuTitleProcess_methods, swig_CMenuTitleProcess_attributes, swig_CMenuTitleProcess_bases };

static int _wrap_CMenuHawkerProcess_UpdateOwnerItem__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_UpdateOwnerItem",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->UpdateOwnerItem(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_UpdateOwnerItem__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_UpdateOwnerItem",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->UpdateOwnerItem();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_UpdateOwnerItem(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuHawkerProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_CMenuHawkerProcess_UpdateOwnerItem__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuHawkerProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_CMenuHawkerProcess_UpdateOwnerItem__SWIG_0(L);
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'CMenuHawkerProcess_UpdateOwnerItem'");
  lua_error(L);return 0;
}


static int _wrap_CMenuHawkerProcess_UpdateOwnerItemSlot__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  UInt8 arg2 ;
  bool arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isboolean(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_UpdateOwnerItemSlot",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  arg3 = (bool)lua_toboolean(L, 3);
  (arg1)->UpdateOwnerItemSlot(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_UpdateOwnerItemSlot__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_UpdateOwnerItemSlot",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->UpdateOwnerItemSlot(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_UpdateOwnerItemSlot(lua_State* L) {
  int argc;
  int argv[4]={
    1,2,3,4
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuHawkerProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_CMenuHawkerProcess_UpdateOwnerItemSlot__SWIG_1(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuHawkerProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          return _wrap_CMenuHawkerProcess_UpdateOwnerItemSlot__SWIG_0(L);
        }
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'CMenuHawkerProcess_UpdateOwnerItemSlot'");
  lua_error(L);return 0;
}


static int _wrap_CMenuHawkerProcess_UpdateOwnerEqItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_UpdateOwnerEqItem",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->UpdateOwnerEqItem();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_UpdateOwner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_UpdateOwner",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->UpdateOwner();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_UpdateOwnerModel(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_UpdateOwnerModel",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->UpdateOwnerModel();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_UpdateOwnerPartner__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_UpdateOwnerPartner",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->UpdateOwnerPartner(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_UpdateOwnerPartner__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_UpdateOwnerPartner",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->UpdateOwnerPartner();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_UpdateOwnerPartner(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuHawkerProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_CMenuHawkerProcess_UpdateOwnerPartner__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuHawkerProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_CMenuHawkerProcess_UpdateOwnerPartner__SWIG_0(L);
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'CMenuHawkerProcess_UpdateOwnerPartner'");
  lua_error(L);return 0;
}


static int _wrap_CMenuHawkerProcess_UpdateOwnerPet__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_UpdateOwnerPet",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->UpdateOwnerPet(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_UpdateOwnerPet__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_UpdateOwnerPet",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->UpdateOwnerPet();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_UpdateOwnerPet(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuHawkerProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_CMenuHawkerProcess_UpdateOwnerPet__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuHawkerProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_CMenuHawkerProcess_UpdateOwnerPet__SWIG_0(L);
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'CMenuHawkerProcess_UpdateOwnerPet'");
  lua_error(L);return 0;
}


static int _wrap_CMenuHawkerProcess_SetIconOff(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  int arg2 ;
  bool arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isboolean(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_SetIconOff",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (bool)lua_toboolean(L, 3);
  (arg1)->SetIconOff(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_UpdateOwnerPartnerNameList(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_UpdateOwnerPartnerNameList",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->UpdateOwnerPartnerNameList();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_SelectHawkItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_SelectHawkItem",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->SelectHawkItem();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_SelectHawkPartner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_SelectHawkPartner",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->SelectHawkPartner();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_SelectHawkPet(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_SelectHawkPet",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->SelectHawkPet();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_SelectHawkExchangeRecord(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_SelectHawkExchangeRecord",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->SelectHawkExchangeRecord();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_SetItemHawk(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  UInt8 arg2 ;
  UInt8 arg3 ;
  unsigned int arg4 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_SetItemHawk",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  arg3 = (UInt8)lua_tonumber(L, 3);
  arg4 = (unsigned int)lua_tonumber(L, 4);
  (arg1)->SetItemHawk(arg2,arg3,arg4);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_SetPartnerHawk(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_SetPartnerHawk",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetPartnerHawk(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_SetPetHawk(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_SetPetHawk",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetPetHawk(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_TurnPage(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_TurnPage",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->TurnPage(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_SelectPartnerOrPet(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_SelectPartnerOrPet",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->SelectPartnerOrPet(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_NotForSellPartner__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  bool arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_NotForSellPartner",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  result = (bool)(arg1)->NotForSellPartner(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_NotForSellPartner__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_NotForSellPartner",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  result = (bool)(arg1)->NotForSellPartner();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_NotForSellPartner(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuHawkerProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_CMenuHawkerProcess_NotForSellPartner__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuHawkerProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        return _wrap_CMenuHawkerProcess_NotForSellPartner__SWIG_0(L);
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'CMenuHawkerProcess_NotForSellPartner'");
  lua_error(L);return 0;
}


static int _wrap_CMenuHawkerProcess_NotForSellPet__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  bool arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_NotForSellPet",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  result = (bool)(arg1)->NotForSellPet(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_NotForSellPet__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_NotForSellPet",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  result = (bool)(arg1)->NotForSellPet();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_NotForSellPet(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuHawkerProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_CMenuHawkerProcess_NotForSellPet__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuHawkerProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        return _wrap_CMenuHawkerProcess_NotForSellPet__SWIG_0(L);
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'CMenuHawkerProcess_NotForSellPet'");
  lua_error(L);return 0;
}


static int _wrap_CMenuHawkerProcess_ResetHawkerOwner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_ResetHawkerOwner",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->ResetHawkerOwner();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_DragPartner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_DragPartner",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->DragPartner();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_DragPet(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_DragPet",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->DragPet();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_ResetSellItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_ResetSellItem",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->ResetSellItem(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_GetHawkMenuIndex(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  UInt8 result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_GetHawkMenuIndex",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  result = (UInt8)(arg1)->GetHawkMenuIndex();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_StartHawk(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_StartHawk",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->StartHawk();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_StopHawk(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_StopHawk",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->StopHawk();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_IsStartHawk(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_IsStartHawk",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  result = (bool)(arg1)->IsStartHawk();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_ClickHawkAlertPanel(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_ClickHawkAlertPanel",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->ClickHawkAlertPanel();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_SelectHawkSellItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_SelectHawkSellItem",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->SelectHawkSellItem();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_SelectHawkSellPartner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_SelectHawkSellPartner",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->SelectHawkSellPartner();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_SelectHawkSellPet(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_SelectHawkSellPet",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->SelectHawkSellPet();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_ShowHawkMessage(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_ShowHawkMessage",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->ShowHawkMessage(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_ChangeHawkName(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_ChangeHawkName",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->ChangeHawkName();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_CloseHawkFromTarget(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_CloseHawkFromTarget",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->CloseHawkFromTarget();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_GetMaxItemStackForHawk(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  UInt8 arg2 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_GetMaxItemStackForHawk",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  result = (int)(arg1)->GetMaxItemStackForHawk(arg2);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_BuyHawkItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  UInt8 arg2 ;
  UInt8 arg3 ;
  UInt8 arg4 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_BuyHawkItem",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  arg3 = (UInt8)lua_tonumber(L, 3);
  arg4 = (UInt8)lua_tonumber(L, 4);
  (arg1)->BuyHawkItem(arg2,arg3,arg4);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_ShowHawkSelltemDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_ShowHawkSelltemDetail",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->ShowHawkSelltemDetail();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_GetItemPriceForHawk(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  UInt8 arg2 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_GetItemPriceForHawk",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  result = (int)(arg1)->GetItemPriceForHawk(arg2);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_ShowItemPriceForHawk(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  UInt8 arg2 ;
  UInt8 arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_ShowItemPriceForHawk",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  arg3 = (UInt8)lua_tonumber(L, 3);
  (arg1)->ShowItemPriceForHawk(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_HawkerOwnerNameListScroll(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_HawkerOwnerNameListScroll",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->HawkerOwnerNameListScroll(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_ResetOwnerScroll(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_ResetOwnerScroll",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->ResetOwnerScroll();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_SetItemMoneyColour(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_SetItemMoneyColour",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->SetItemMoneyColour();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_InitItemPartnerPet(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_InitItemPartnerPet",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->InitItemPartnerPet();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuHawkerProcess_SetConcernTarget(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("CMenuHawkerProcess_SetConcernTarget",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  (arg1)->SetConcernTarget();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuHawkerProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *result = 0 ;
  
  result = (CMenuHawkerProcess *)new CMenuHawkerProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuHawkerProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuHawkerProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuHawkerProcess,0))){
    SWIG_fail_ptr("delete_CMenuHawkerProcess",1,SWIGTYPE_p_CMenuHawkerProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuHawkerProcess(void *obj) {
CMenuHawkerProcess *arg1 = (CMenuHawkerProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuHawkerProcess_methods[] = {
    {"UpdateOwnerItem", _wrap_CMenuHawkerProcess_UpdateOwnerItem}, 
    {"UpdateOwnerItemSlot", _wrap_CMenuHawkerProcess_UpdateOwnerItemSlot}, 
    {"UpdateOwnerEqItem", _wrap_CMenuHawkerProcess_UpdateOwnerEqItem}, 
    {"UpdateOwner", _wrap_CMenuHawkerProcess_UpdateOwner}, 
    {"UpdateOwnerModel", _wrap_CMenuHawkerProcess_UpdateOwnerModel}, 
    {"UpdateOwnerPartner", _wrap_CMenuHawkerProcess_UpdateOwnerPartner}, 
    {"UpdateOwnerPet", _wrap_CMenuHawkerProcess_UpdateOwnerPet}, 
    {"SetIconOff", _wrap_CMenuHawkerProcess_SetIconOff}, 
    {"UpdateOwnerPartnerNameList", _wrap_CMenuHawkerProcess_UpdateOwnerPartnerNameList}, 
    {"SelectHawkItem", _wrap_CMenuHawkerProcess_SelectHawkItem}, 
    {"SelectHawkPartner", _wrap_CMenuHawkerProcess_SelectHawkPartner}, 
    {"SelectHawkPet", _wrap_CMenuHawkerProcess_SelectHawkPet}, 
    {"SelectHawkExchangeRecord", _wrap_CMenuHawkerProcess_SelectHawkExchangeRecord}, 
    {"SetItemHawk", _wrap_CMenuHawkerProcess_SetItemHawk}, 
    {"SetPartnerHawk", _wrap_CMenuHawkerProcess_SetPartnerHawk}, 
    {"SetPetHawk", _wrap_CMenuHawkerProcess_SetPetHawk}, 
    {"TurnPage", _wrap_CMenuHawkerProcess_TurnPage}, 
    {"SelectPartnerOrPet", _wrap_CMenuHawkerProcess_SelectPartnerOrPet}, 
    {"NotForSellPartner", _wrap_CMenuHawkerProcess_NotForSellPartner}, 
    {"NotForSellPet", _wrap_CMenuHawkerProcess_NotForSellPet}, 
    {"ResetHawkerOwner", _wrap_CMenuHawkerProcess_ResetHawkerOwner}, 
    {"DragPartner", _wrap_CMenuHawkerProcess_DragPartner}, 
    {"DragPet", _wrap_CMenuHawkerProcess_DragPet}, 
    {"ResetSellItem", _wrap_CMenuHawkerProcess_ResetSellItem}, 
    {"GetHawkMenuIndex", _wrap_CMenuHawkerProcess_GetHawkMenuIndex}, 
    {"StartHawk", _wrap_CMenuHawkerProcess_StartHawk}, 
    {"StopHawk", _wrap_CMenuHawkerProcess_StopHawk}, 
    {"IsStartHawk", _wrap_CMenuHawkerProcess_IsStartHawk}, 
    {"ClickHawkAlertPanel", _wrap_CMenuHawkerProcess_ClickHawkAlertPanel}, 
    {"SelectHawkSellItem", _wrap_CMenuHawkerProcess_SelectHawkSellItem}, 
    {"SelectHawkSellPartner", _wrap_CMenuHawkerProcess_SelectHawkSellPartner}, 
    {"SelectHawkSellPet", _wrap_CMenuHawkerProcess_SelectHawkSellPet}, 
    {"ShowHawkMessage", _wrap_CMenuHawkerProcess_ShowHawkMessage}, 
    {"ChangeHawkName", _wrap_CMenuHawkerProcess_ChangeHawkName}, 
    {"CloseHawkFromTarget", _wrap_CMenuHawkerProcess_CloseHawkFromTarget}, 
    {"GetMaxItemStackForHawk", _wrap_CMenuHawkerProcess_GetMaxItemStackForHawk}, 
    {"BuyHawkItem", _wrap_CMenuHawkerProcess_BuyHawkItem}, 
    {"ShowHawkSelltemDetail", _wrap_CMenuHawkerProcess_ShowHawkSelltemDetail}, 
    {"GetItemPriceForHawk", _wrap_CMenuHawkerProcess_GetItemPriceForHawk}, 
    {"ShowItemPriceForHawk", _wrap_CMenuHawkerProcess_ShowItemPriceForHawk}, 
    {"HawkerOwnerNameListScroll", _wrap_CMenuHawkerProcess_HawkerOwnerNameListScroll}, 
    {"ResetOwnerScroll", _wrap_CMenuHawkerProcess_ResetOwnerScroll}, 
    {"SetItemMoneyColour", _wrap_CMenuHawkerProcess_SetItemMoneyColour}, 
    {"InitItemPartnerPet", _wrap_CMenuHawkerProcess_InitItemPartnerPet}, 
    {"SetConcernTarget", _wrap_CMenuHawkerProcess_SetConcernTarget}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuHawkerProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuHawkerProcess_bases[] = {0};
swig_lua_class _wrap_class_CMenuHawkerProcess = { "CMenuHawkerProcess", &SWIGTYPE_p_CMenuHawkerProcess,_wrap_new_CMenuHawkerProcess, swig_delete_CMenuHawkerProcess, swig_CMenuHawkerProcess_methods, swig_CMenuHawkerProcess_attributes, swig_CMenuHawkerProcess_bases };

static int _wrap_CMenuQuestJournal_CloseQuestJournal(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestJournal *arg1 = (CMenuQuestJournal *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuQuestJournal,0))){
    SWIG_fail_ptr("CMenuQuestJournal_CloseQuestJournal",1,SWIGTYPE_p_CMenuQuestJournal);
  }
  
  (arg1)->CloseQuestJournal();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuQuestJournal_ShowQuestJournal(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestJournal *arg1 = (CMenuQuestJournal *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuQuestJournal,0))){
    SWIG_fail_ptr("CMenuQuestJournal_ShowQuestJournal",1,SWIGTYPE_p_CMenuQuestJournal);
  }
  
  (arg1)->ShowQuestJournal();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuQuestJournal_SelectJournal(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestJournal *arg1 = (CMenuQuestJournal *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuQuestJournal,0))){
    SWIG_fail_ptr("CMenuQuestJournal_SelectJournal",1,SWIGTYPE_p_CMenuQuestJournal);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SelectJournal(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuQuestJournal_JournalScroll(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestJournal *arg1 = (CMenuQuestJournal *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuQuestJournal,0))){
    SWIG_fail_ptr("CMenuQuestJournal_JournalScroll",1,SWIGTYPE_p_CMenuQuestJournal);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->JournalScroll(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuQuestJournal_DBClickJournal(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestJournal *arg1 = (CMenuQuestJournal *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuQuestJournal,0))){
    SWIG_fail_ptr("CMenuQuestJournal_DBClickJournal",1,SWIGTYPE_p_CMenuQuestJournal);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->DBClickJournal(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuQuestJournal(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestJournal *result = 0 ;
  
  result = (CMenuQuestJournal *)new CMenuQuestJournal();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuQuestJournal,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuQuestJournal(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestJournal *arg1 = (CMenuQuestJournal *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuQuestJournal,0))){
    SWIG_fail_ptr("delete_CMenuQuestJournal",1,SWIGTYPE_p_CMenuQuestJournal);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuQuestJournal(void *obj) {
CMenuQuestJournal *arg1 = (CMenuQuestJournal *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuQuestJournal_methods[] = {
    {"CloseQuestJournal", _wrap_CMenuQuestJournal_CloseQuestJournal}, 
    {"ShowQuestJournal", _wrap_CMenuQuestJournal_ShowQuestJournal}, 
    {"SelectJournal", _wrap_CMenuQuestJournal_SelectJournal}, 
    {"JournalScroll", _wrap_CMenuQuestJournal_JournalScroll}, 
    {"DBClickJournal", _wrap_CMenuQuestJournal_DBClickJournal}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuQuestJournal_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuQuestJournal_bases[] = {0};
swig_lua_class _wrap_class_CMenuQuestJournal = { "CMenuQuestJournal", &SWIGTYPE_p_CMenuQuestJournal,_wrap_new_CMenuQuestJournal, swig_delete_CMenuQuestJournal, swig_CMenuQuestJournal_methods, swig_CMenuQuestJournal_attributes, swig_CMenuQuestJournal_bases };

static int _wrap_CWeaponsRank_CloseWeaponsRank(lua_State* L) {
  int SWIG_arg = -1;
  CWeaponsRank *arg1 = (CWeaponsRank *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CWeaponsRank,0))){
    SWIG_fail_ptr("CWeaponsRank_CloseWeaponsRank",1,SWIGTYPE_p_CWeaponsRank);
  }
  
  (arg1)->CloseWeaponsRank();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CWeaponsRank_ShowWeaponsRank(lua_State* L) {
  int SWIG_arg = -1;
  CWeaponsRank *arg1 = (CWeaponsRank *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CWeaponsRank,0))){
    SWIG_fail_ptr("CWeaponsRank_ShowWeaponsRank",1,SWIGTYPE_p_CWeaponsRank);
  }
  
  (arg1)->ShowWeaponsRank();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CWeaponsRank_SelectWeaponsRank(lua_State* L) {
  int SWIG_arg = -1;
  CWeaponsRank *arg1 = (CWeaponsRank *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CWeaponsRank,0))){
    SWIG_fail_ptr("CWeaponsRank_SelectWeaponsRank",1,SWIGTYPE_p_CWeaponsRank);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SelectWeaponsRank(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CWeaponsRank_WeaponsRankScroll(lua_State* L) {
  int SWIG_arg = -1;
  CWeaponsRank *arg1 = (CWeaponsRank *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CWeaponsRank,0))){
    SWIG_fail_ptr("CWeaponsRank_WeaponsRankScroll",1,SWIGTYPE_p_CWeaponsRank);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->WeaponsRankScroll(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CWeaponsRank_DBClickWeaponsRank(lua_State* L) {
  int SWIG_arg = -1;
  CWeaponsRank *arg1 = (CWeaponsRank *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CWeaponsRank,0))){
    SWIG_fail_ptr("CWeaponsRank_DBClickWeaponsRank",1,SWIGTYPE_p_CWeaponsRank);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->DBClickWeaponsRank(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CWeaponsRank(lua_State* L) {
  int SWIG_arg = -1;
  CWeaponsRank *result = 0 ;
  
  result = (CWeaponsRank *)new CWeaponsRank();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CWeaponsRank,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CWeaponsRank(lua_State* L) {
  int SWIG_arg = -1;
  CWeaponsRank *arg1 = (CWeaponsRank *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CWeaponsRank,0))){
    SWIG_fail_ptr("delete_CWeaponsRank",1,SWIGTYPE_p_CWeaponsRank);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CWeaponsRank(void *obj) {
CWeaponsRank *arg1 = (CWeaponsRank *) obj;
delete arg1;
}
static swig_lua_method swig_CWeaponsRank_methods[] = {
    {"CloseWeaponsRank", _wrap_CWeaponsRank_CloseWeaponsRank}, 
    {"ShowWeaponsRank", _wrap_CWeaponsRank_ShowWeaponsRank}, 
    {"SelectWeaponsRank", _wrap_CWeaponsRank_SelectWeaponsRank}, 
    {"WeaponsRankScroll", _wrap_CWeaponsRank_WeaponsRankScroll}, 
    {"DBClickWeaponsRank", _wrap_CWeaponsRank_DBClickWeaponsRank}, 
    {0,0}
};
static swig_lua_attribute swig_CWeaponsRank_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CWeaponsRank_bases[] = {0};
swig_lua_class _wrap_class_CWeaponsRank = { "CWeaponsRank", &SWIGTYPE_p_CWeaponsRank,_wrap_new_CWeaponsRank, swig_delete_CWeaponsRank, swig_CWeaponsRank_methods, swig_CWeaponsRank_attributes, swig_CWeaponsRank_bases };

static int _wrap_CTeamDescription_CloseTeamDescription(lua_State* L) {
  int SWIG_arg = -1;
  CTeamDescription *arg1 = (CTeamDescription *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CTeamDescription,0))){
    SWIG_fail_ptr("CTeamDescription_CloseTeamDescription",1,SWIGTYPE_p_CTeamDescription);
  }
  
  (arg1)->CloseTeamDescription();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CTeamDescription_ShowTeamDescription(lua_State* L) {
  int SWIG_arg = -1;
  CTeamDescription *arg1 = (CTeamDescription *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CTeamDescription,0))){
    SWIG_fail_ptr("CTeamDescription_ShowTeamDescription",1,SWIGTYPE_p_CTeamDescription);
  }
  
  (arg1)->ShowTeamDescription();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CTeamDescription_SetTeamDescriptionData(lua_State* L) {
  int SWIG_arg = -1;
  CTeamDescription *arg1 = (CTeamDescription *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CTeamDescription,0))){
    SWIG_fail_ptr("CTeamDescription_SetTeamDescriptionData",1,SWIGTYPE_p_CTeamDescription);
  }
  
  (arg1)->SetTeamDescriptionData();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CTeamDescription_TeamDescriptionTabControl(lua_State* L) {
  int SWIG_arg = -1;
  CTeamDescription *arg1 = (CTeamDescription *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CTeamDescription,0))){
    SWIG_fail_ptr("CTeamDescription_TeamDescriptionTabControl",1,SWIGTYPE_p_CTeamDescription);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->TeamDescriptionTabControl(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CTeamDescription_TeamDescriptionInput(lua_State* L) {
  int SWIG_arg = -1;
  CTeamDescription *arg1 = (CTeamDescription *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CTeamDescription,0))){
    SWIG_fail_ptr("CTeamDescription_TeamDescriptionInput",1,SWIGTYPE_p_CTeamDescription);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("CTeamDescription_TeamDescriptionInput",2,SWIGTYPE_p_wchar_t);
  }
  
  (arg1)->TeamDescriptionInput((wchar_t const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CTeamDescription_TeamDescriptionLevelDown(lua_State* L) {
  int SWIG_arg = -1;
  CTeamDescription *arg1 = (CTeamDescription *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CTeamDescription,0))){
    SWIG_fail_ptr("CTeamDescription_TeamDescriptionLevelDown",1,SWIGTYPE_p_CTeamDescription);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->TeamDescriptionLevelDown(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CTeamDescription_TeamDescriptionLevelUp(lua_State* L) {
  int SWIG_arg = -1;
  CTeamDescription *arg1 = (CTeamDescription *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CTeamDescription,0))){
    SWIG_fail_ptr("CTeamDescription_TeamDescriptionLevelUp",1,SWIGTYPE_p_CTeamDescription);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->TeamDescriptionLevelUp(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CTeamDescription_GetDescriptionLevelDown(lua_State* L) {
  int SWIG_arg = -1;
  CTeamDescription *arg1 = (CTeamDescription *) 0 ;
  UInt16 result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CTeamDescription,0))){
    SWIG_fail_ptr("CTeamDescription_GetDescriptionLevelDown",1,SWIGTYPE_p_CTeamDescription);
  }
  
  result = (UInt16)(arg1)->GetDescriptionLevelDown();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CTeamDescription_GetDescriptionLevelUp(lua_State* L) {
  int SWIG_arg = -1;
  CTeamDescription *arg1 = (CTeamDescription *) 0 ;
  UInt16 result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CTeamDescription,0))){
    SWIG_fail_ptr("CTeamDescription_GetDescriptionLevelUp",1,SWIGTYPE_p_CTeamDescription);
  }
  
  result = (UInt16)(arg1)->GetDescriptionLevelUp();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CTeamDescription(lua_State* L) {
  int SWIG_arg = -1;
  CTeamDescription *result = 0 ;
  
  result = (CTeamDescription *)new CTeamDescription();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CTeamDescription,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CTeamDescription(lua_State* L) {
  int SWIG_arg = -1;
  CTeamDescription *arg1 = (CTeamDescription *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CTeamDescription,0))){
    SWIG_fail_ptr("delete_CTeamDescription",1,SWIGTYPE_p_CTeamDescription);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CTeamDescription(void *obj) {
CTeamDescription *arg1 = (CTeamDescription *) obj;
delete arg1;
}
static swig_lua_method swig_CTeamDescription_methods[] = {
    {"CloseTeamDescription", _wrap_CTeamDescription_CloseTeamDescription}, 
    {"ShowTeamDescription", _wrap_CTeamDescription_ShowTeamDescription}, 
    {"SetTeamDescriptionData", _wrap_CTeamDescription_SetTeamDescriptionData}, 
    {"TeamDescriptionTabControl", _wrap_CTeamDescription_TeamDescriptionTabControl}, 
    {"TeamDescriptionInput", _wrap_CTeamDescription_TeamDescriptionInput}, 
    {"TeamDescriptionLevelDown", _wrap_CTeamDescription_TeamDescriptionLevelDown}, 
    {"TeamDescriptionLevelUp", _wrap_CTeamDescription_TeamDescriptionLevelUp}, 
    {"GetDescriptionLevelDown", _wrap_CTeamDescription_GetDescriptionLevelDown}, 
    {"GetDescriptionLevelUp", _wrap_CTeamDescription_GetDescriptionLevelUp}, 
    {0,0}
};
static swig_lua_attribute swig_CTeamDescription_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CTeamDescription_bases[] = {0};
swig_lua_class _wrap_class_CTeamDescription = { "CTeamDescription", &SWIGTYPE_p_CTeamDescription,_wrap_new_CTeamDescription, swig_delete_CTeamDescription, swig_CTeamDescription_methods, swig_CTeamDescription_attributes, swig_CTeamDescription_bases };

static int _wrap_CQuestionProcess_Answer(lua_State* L) {
  int SWIG_arg = -1;
  CQuestionProcess *arg1 = (CQuestionProcess *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CQuestionProcess,0))){
    SWIG_fail_ptr("CQuestionProcess_Answer",1,SWIGTYPE_p_CQuestionProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->Answer(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CQuestionProcess_EnterQuestion(lua_State* L) {
  int SWIG_arg = -1;
  CQuestionProcess *arg1 = (CQuestionProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CQuestionProcess,0))){
    SWIG_fail_ptr("CQuestionProcess_EnterQuestion",1,SWIGTYPE_p_CQuestionProcess);
  }
  
  (arg1)->EnterQuestion();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CQuestionProcess_ExitQuestion(lua_State* L) {
  int SWIG_arg = -1;
  CQuestionProcess *arg1 = (CQuestionProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CQuestionProcess,0))){
    SWIG_fail_ptr("CQuestionProcess_ExitQuestion",1,SWIGTYPE_p_CQuestionProcess);
  }
  
  (arg1)->ExitQuestion();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CQuestionProcess(lua_State* L) {
  int SWIG_arg = -1;
  CQuestionProcess *result = 0 ;
  
  result = (CQuestionProcess *)new CQuestionProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CQuestionProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CQuestionProcess(lua_State* L) {
  int SWIG_arg = -1;
  CQuestionProcess *arg1 = (CQuestionProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CQuestionProcess,0))){
    SWIG_fail_ptr("delete_CQuestionProcess",1,SWIGTYPE_p_CQuestionProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CQuestionProcess(void *obj) {
CQuestionProcess *arg1 = (CQuestionProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CQuestionProcess_methods[] = {
    {"Answer", _wrap_CQuestionProcess_Answer}, 
    {"EnterQuestion", _wrap_CQuestionProcess_EnterQuestion}, 
    {"ExitQuestion", _wrap_CQuestionProcess_ExitQuestion}, 
    {0,0}
};
static swig_lua_attribute swig_CQuestionProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CQuestionProcess_bases[] = {0};
swig_lua_class _wrap_class_CQuestionProcess = { "CQuestionProcess", &SWIGTYPE_p_CQuestionProcess,_wrap_new_CQuestionProcess, swig_delete_CQuestionProcess, swig_CQuestionProcess_methods, swig_CQuestionProcess_attributes, swig_CQuestionProcess_bases };

static int _wrap_CMenuWareHouseProcess_ShowWareHouseItem__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  CMenuWareHouseProcess *arg1 = (CMenuWareHouseProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuWareHouseProcess,0))){
    SWIG_fail_ptr("CMenuWareHouseProcess_ShowWareHouseItem",1,SWIGTYPE_p_CMenuWareHouseProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->ShowWareHouseItem(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuWareHouseProcess_ShowWareHouseItem__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  CMenuWareHouseProcess *arg1 = (CMenuWareHouseProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuWareHouseProcess,0))){
    SWIG_fail_ptr("CMenuWareHouseProcess_ShowWareHouseItem",1,SWIGTYPE_p_CMenuWareHouseProcess);
  }
  
  (arg1)->ShowWareHouseItem();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuWareHouseProcess_ShowWareHouseItem(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuWareHouseProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_CMenuWareHouseProcess_ShowWareHouseItem__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_CMenuWareHouseProcess, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_CMenuWareHouseProcess_ShowWareHouseItem__SWIG_0(L);
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'CMenuWareHouseProcess_ShowWareHouseItem'");
  lua_error(L);return 0;
}


static int _wrap_CMenuWareHouseProcess_ShowWareHousePartner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuWareHouseProcess *arg1 = (CMenuWareHouseProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuWareHouseProcess,0))){
    SWIG_fail_ptr("CMenuWareHouseProcess_ShowWareHousePartner",1,SWIGTYPE_p_CMenuWareHouseProcess);
  }
  
  (arg1)->ShowWareHousePartner();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuWareHouseProcess_ShowWareHousePet(lua_State* L) {
  int SWIG_arg = -1;
  CMenuWareHouseProcess *arg1 = (CMenuWareHouseProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuWareHouseProcess,0))){
    SWIG_fail_ptr("CMenuWareHouseProcess_ShowWareHousePet",1,SWIGTYPE_p_CMenuWareHouseProcess);
  }
  
  (arg1)->ShowWareHousePet();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuWareHouseProcess_CloseWareHouse(lua_State* L) {
  int SWIG_arg = -1;
  CMenuWareHouseProcess *arg1 = (CMenuWareHouseProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuWareHouseProcess,0))){
    SWIG_fail_ptr("CMenuWareHouseProcess_CloseWareHouse",1,SWIGTYPE_p_CMenuWareHouseProcess);
  }
  
  (arg1)->CloseWareHouse();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuWareHouseProcess_PutToWareHouse(lua_State* L) {
  int SWIG_arg = -1;
  CMenuWareHouseProcess *arg1 = (CMenuWareHouseProcess *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuWareHouseProcess,0))){
    SWIG_fail_ptr("CMenuWareHouseProcess_PutToWareHouse",1,SWIGTYPE_p_CMenuWareHouseProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  (arg1)->PutToWareHouse(arg2,arg3,arg4);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuWareHouseProcess_GetMaxStack(lua_State* L) {
  int SWIG_arg = -1;
  CMenuWareHouseProcess *arg1 = (CMenuWareHouseProcess *) 0 ;
  int arg2 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuWareHouseProcess,0))){
    SWIG_fail_ptr("CMenuWareHouseProcess_GetMaxStack",1,SWIGTYPE_p_CMenuWareHouseProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  result = (int)(arg1)->GetMaxStack(arg2);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuWareHouseProcess_GetFromWareHouse(lua_State* L) {
  int SWIG_arg = -1;
  CMenuWareHouseProcess *arg1 = (CMenuWareHouseProcess *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  if(!lua_isnumber(L,4)) SWIG_fail_arg(4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuWareHouseProcess,0))){
    SWIG_fail_ptr("CMenuWareHouseProcess_GetFromWareHouse",1,SWIGTYPE_p_CMenuWareHouseProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  (arg1)->GetFromWareHouse(arg2,arg3,arg4);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuWareHouseProcess_CheckCanSwap(lua_State* L) {
  int SWIG_arg = -1;
  CMenuWareHouseProcess *arg1 = (CMenuWareHouseProcess *) 0 ;
  int arg2 ;
  int arg3 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuWareHouseProcess,0))){
    SWIG_fail_ptr("CMenuWareHouseProcess_CheckCanSwap",1,SWIGTYPE_p_CMenuWareHouseProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  result = (bool)(arg1)->CheckCanSwap(arg2,arg3);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuWareHouseProcess_AvailSlot(lua_State* L) {
  int SWIG_arg = -1;
  CMenuWareHouseProcess *arg1 = (CMenuWareHouseProcess *) 0 ;
  int arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuWareHouseProcess,0))){
    SWIG_fail_ptr("CMenuWareHouseProcess_AvailSlot",1,SWIGTYPE_p_CMenuWareHouseProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  result = (bool)(arg1)->AvailSlot(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuWareHouseProcess_ShowItemDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuWareHouseProcess *arg1 = (CMenuWareHouseProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuWareHouseProcess,0))){
    SWIG_fail_ptr("CMenuWareHouseProcess_ShowItemDetail",1,SWIGTYPE_p_CMenuWareHouseProcess);
  }
  
  (arg1)->ShowItemDetail();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuWareHouseProcess_MoveItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuWareHouseProcess *arg1 = (CMenuWareHouseProcess *) 0 ;
  int arg2 ;
  int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuWareHouseProcess,0))){
    SWIG_fail_ptr("CMenuWareHouseProcess_MoveItem",1,SWIGTYPE_p_CMenuWareHouseProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->MoveItem(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuWareHouseProcess_PutPartnerToWareHouse(lua_State* L) {
  int SWIG_arg = -1;
  CMenuWareHouseProcess *arg1 = (CMenuWareHouseProcess *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuWareHouseProcess,0))){
    SWIG_fail_ptr("CMenuWareHouseProcess_PutPartnerToWareHouse",1,SWIGTYPE_p_CMenuWareHouseProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->PutPartnerToWareHouse(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuWareHouseProcess_GetPartnerFromWareHouse(lua_State* L) {
  int SWIG_arg = -1;
  CMenuWareHouseProcess *arg1 = (CMenuWareHouseProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuWareHouseProcess,0))){
    SWIG_fail_ptr("CMenuWareHouseProcess_GetPartnerFromWareHouse",1,SWIGTYPE_p_CMenuWareHouseProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->GetPartnerFromWareHouse(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuWareHouseProcess_ShowPartnerDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuWareHouseProcess *arg1 = (CMenuWareHouseProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuWareHouseProcess,0))){
    SWIG_fail_ptr("CMenuWareHouseProcess_ShowPartnerDetail",1,SWIGTYPE_p_CMenuWareHouseProcess);
  }
  
  (arg1)->ShowPartnerDetail();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuWareHouseProcess_PutPetToWareHouse(lua_State* L) {
  int SWIG_arg = -1;
  CMenuWareHouseProcess *arg1 = (CMenuWareHouseProcess *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuWareHouseProcess,0))){
    SWIG_fail_ptr("CMenuWareHouseProcess_PutPetToWareHouse",1,SWIGTYPE_p_CMenuWareHouseProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->PutPetToWareHouse(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuWareHouseProcess_GetPetFromWareHouse(lua_State* L) {
  int SWIG_arg = -1;
  CMenuWareHouseProcess *arg1 = (CMenuWareHouseProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuWareHouseProcess,0))){
    SWIG_fail_ptr("CMenuWareHouseProcess_GetPetFromWareHouse",1,SWIGTYPE_p_CMenuWareHouseProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->GetPetFromWareHouse(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuWareHouseProcess_ShowPetDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuWareHouseProcess *arg1 = (CMenuWareHouseProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuWareHouseProcess,0))){
    SWIG_fail_ptr("CMenuWareHouseProcess_ShowPetDetail",1,SWIGTYPE_p_CMenuWareHouseProcess);
  }
  
  (arg1)->ShowPetDetail();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuWareHouseProcess_JpackWareHouse(lua_State* L) {
  int SWIG_arg = -1;
  CMenuWareHouseProcess *arg1 = (CMenuWareHouseProcess *) 0 ;
  UInt8 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuWareHouseProcess,0))){
    SWIG_fail_ptr("CMenuWareHouseProcess_JpackWareHouse",1,SWIGTYPE_p_CMenuWareHouseProcess);
  }
  
  arg2 = (UInt8)lua_tonumber(L, 2);
  (arg1)->JpackWareHouse(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuWareHouseProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuWareHouseProcess *result = 0 ;
  
  result = (CMenuWareHouseProcess *)new CMenuWareHouseProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuWareHouseProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuWareHouseProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuWareHouseProcess *arg1 = (CMenuWareHouseProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuWareHouseProcess,0))){
    SWIG_fail_ptr("delete_CMenuWareHouseProcess",1,SWIGTYPE_p_CMenuWareHouseProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuWareHouseProcess(void *obj) {
CMenuWareHouseProcess *arg1 = (CMenuWareHouseProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuWareHouseProcess_methods[] = {
    {"ShowWareHouseItem", _wrap_CMenuWareHouseProcess_ShowWareHouseItem}, 
    {"ShowWareHousePartner", _wrap_CMenuWareHouseProcess_ShowWareHousePartner}, 
    {"ShowWareHousePet", _wrap_CMenuWareHouseProcess_ShowWareHousePet}, 
    {"CloseWareHouse", _wrap_CMenuWareHouseProcess_CloseWareHouse}, 
    {"PutToWareHouse", _wrap_CMenuWareHouseProcess_PutToWareHouse}, 
    {"GetMaxStack", _wrap_CMenuWareHouseProcess_GetMaxStack}, 
    {"GetFromWareHouse", _wrap_CMenuWareHouseProcess_GetFromWareHouse}, 
    {"CheckCanSwap", _wrap_CMenuWareHouseProcess_CheckCanSwap}, 
    {"AvailSlot", _wrap_CMenuWareHouseProcess_AvailSlot}, 
    {"ShowItemDetail", _wrap_CMenuWareHouseProcess_ShowItemDetail}, 
    {"MoveItem", _wrap_CMenuWareHouseProcess_MoveItem}, 
    {"PutPartnerToWareHouse", _wrap_CMenuWareHouseProcess_PutPartnerToWareHouse}, 
    {"GetPartnerFromWareHouse", _wrap_CMenuWareHouseProcess_GetPartnerFromWareHouse}, 
    {"ShowPartnerDetail", _wrap_CMenuWareHouseProcess_ShowPartnerDetail}, 
    {"PutPetToWareHouse", _wrap_CMenuWareHouseProcess_PutPetToWareHouse}, 
    {"GetPetFromWareHouse", _wrap_CMenuWareHouseProcess_GetPetFromWareHouse}, 
    {"ShowPetDetail", _wrap_CMenuWareHouseProcess_ShowPetDetail}, 
    {"JpackWareHouse", _wrap_CMenuWareHouseProcess_JpackWareHouse}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuWareHouseProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuWareHouseProcess_bases[] = {0};
swig_lua_class _wrap_class_CMenuWareHouseProcess = { "CMenuWareHouseProcess", &SWIGTYPE_p_CMenuWareHouseProcess,_wrap_new_CMenuWareHouseProcess, swig_delete_CMenuWareHouseProcess, swig_CMenuWareHouseProcess_methods, swig_CMenuWareHouseProcess_attributes, swig_CMenuWareHouseProcess_bases };

static int _wrap_CMenuSellYuanBaoProcess_OpenSellYBMenuChoice(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSellYuanBaoProcess *arg1 = (CMenuSellYuanBaoProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSellYuanBaoProcess,0))){
    SWIG_fail_ptr("CMenuSellYuanBaoProcess_OpenSellYBMenuChoice",1,SWIGTYPE_p_CMenuSellYuanBaoProcess);
  }
  
  (arg1)->OpenSellYBMenuChoice();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSellYuanBaoProcess_OpenChangeYBSelect(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSellYuanBaoProcess *arg1 = (CMenuSellYuanBaoProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSellYuanBaoProcess,0))){
    SWIG_fail_ptr("CMenuSellYuanBaoProcess_OpenChangeYBSelect",1,SWIGTYPE_p_CMenuSellYuanBaoProcess);
  }
  
  (arg1)->OpenChangeYBSelect();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSellYuanBaoProcess_OpenExchangeYBYBT(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSellYuanBaoProcess *arg1 = (CMenuSellYuanBaoProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSellYuanBaoProcess,0))){
    SWIG_fail_ptr("CMenuSellYuanBaoProcess_OpenExchangeYBYBT",1,SWIGTYPE_p_CMenuSellYuanBaoProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->OpenExchangeYBYBT(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSellYuanBaoProcess_CloseSellYuanBao(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSellYuanBaoProcess *arg1 = (CMenuSellYuanBaoProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSellYuanBaoProcess,0))){
    SWIG_fail_ptr("CMenuSellYuanBaoProcess_CloseSellYuanBao",1,SWIGTYPE_p_CMenuSellYuanBaoProcess);
  }
  
  (arg1)->CloseSellYuanBao();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSellYuanBaoProcess_CheckYBTAmount(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSellYuanBaoProcess *arg1 = (CMenuSellYuanBaoProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSellYuanBaoProcess,0))){
    SWIG_fail_ptr("CMenuSellYuanBaoProcess_CheckYBTAmount",1,SWIGTYPE_p_CMenuSellYuanBaoProcess);
  }
  
  (arg1)->CheckYBTAmount();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSellYuanBaoProcess_ConfirmChangeYBYBT(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSellYuanBaoProcess *arg1 = (CMenuSellYuanBaoProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSellYuanBaoProcess,0))){
    SWIG_fail_ptr("CMenuSellYuanBaoProcess_ConfirmChangeYBYBT",1,SWIGTYPE_p_CMenuSellYuanBaoProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->ConfirmChangeYBYBT(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSellYuanBaoProcess_InitStartPos(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSellYuanBaoProcess *arg1 = (CMenuSellYuanBaoProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSellYuanBaoProcess,0))){
    SWIG_fail_ptr("CMenuSellYuanBaoProcess_InitStartPos",1,SWIGTYPE_p_CMenuSellYuanBaoProcess);
  }
  
  (arg1)->InitStartPos();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSellYuanBaoProcess_OpenSellYBBuySell(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSellYuanBaoProcess *arg1 = (CMenuSellYuanBaoProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSellYuanBaoProcess,0))){
    SWIG_fail_ptr("CMenuSellYuanBaoProcess_OpenSellYBBuySell",1,SWIGTYPE_p_CMenuSellYuanBaoProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->OpenSellYBBuySell(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSellYuanBaoProcess_PageUpAndDown(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSellYuanBaoProcess *arg1 = (CMenuSellYuanBaoProcess *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSellYuanBaoProcess,0))){
    SWIG_fail_ptr("CMenuSellYuanBaoProcess_PageUpAndDown",1,SWIGTYPE_p_CMenuSellYuanBaoProcess);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->PageUpAndDown(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSellYuanBaoProcess_ConfirmSellYB(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSellYuanBaoProcess *arg1 = (CMenuSellYuanBaoProcess *) 0 ;
  int arg2 ;
  int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSellYuanBaoProcess,0))){
    SWIG_fail_ptr("CMenuSellYuanBaoProcess_ConfirmSellYB",1,SWIGTYPE_p_CMenuSellYuanBaoProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->ConfirmSellYB(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSellYuanBaoProcess_SetConfirmBoxText(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSellYuanBaoProcess *arg1 = (CMenuSellYuanBaoProcess *) 0 ;
  int arg2 ;
  int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSellYuanBaoProcess,0))){
    SWIG_fail_ptr("CMenuSellYuanBaoProcess_SetConfirmBoxText",1,SWIGTYPE_p_CMenuSellYuanBaoProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  (arg1)->SetConfirmBoxText(arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSellYuanBaoProcess_SelectBuyYBT(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSellYuanBaoProcess *arg1 = (CMenuSellYuanBaoProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSellYuanBaoProcess,0))){
    SWIG_fail_ptr("CMenuSellYuanBaoProcess_SelectBuyYBT",1,SWIGTYPE_p_CMenuSellYuanBaoProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SelectBuyYBT(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSellYuanBaoProcess_ConfirmBuyYB(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSellYuanBaoProcess *arg1 = (CMenuSellYuanBaoProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSellYuanBaoProcess,0))){
    SWIG_fail_ptr("CMenuSellYuanBaoProcess_ConfirmBuyYB",1,SWIGTYPE_p_CMenuSellYuanBaoProcess);
  }
  
  (arg1)->ConfirmBuyYB();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSellYuanBaoProcess_DisplayBuyYBConfirmText(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSellYuanBaoProcess *arg1 = (CMenuSellYuanBaoProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSellYuanBaoProcess,0))){
    SWIG_fail_ptr("CMenuSellYuanBaoProcess_DisplayBuyYBConfirmText",1,SWIGTYPE_p_CMenuSellYuanBaoProcess);
  }
  
  (arg1)->DisplayBuyYBConfirmText();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSellYuanBaoProcess_ResetSelectBuyYBT(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSellYuanBaoProcess *arg1 = (CMenuSellYuanBaoProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSellYuanBaoProcess,0))){
    SWIG_fail_ptr("CMenuSellYuanBaoProcess_ResetSelectBuyYBT",1,SWIGTYPE_p_CMenuSellYuanBaoProcess);
  }
  
  (arg1)->ResetSelectBuyYBT();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSellYuanBaoProcess_GetSellYBTempBank(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSellYuanBaoProcess *arg1 = (CMenuSellYuanBaoProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSellYuanBaoProcess,0))){
    SWIG_fail_ptr("CMenuSellYuanBaoProcess_GetSellYBTempBank",1,SWIGTYPE_p_CMenuSellYuanBaoProcess);
  }
  
  (arg1)->GetSellYBTempBank();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSellYuanBaoProcess_GetAllTBMoneyYBT(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSellYuanBaoProcess *arg1 = (CMenuSellYuanBaoProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSellYuanBaoProcess,0))){
    SWIG_fail_ptr("CMenuSellYuanBaoProcess_GetAllTBMoneyYBT",1,SWIGTYPE_p_CMenuSellYuanBaoProcess);
  }
  
  (arg1)->GetAllTBMoneyYBT();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuSellYuanBaoProcess_SetEditBoxColor(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSellYuanBaoProcess *arg1 = (CMenuSellYuanBaoProcess *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned int arg3 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSellYuanBaoProcess,0))){
    SWIG_fail_ptr("CMenuSellYuanBaoProcess_SetEditBoxColor",1,SWIGTYPE_p_CMenuSellYuanBaoProcess);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (unsigned int)lua_tonumber(L, 3);
  (arg1)->SetEditBoxColor((char const *)arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuSellYuanBaoProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSellYuanBaoProcess *result = 0 ;
  
  result = (CMenuSellYuanBaoProcess *)new CMenuSellYuanBaoProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuSellYuanBaoProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuSellYuanBaoProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSellYuanBaoProcess *arg1 = (CMenuSellYuanBaoProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuSellYuanBaoProcess,0))){
    SWIG_fail_ptr("delete_CMenuSellYuanBaoProcess",1,SWIGTYPE_p_CMenuSellYuanBaoProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuSellYuanBaoProcess(void *obj) {
CMenuSellYuanBaoProcess *arg1 = (CMenuSellYuanBaoProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuSellYuanBaoProcess_methods[] = {
    {"OpenSellYBMenuChoice", _wrap_CMenuSellYuanBaoProcess_OpenSellYBMenuChoice}, 
    {"OpenChangeYBSelect", _wrap_CMenuSellYuanBaoProcess_OpenChangeYBSelect}, 
    {"OpenExchangeYBYBT", _wrap_CMenuSellYuanBaoProcess_OpenExchangeYBYBT}, 
    {"CloseSellYuanBao", _wrap_CMenuSellYuanBaoProcess_CloseSellYuanBao}, 
    {"CheckYBTAmount", _wrap_CMenuSellYuanBaoProcess_CheckYBTAmount}, 
    {"ConfirmChangeYBYBT", _wrap_CMenuSellYuanBaoProcess_ConfirmChangeYBYBT}, 
    {"InitStartPos", _wrap_CMenuSellYuanBaoProcess_InitStartPos}, 
    {"OpenSellYBBuySell", _wrap_CMenuSellYuanBaoProcess_OpenSellYBBuySell}, 
    {"PageUpAndDown", _wrap_CMenuSellYuanBaoProcess_PageUpAndDown}, 
    {"ConfirmSellYB", _wrap_CMenuSellYuanBaoProcess_ConfirmSellYB}, 
    {"SetConfirmBoxText", _wrap_CMenuSellYuanBaoProcess_SetConfirmBoxText}, 
    {"SelectBuyYBT", _wrap_CMenuSellYuanBaoProcess_SelectBuyYBT}, 
    {"ConfirmBuyYB", _wrap_CMenuSellYuanBaoProcess_ConfirmBuyYB}, 
    {"DisplayBuyYBConfirmText", _wrap_CMenuSellYuanBaoProcess_DisplayBuyYBConfirmText}, 
    {"ResetSelectBuyYBT", _wrap_CMenuSellYuanBaoProcess_ResetSelectBuyYBT}, 
    {"GetSellYBTempBank", _wrap_CMenuSellYuanBaoProcess_GetSellYBTempBank}, 
    {"GetAllTBMoneyYBT", _wrap_CMenuSellYuanBaoProcess_GetAllTBMoneyYBT}, 
    {"SetEditBoxColor", _wrap_CMenuSellYuanBaoProcess_SetEditBoxColor}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuSellYuanBaoProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuSellYuanBaoProcess_bases[] = {0};
swig_lua_class _wrap_class_CMenuSellYuanBaoProcess = { "CMenuSellYuanBaoProcess", &SWIGTYPE_p_CMenuSellYuanBaoProcess,_wrap_new_CMenuSellYuanBaoProcess, swig_delete_CMenuSellYuanBaoProcess, swig_CMenuSellYuanBaoProcess_methods, swig_CMenuSellYuanBaoProcess_attributes, swig_CMenuSellYuanBaoProcess_bases };

static int _wrap_CMenuTargetEquipProcess_RequestTargetEquip(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTargetEquipProcess *arg1 = (CMenuTargetEquipProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTargetEquipProcess,0))){
    SWIG_fail_ptr("CMenuTargetEquipProcess_RequestTargetEquip",1,SWIGTYPE_p_CMenuTargetEquipProcess);
  }
  
  (arg1)->RequestTargetEquip();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTargetEquipProcess_FreeTargetEquip(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTargetEquipProcess *arg1 = (CMenuTargetEquipProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTargetEquipProcess,0))){
    SWIG_fail_ptr("CMenuTargetEquipProcess_FreeTargetEquip",1,SWIGTYPE_p_CMenuTargetEquipProcess);
  }
  
  (arg1)->FreeTargetEquip();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTargetEquipProcess_UpdateTargetEquipDetail(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTargetEquipProcess *arg1 = (CMenuTargetEquipProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTargetEquipProcess,0))){
    SWIG_fail_ptr("CMenuTargetEquipProcess_UpdateTargetEquipDetail",1,SWIGTYPE_p_CMenuTargetEquipProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->UpdateTargetEquipDetail(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuTargetEquipProcess_HasTargetEquip(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTargetEquipProcess *arg1 = (CMenuTargetEquipProcess *) 0 ;
  int arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTargetEquipProcess,0))){
    SWIG_fail_ptr("CMenuTargetEquipProcess_HasTargetEquip",1,SWIGTYPE_p_CMenuTargetEquipProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  result = (bool)(arg1)->HasTargetEquip(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuTargetEquipProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTargetEquipProcess *result = 0 ;
  
  result = (CMenuTargetEquipProcess *)new CMenuTargetEquipProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuTargetEquipProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuTargetEquipProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTargetEquipProcess *arg1 = (CMenuTargetEquipProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuTargetEquipProcess,0))){
    SWIG_fail_ptr("delete_CMenuTargetEquipProcess",1,SWIGTYPE_p_CMenuTargetEquipProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuTargetEquipProcess(void *obj) {
CMenuTargetEquipProcess *arg1 = (CMenuTargetEquipProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuTargetEquipProcess_methods[] = {
    {"RequestTargetEquip", _wrap_CMenuTargetEquipProcess_RequestTargetEquip}, 
    {"FreeTargetEquip", _wrap_CMenuTargetEquipProcess_FreeTargetEquip}, 
    {"UpdateTargetEquipDetail", _wrap_CMenuTargetEquipProcess_UpdateTargetEquipDetail}, 
    {"HasTargetEquip", _wrap_CMenuTargetEquipProcess_HasTargetEquip}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuTargetEquipProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuTargetEquipProcess_bases[] = {0};
swig_lua_class _wrap_class_CMenuTargetEquipProcess = { "CMenuTargetEquipProcess", &SWIGTYPE_p_CMenuTargetEquipProcess,_wrap_new_CMenuTargetEquipProcess, swig_delete_CMenuTargetEquipProcess, swig_CMenuTargetEquipProcess_methods, swig_CMenuTargetEquipProcess_attributes, swig_CMenuTargetEquipProcess_bases };

static int _wrap_CRelationSystemProcess_SetSiblingTitlePrefix(lua_State* L) {
  int SWIG_arg = -1;
  CRelationSystemProcess *arg1 = (CRelationSystemProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CRelationSystemProcess,0))){
    SWIG_fail_ptr("CRelationSystemProcess_SetSiblingTitlePrefix",1,SWIGTYPE_p_CRelationSystemProcess);
  }
  
  (arg1)->SetSiblingTitlePrefix();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CRelationSystemProcess_SetSiblingTitleSuffix(lua_State* L) {
  int SWIG_arg = -1;
  CRelationSystemProcess *arg1 = (CRelationSystemProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CRelationSystemProcess,0))){
    SWIG_fail_ptr("CRelationSystemProcess_SetSiblingTitleSuffix",1,SWIGTYPE_p_CRelationSystemProcess);
  }
  
  (arg1)->SetSiblingTitleSuffix();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CRelationSystemProcess_ChooseTimeScroll(lua_State* L) {
  int SWIG_arg = -1;
  CRelationSystemProcess *arg1 = (CRelationSystemProcess *) 0 ;
  UInt16 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CRelationSystemProcess,0))){
    SWIG_fail_ptr("CRelationSystemProcess_ChooseTimeScroll",1,SWIGTYPE_p_CRelationSystemProcess);
  }
  
  arg2 = (UInt16)lua_tonumber(L, 2);
  (arg1)->ChooseTimeScroll(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CRelationSystemProcess_ShowChooseTime(lua_State* L) {
  int SWIG_arg = -1;
  CRelationSystemProcess *arg1 = (CRelationSystemProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CRelationSystemProcess,0))){
    SWIG_fail_ptr("CRelationSystemProcess_ShowChooseTime",1,SWIGTYPE_p_CRelationSystemProcess);
  }
  
  (arg1)->ShowChooseTime();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CRelationSystemProcess_SelectChooseTime(lua_State* L) {
  int SWIG_arg = -1;
  CRelationSystemProcess *arg1 = (CRelationSystemProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CRelationSystemProcess,0))){
    SWIG_fail_ptr("CRelationSystemProcess_SelectChooseTime",1,SWIGTYPE_p_CRelationSystemProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SelectChooseTime(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CRelationSystemProcess_EstablishChooseTime(lua_State* L) {
  int SWIG_arg = -1;
  CRelationSystemProcess *arg1 = (CRelationSystemProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CRelationSystemProcess,0))){
    SWIG_fail_ptr("CRelationSystemProcess_EstablishChooseTime",1,SWIGTYPE_p_CRelationSystemProcess);
  }
  
  (arg1)->EstablishChooseTime();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CRelationSystemProcess(lua_State* L) {
  int SWIG_arg = -1;
  CRelationSystemProcess *result = 0 ;
  
  result = (CRelationSystemProcess *)new CRelationSystemProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CRelationSystemProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CRelationSystemProcess(lua_State* L) {
  int SWIG_arg = -1;
  CRelationSystemProcess *arg1 = (CRelationSystemProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CRelationSystemProcess,0))){
    SWIG_fail_ptr("delete_CRelationSystemProcess",1,SWIGTYPE_p_CRelationSystemProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CRelationSystemProcess(void *obj) {
CRelationSystemProcess *arg1 = (CRelationSystemProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CRelationSystemProcess_methods[] = {
    {"SetSiblingTitlePrefix", _wrap_CRelationSystemProcess_SetSiblingTitlePrefix}, 
    {"SetSiblingTitleSuffix", _wrap_CRelationSystemProcess_SetSiblingTitleSuffix}, 
    {"ChooseTimeScroll", _wrap_CRelationSystemProcess_ChooseTimeScroll}, 
    {"ShowChooseTime", _wrap_CRelationSystemProcess_ShowChooseTime}, 
    {"SelectChooseTime", _wrap_CRelationSystemProcess_SelectChooseTime}, 
    {"EstablishChooseTime", _wrap_CRelationSystemProcess_EstablishChooseTime}, 
    {0,0}
};
static swig_lua_attribute swig_CRelationSystemProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CRelationSystemProcess_bases[] = {0};
swig_lua_class _wrap_class_CRelationSystemProcess = { "CRelationSystemProcess", &SWIGTYPE_p_CRelationSystemProcess,_wrap_new_CRelationSystemProcess, swig_delete_CRelationSystemProcess, swig_CRelationSystemProcess_methods, swig_CRelationSystemProcess_attributes, swig_CRelationSystemProcess_bases };

static int _wrap_CWantedProcess_ClearAllWanted(lua_State* L) {
  int SWIG_arg = -1;
  CWantedProcess *arg1 = (CWantedProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CWantedProcess,0))){
    SWIG_fail_ptr("CWantedProcess_ClearAllWanted",1,SWIGTYPE_p_CWantedProcess);
  }
  
  (arg1)->ClearAllWanted();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CWantedProcess_SelectWanted(lua_State* L) {
  int SWIG_arg = -1;
  CWantedProcess *arg1 = (CWantedProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CWantedProcess,0))){
    SWIG_fail_ptr("CWantedProcess_SelectWanted",1,SWIGTYPE_p_CWantedProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SelectWanted(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CWantedProcess_WantedScroll(lua_State* L) {
  int SWIG_arg = -1;
  CWantedProcess *arg1 = (CWantedProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CWantedProcess,0))){
    SWIG_fail_ptr("CWantedProcess_WantedScroll",1,SWIGTYPE_p_CWantedProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->WantedScroll(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CWantedProcess_SelectWantedClass(lua_State* L) {
  int SWIG_arg = -1;
  CWantedProcess *arg1 = (CWantedProcess *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CWantedProcess,0))){
    SWIG_fail_ptr("CWantedProcess_SelectWantedClass",1,SWIGTYPE_p_CWantedProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SelectWantedClass(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CWantedProcess_RequestWantedReward(lua_State* L) {
  int SWIG_arg = -1;
  CWantedProcess *arg1 = (CWantedProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CWantedProcess,0))){
    SWIG_fail_ptr("CWantedProcess_RequestWantedReward",1,SWIGTYPE_p_CWantedProcess);
  }
  
  (arg1)->RequestWantedReward();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CWantedProcess_WantedReward(lua_State* L) {
  int SWIG_arg = -1;
  CWantedProcess *arg1 = (CWantedProcess *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CWantedProcess,0))){
    SWIG_fail_ptr("CWantedProcess_WantedReward",1,SWIGTYPE_p_CWantedProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->WantedReward(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CWantedProcess_WantedDetail(lua_State* L) {
  int SWIG_arg = -1;
  CWantedProcess *arg1 = (CWantedProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CWantedProcess,0))){
    SWIG_fail_ptr("CWantedProcess_WantedDetail",1,SWIGTYPE_p_CWantedProcess);
  }
  
  (arg1)->WantedDetail();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CWantedProcess_WantedJailDelivery(lua_State* L) {
  int SWIG_arg = -1;
  CWantedProcess *arg1 = (CWantedProcess *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CWantedProcess,0))){
    SWIG_fail_ptr("CWantedProcess_WantedJailDelivery",1,SWIGTYPE_p_CWantedProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->WantedJailDelivery(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CWantedProcess_WantedBail(lua_State* L) {
  int SWIG_arg = -1;
  CWantedProcess *arg1 = (CWantedProcess *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CWantedProcess,0))){
    SWIG_fail_ptr("CWantedProcess_WantedBail",1,SWIGTYPE_p_CWantedProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->WantedBail(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CWantedProcess_WantedTrace(lua_State* L) {
  int SWIG_arg = -1;
  CWantedProcess *arg1 = (CWantedProcess *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CWantedProcess,0))){
    SWIG_fail_ptr("CWantedProcess_WantedTrace",1,SWIGTYPE_p_CWantedProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->WantedTrace(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CWantedProcess(lua_State* L) {
  int SWIG_arg = -1;
  CWantedProcess *result = 0 ;
  
  result = (CWantedProcess *)new CWantedProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CWantedProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CWantedProcess(lua_State* L) {
  int SWIG_arg = -1;
  CWantedProcess *arg1 = (CWantedProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CWantedProcess,0))){
    SWIG_fail_ptr("delete_CWantedProcess",1,SWIGTYPE_p_CWantedProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CWantedProcess(void *obj) {
CWantedProcess *arg1 = (CWantedProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CWantedProcess_methods[] = {
    {"ClearAllWanted", _wrap_CWantedProcess_ClearAllWanted}, 
    {"SelectWanted", _wrap_CWantedProcess_SelectWanted}, 
    {"WantedScroll", _wrap_CWantedProcess_WantedScroll}, 
    {"SelectWantedClass", _wrap_CWantedProcess_SelectWantedClass}, 
    {"RequestWantedReward", _wrap_CWantedProcess_RequestWantedReward}, 
    {"WantedReward", _wrap_CWantedProcess_WantedReward}, 
    {"WantedDetail", _wrap_CWantedProcess_WantedDetail}, 
    {"WantedJailDelivery", _wrap_CWantedProcess_WantedJailDelivery}, 
    {"WantedBail", _wrap_CWantedProcess_WantedBail}, 
    {"WantedTrace", _wrap_CWantedProcess_WantedTrace}, 
    {0,0}
};
static swig_lua_attribute swig_CWantedProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CWantedProcess_bases[] = {0};
swig_lua_class _wrap_class_CWantedProcess = { "CWantedProcess", &SWIGTYPE_p_CWantedProcess,_wrap_new_CWantedProcess, swig_delete_CWantedProcess, swig_CWantedProcess_methods, swig_CWantedProcess_attributes, swig_CWantedProcess_bases };

static int _wrap_CGenerationProcess_SortListByLevel(lua_State* L) {
  int SWIG_arg = -1;
  CGenerationProcess *arg1 = (CGenerationProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CGenerationProcess,0))){
    SWIG_fail_ptr("CGenerationProcess_SortListByLevel",1,SWIGTYPE_p_CGenerationProcess);
  }
  
  (arg1)->SortListByLevel();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CGenerationProcess_SortListByClass(lua_State* L) {
  int SWIG_arg = -1;
  CGenerationProcess *arg1 = (CGenerationProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CGenerationProcess,0))){
    SWIG_fail_ptr("CGenerationProcess_SortListByClass",1,SWIGTYPE_p_CGenerationProcess);
  }
  
  (arg1)->SortListByClass();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CGenerationProcess_SortListByOffline(lua_State* L) {
  int SWIG_arg = -1;
  CGenerationProcess *arg1 = (CGenerationProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CGenerationProcess,0))){
    SWIG_fail_ptr("CGenerationProcess_SortListByOffline",1,SWIGTYPE_p_CGenerationProcess);
  }
  
  (arg1)->SortListByOffline();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CGenerationProcess_SortListByAccOrExp(lua_State* L) {
  int SWIG_arg = -1;
  CGenerationProcess *arg1 = (CGenerationProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CGenerationProcess,0))){
    SWIG_fail_ptr("CGenerationProcess_SortListByAccOrExp",1,SWIGTYPE_p_CGenerationProcess);
  }
  
  (arg1)->SortListByAccOrExp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CGenerationProcess_SortListByGiftOrHisAcc(lua_State* L) {
  int SWIG_arg = -1;
  CGenerationProcess *arg1 = (CGenerationProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CGenerationProcess,0))){
    SWIG_fail_ptr("CGenerationProcess_SortListByGiftOrHisAcc",1,SWIGTYPE_p_CGenerationProcess);
  }
  
  (arg1)->SortListByGiftOrHisAcc();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CGenerationProcess_GetSavedExp(lua_State* L) {
  int SWIG_arg = -1;
  CGenerationProcess *arg1 = (CGenerationProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CGenerationProcess,0))){
    SWIG_fail_ptr("CGenerationProcess_GetSavedExp",1,SWIGTYPE_p_CGenerationProcess);
  }
  
  (arg1)->GetSavedExp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CGenerationProcess_DisbandGeneration(lua_State* L) {
  int SWIG_arg = -1;
  CGenerationProcess *arg1 = (CGenerationProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CGenerationProcess,0))){
    SWIG_fail_ptr("CGenerationProcess_DisbandGeneration",1,SWIGTYPE_p_CGenerationProcess);
  }
  
  (arg1)->DisbandGeneration();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CGenerationProcess_RequestCreateGeneration(lua_State* L) {
  int SWIG_arg = -1;
  CGenerationProcess *arg1 = (CGenerationProcess *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CGenerationProcess,0))){
    SWIG_fail_ptr("CGenerationProcess_RequestCreateGeneration",1,SWIGTYPE_p_CGenerationProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->RequestCreateGeneration(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CGenerationProcess_RequestGenerationAns(lua_State* L) {
  int SWIG_arg = -1;
  CGenerationProcess *arg1 = (CGenerationProcess *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CGenerationProcess,0))){
    SWIG_fail_ptr("CGenerationProcess_RequestGenerationAns",1,SWIGTYPE_p_CGenerationProcess);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->RequestGenerationAns(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CGenerationProcess_ClearGenerationRequest(lua_State* L) {
  int SWIG_arg = -1;
  CGenerationProcess *arg1 = (CGenerationProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CGenerationProcess,0))){
    SWIG_fail_ptr("CGenerationProcess_ClearGenerationRequest",1,SWIGTYPE_p_CGenerationProcess);
  }
  
  (arg1)->ClearGenerationRequest();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CGenerationProcess_SystemDesc(lua_State* L) {
  int SWIG_arg = -1;
  CGenerationProcess *arg1 = (CGenerationProcess *) 0 ;
  UInt16 arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CGenerationProcess,0))){
    SWIG_fail_ptr("CGenerationProcess_SystemDesc",1,SWIGTYPE_p_CGenerationProcess);
  }
  
  arg2 = (UInt16)lua_tonumber(L, 2);
  (arg1)->SystemDesc(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CGenerationProcess_UpdateGeneration(lua_State* L) {
  int SWIG_arg = -1;
  CGenerationProcess *arg1 = (CGenerationProcess *) 0 ;
  bool arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CGenerationProcess,0))){
    SWIG_fail_ptr("CGenerationProcess_UpdateGeneration",1,SWIGTYPE_p_CGenerationProcess);
  }
  
  arg2 = (bool)lua_toboolean(L, 2);
  (arg1)->UpdateGeneration(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CGenerationProcess_UpdateDisbandPanel(lua_State* L) {
  int SWIG_arg = -1;
  CGenerationProcess *arg1 = (CGenerationProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CGenerationProcess,0))){
    SWIG_fail_ptr("CGenerationProcess_UpdateDisbandPanel",1,SWIGTYPE_p_CGenerationProcess);
  }
  
  (arg1)->UpdateDisbandPanel();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CGenerationProcess_UpDateRequestPanel(lua_State* L) {
  int SWIG_arg = -1;
  CGenerationProcess *arg1 = (CGenerationProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CGenerationProcess,0))){
    SWIG_fail_ptr("CGenerationProcess_UpDateRequestPanel",1,SWIGTYPE_p_CGenerationProcess);
  }
  
  (arg1)->UpDateRequestPanel();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CGenerationProcess_ShowGenerations(lua_State* L) {
  int SWIG_arg = -1;
  CGenerationProcess *arg1 = (CGenerationProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CGenerationProcess,0))){
    SWIG_fail_ptr("CGenerationProcess_ShowGenerations",1,SWIGTYPE_p_CGenerationProcess);
  }
  
  (arg1)->ShowGenerations();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CGenerationProcess_SelectGeneration(lua_State* L) {
  int SWIG_arg = -1;
  CGenerationProcess *arg1 = (CGenerationProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CGenerationProcess,0))){
    SWIG_fail_ptr("CGenerationProcess_SelectGeneration",1,SWIGTYPE_p_CGenerationProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SelectGeneration(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CGenerationProcess_GenerationScroll(lua_State* L) {
  int SWIG_arg = -1;
  CGenerationProcess *arg1 = (CGenerationProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CGenerationProcess,0))){
    SWIG_fail_ptr("CGenerationProcess_GenerationScroll",1,SWIGTYPE_p_CGenerationProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->GenerationScroll(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CGenerationProcess_HideAllPanel(lua_State* L) {
  int SWIG_arg = -1;
  CGenerationProcess *arg1 = (CGenerationProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CGenerationProcess,0))){
    SWIG_fail_ptr("CGenerationProcess_HideAllPanel",1,SWIGTYPE_p_CGenerationProcess);
  }
  
  (arg1)->HideAllPanel();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CGenerationProcess_ShowAllPanel(lua_State* L) {
  int SWIG_arg = -1;
  CGenerationProcess *arg1 = (CGenerationProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CGenerationProcess,0))){
    SWIG_fail_ptr("CGenerationProcess_ShowAllPanel",1,SWIGTYPE_p_CGenerationProcess);
  }
  
  (arg1)->ShowAllPanel();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CGenerationProcess_OpenGenCharDetail(lua_State* L) {
  int SWIG_arg = -1;
  CGenerationProcess *arg1 = (CGenerationProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CGenerationProcess,0))){
    SWIG_fail_ptr("CGenerationProcess_OpenGenCharDetail",1,SWIGTYPE_p_CGenerationProcess);
  }
  
  (arg1)->OpenGenCharDetail();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CGenerationProcess(lua_State* L) {
  int SWIG_arg = -1;
  CGenerationProcess *result = 0 ;
  
  result = (CGenerationProcess *)new CGenerationProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CGenerationProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CGenerationProcess(lua_State* L) {
  int SWIG_arg = -1;
  CGenerationProcess *arg1 = (CGenerationProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CGenerationProcess,0))){
    SWIG_fail_ptr("delete_CGenerationProcess",1,SWIGTYPE_p_CGenerationProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CGenerationProcess(void *obj) {
CGenerationProcess *arg1 = (CGenerationProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CGenerationProcess_methods[] = {
    {"SortListByLevel", _wrap_CGenerationProcess_SortListByLevel}, 
    {"SortListByClass", _wrap_CGenerationProcess_SortListByClass}, 
    {"SortListByOffline", _wrap_CGenerationProcess_SortListByOffline}, 
    {"SortListByAccOrExp", _wrap_CGenerationProcess_SortListByAccOrExp}, 
    {"SortListByGiftOrHisAcc", _wrap_CGenerationProcess_SortListByGiftOrHisAcc}, 
    {"GetSavedExp", _wrap_CGenerationProcess_GetSavedExp}, 
    {"DisbandGeneration", _wrap_CGenerationProcess_DisbandGeneration}, 
    {"RequestCreateGeneration", _wrap_CGenerationProcess_RequestCreateGeneration}, 
    {"RequestGenerationAns", _wrap_CGenerationProcess_RequestGenerationAns}, 
    {"ClearGenerationRequest", _wrap_CGenerationProcess_ClearGenerationRequest}, 
    {"SystemDesc", _wrap_CGenerationProcess_SystemDesc}, 
    {"UpdateGeneration", _wrap_CGenerationProcess_UpdateGeneration}, 
    {"UpdateDisbandPanel", _wrap_CGenerationProcess_UpdateDisbandPanel}, 
    {"UpDateRequestPanel", _wrap_CGenerationProcess_UpDateRequestPanel}, 
    {"ShowGenerations", _wrap_CGenerationProcess_ShowGenerations}, 
    {"SelectGeneration", _wrap_CGenerationProcess_SelectGeneration}, 
    {"GenerationScroll", _wrap_CGenerationProcess_GenerationScroll}, 
    {"HideAllPanel", _wrap_CGenerationProcess_HideAllPanel}, 
    {"ShowAllPanel", _wrap_CGenerationProcess_ShowAllPanel}, 
    {"OpenGenCharDetail", _wrap_CGenerationProcess_OpenGenCharDetail}, 
    {0,0}
};
static swig_lua_attribute swig_CGenerationProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CGenerationProcess_bases[] = {0};
swig_lua_class _wrap_class_CGenerationProcess = { "CGenerationProcess", &SWIGTYPE_p_CGenerationProcess,_wrap_new_CGenerationProcess, swig_delete_CGenerationProcess, swig_CGenerationProcess_methods, swig_CGenerationProcess_attributes, swig_CGenerationProcess_bases };

static int _wrap_CMenuPartnerCultivationUpProcess_OpenPartnerCultivationUp(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerCultivationUpProcess *arg1 = (CMenuPartnerCultivationUpProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerCultivationUpProcess,0))){
    SWIG_fail_ptr("CMenuPartnerCultivationUpProcess_OpenPartnerCultivationUp",1,SWIGTYPE_p_CMenuPartnerCultivationUpProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->OpenPartnerCultivationUp(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerCultivationUpProcess_GetPartnerCultivationUpType(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerCultivationUpProcess *arg1 = (CMenuPartnerCultivationUpProcess *) 0 ;
  int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerCultivationUpProcess,0))){
    SWIG_fail_ptr("CMenuPartnerCultivationUpProcess_GetPartnerCultivationUpType",1,SWIGTYPE_p_CMenuPartnerCultivationUpProcess);
  }
  
  result = (int)(arg1)->GetPartnerCultivationUpType();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerCultivationUpProcess_ResetPartnerCultivationUp(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerCultivationUpProcess *arg1 = (CMenuPartnerCultivationUpProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerCultivationUpProcess,0))){
    SWIG_fail_ptr("CMenuPartnerCultivationUpProcess_ResetPartnerCultivationUp",1,SWIGTYPE_p_CMenuPartnerCultivationUpProcess);
  }
  
  (arg1)->ResetPartnerCultivationUp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerCultivationUpProcess_ClosePartnerCultivationUp(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerCultivationUpProcess *arg1 = (CMenuPartnerCultivationUpProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerCultivationUpProcess,0))){
    SWIG_fail_ptr("CMenuPartnerCultivationUpProcess_ClosePartnerCultivationUp",1,SWIGTYPE_p_CMenuPartnerCultivationUpProcess);
  }
  
  (arg1)->ClosePartnerCultivationUp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerCultivationUpProcess_SetSrcPartner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerCultivationUpProcess *arg1 = (CMenuPartnerCultivationUpProcess *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerCultivationUpProcess,0))){
    SWIG_fail_ptr("CMenuPartnerCultivationUpProcess_SetSrcPartner",1,SWIGTYPE_p_CMenuPartnerCultivationUpProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetSrcPartner(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerCultivationUpProcess_SetDestPartner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerCultivationUpProcess *arg1 = (CMenuPartnerCultivationUpProcess *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerCultivationUpProcess,0))){
    SWIG_fail_ptr("CMenuPartnerCultivationUpProcess_SetDestPartner",1,SWIGTYPE_p_CMenuPartnerCultivationUpProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->SetDestPartner(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerCultivationUpProcess_IsSuitableSrcPartner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerCultivationUpProcess *arg1 = (CMenuPartnerCultivationUpProcess *) 0 ;
  unsigned int arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerCultivationUpProcess,0))){
    SWIG_fail_ptr("CMenuPartnerCultivationUpProcess_IsSuitableSrcPartner",1,SWIGTYPE_p_CMenuPartnerCultivationUpProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  result = (bool)(arg1)->IsSuitableSrcPartner(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerCultivationUpProcess_IsSuitableDestPartner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerCultivationUpProcess *arg1 = (CMenuPartnerCultivationUpProcess *) 0 ;
  unsigned int arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerCultivationUpProcess,0))){
    SWIG_fail_ptr("CMenuPartnerCultivationUpProcess_IsSuitableDestPartner",1,SWIGTYPE_p_CMenuPartnerCultivationUpProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  result = (bool)(arg1)->IsSuitableDestPartner(arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerCultivationUpProcess_PartnerCultivationUpByPartner(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerCultivationUpProcess *arg1 = (CMenuPartnerCultivationUpProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerCultivationUpProcess,0))){
    SWIG_fail_ptr("CMenuPartnerCultivationUpProcess_PartnerCultivationUpByPartner",1,SWIGTYPE_p_CMenuPartnerCultivationUpProcess);
  }
  
  (arg1)->PartnerCultivationUpByPartner();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CMenuPartnerCultivationUpProcess_PartnerCultivationUpByItem(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerCultivationUpProcess *arg1 = (CMenuPartnerCultivationUpProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerCultivationUpProcess,0))){
    SWIG_fail_ptr("CMenuPartnerCultivationUpProcess_PartnerCultivationUpByItem",1,SWIGTYPE_p_CMenuPartnerCultivationUpProcess);
  }
  
  (arg1)->PartnerCultivationUpByItem();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CMenuPartnerCultivationUpProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerCultivationUpProcess *result = 0 ;
  
  result = (CMenuPartnerCultivationUpProcess *)new CMenuPartnerCultivationUpProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuPartnerCultivationUpProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CMenuPartnerCultivationUpProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerCultivationUpProcess *arg1 = (CMenuPartnerCultivationUpProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CMenuPartnerCultivationUpProcess,0))){
    SWIG_fail_ptr("delete_CMenuPartnerCultivationUpProcess",1,SWIGTYPE_p_CMenuPartnerCultivationUpProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CMenuPartnerCultivationUpProcess(void *obj) {
CMenuPartnerCultivationUpProcess *arg1 = (CMenuPartnerCultivationUpProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CMenuPartnerCultivationUpProcess_methods[] = {
    {"OpenPartnerCultivationUp", _wrap_CMenuPartnerCultivationUpProcess_OpenPartnerCultivationUp}, 
    {"GetPartnerCultivationUpType", _wrap_CMenuPartnerCultivationUpProcess_GetPartnerCultivationUpType}, 
    {"ResetPartnerCultivationUp", _wrap_CMenuPartnerCultivationUpProcess_ResetPartnerCultivationUp}, 
    {"ClosePartnerCultivationUp", _wrap_CMenuPartnerCultivationUpProcess_ClosePartnerCultivationUp}, 
    {"SetSrcPartner", _wrap_CMenuPartnerCultivationUpProcess_SetSrcPartner}, 
    {"SetDestPartner", _wrap_CMenuPartnerCultivationUpProcess_SetDestPartner}, 
    {"IsSuitableSrcPartner", _wrap_CMenuPartnerCultivationUpProcess_IsSuitableSrcPartner}, 
    {"IsSuitableDestPartner", _wrap_CMenuPartnerCultivationUpProcess_IsSuitableDestPartner}, 
    {"PartnerCultivationUpByPartner", _wrap_CMenuPartnerCultivationUpProcess_PartnerCultivationUpByPartner}, 
    {"PartnerCultivationUpByItem", _wrap_CMenuPartnerCultivationUpProcess_PartnerCultivationUpByItem}, 
    {0,0}
};
static swig_lua_attribute swig_CMenuPartnerCultivationUpProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CMenuPartnerCultivationUpProcess_bases[] = {0};
swig_lua_class _wrap_class_CMenuPartnerCultivationUpProcess = { "CMenuPartnerCultivationUpProcess", &SWIGTYPE_p_CMenuPartnerCultivationUpProcess,_wrap_new_CMenuPartnerCultivationUpProcess, swig_delete_CMenuPartnerCultivationUpProcess, swig_CMenuPartnerCultivationUpProcess_methods, swig_CMenuPartnerCultivationUpProcess_attributes, swig_CMenuPartnerCultivationUpProcess_bases };

static int _wrap_CAccShopProcess_ShowAccShop(lua_State* L) {
  int SWIG_arg = -1;
  CAccShopProcess *arg1 = (CAccShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CAccShopProcess,0))){
    SWIG_fail_ptr("CAccShopProcess_ShowAccShop",1,SWIGTYPE_p_CAccShopProcess);
  }
  
  (arg1)->ShowAccShop();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CAccShopProcess_SelectAccShopItem(lua_State* L) {
  int SWIG_arg = -1;
  CAccShopProcess *arg1 = (CAccShopProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CAccShopProcess,0))){
    SWIG_fail_ptr("CAccShopProcess_SelectAccShopItem",1,SWIGTYPE_p_CAccShopProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SelectAccShopItem(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CAccShopProcess_AccShopPrevPage(lua_State* L) {
  int SWIG_arg = -1;
  CAccShopProcess *arg1 = (CAccShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CAccShopProcess,0))){
    SWIG_fail_ptr("CAccShopProcess_AccShopPrevPage",1,SWIGTYPE_p_CAccShopProcess);
  }
  
  (arg1)->AccShopPrevPage();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CAccShopProcess_AccShopNextPage(lua_State* L) {
  int SWIG_arg = -1;
  CAccShopProcess *arg1 = (CAccShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CAccShopProcess,0))){
    SWIG_fail_ptr("CAccShopProcess_AccShopNextPage",1,SWIGTYPE_p_CAccShopProcess);
  }
  
  (arg1)->AccShopNextPage();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CAccShopProcess_AccShopBuyItem(lua_State* L) {
  int SWIG_arg = -1;
  CAccShopProcess *arg1 = (CAccShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CAccShopProcess,0))){
    SWIG_fail_ptr("CAccShopProcess_AccShopBuyItem",1,SWIGTYPE_p_CAccShopProcess);
  }
  
  (arg1)->AccShopBuyItem();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CAccShopProcess_OnMouseMoveOver(lua_State* L) {
  int SWIG_arg = -1;
  CAccShopProcess *arg1 = (CAccShopProcess *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CAccShopProcess,0))){
    SWIG_fail_ptr("CAccShopProcess_OnMouseMoveOver",1,SWIGTYPE_p_CAccShopProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->OnMouseMoveOver(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CAccShopProcess(lua_State* L) {
  int SWIG_arg = -1;
  CAccShopProcess *result = 0 ;
  
  result = (CAccShopProcess *)new CAccShopProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CAccShopProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CAccShopProcess(lua_State* L) {
  int SWIG_arg = -1;
  CAccShopProcess *arg1 = (CAccShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CAccShopProcess,0))){
    SWIG_fail_ptr("delete_CAccShopProcess",1,SWIGTYPE_p_CAccShopProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CAccShopProcess(void *obj) {
CAccShopProcess *arg1 = (CAccShopProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CAccShopProcess_methods[] = {
    {"ShowAccShop", _wrap_CAccShopProcess_ShowAccShop}, 
    {"SelectAccShopItem", _wrap_CAccShopProcess_SelectAccShopItem}, 
    {"AccShopPrevPage", _wrap_CAccShopProcess_AccShopPrevPage}, 
    {"AccShopNextPage", _wrap_CAccShopProcess_AccShopNextPage}, 
    {"AccShopBuyItem", _wrap_CAccShopProcess_AccShopBuyItem}, 
    {"OnMouseMoveOver", _wrap_CAccShopProcess_OnMouseMoveOver}, 
    {0,0}
};
static swig_lua_attribute swig_CAccShopProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CAccShopProcess_bases[] = {0};
swig_lua_class _wrap_class_CAccShopProcess = { "CAccShopProcess", &SWIGTYPE_p_CAccShopProcess,_wrap_new_CAccShopProcess, swig_delete_CAccShopProcess, swig_CAccShopProcess_methods, swig_CAccShopProcess_attributes, swig_CAccShopProcess_bases };

static int _wrap_CPointsShopProcess_ShowPointsShop(lua_State* L) {
  int SWIG_arg = -1;
  CPointsShopProcess *arg1 = (CPointsShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CPointsShopProcess,0))){
    SWIG_fail_ptr("CPointsShopProcess_ShowPointsShop",1,SWIGTYPE_p_CPointsShopProcess);
  }
  
  (arg1)->ShowPointsShop();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CPointsShopProcess_SelectPointsShopItem(lua_State* L) {
  int SWIG_arg = -1;
  CPointsShopProcess *arg1 = (CPointsShopProcess *) 0 ;
  int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CPointsShopProcess,0))){
    SWIG_fail_ptr("CPointsShopProcess_SelectPointsShopItem",1,SWIGTYPE_p_CPointsShopProcess);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  (arg1)->SelectPointsShopItem(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CPointsShopProcess_PointsShopPrevPage(lua_State* L) {
  int SWIG_arg = -1;
  CPointsShopProcess *arg1 = (CPointsShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CPointsShopProcess,0))){
    SWIG_fail_ptr("CPointsShopProcess_PointsShopPrevPage",1,SWIGTYPE_p_CPointsShopProcess);
  }
  
  (arg1)->PointsShopPrevPage();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CPointsShopProcess_PointsShopNextPage(lua_State* L) {
  int SWIG_arg = -1;
  CPointsShopProcess *arg1 = (CPointsShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CPointsShopProcess,0))){
    SWIG_fail_ptr("CPointsShopProcess_PointsShopNextPage",1,SWIGTYPE_p_CPointsShopProcess);
  }
  
  (arg1)->PointsShopNextPage();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CPointsShopProcess_PointsShopBuyItem(lua_State* L) {
  int SWIG_arg = -1;
  CPointsShopProcess *arg1 = (CPointsShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CPointsShopProcess,0))){
    SWIG_fail_ptr("CPointsShopProcess_PointsShopBuyItem",1,SWIGTYPE_p_CPointsShopProcess);
  }
  
  (arg1)->PointsShopBuyItem();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CPointsShopProcess_OnMouseMoveOver(lua_State* L) {
  int SWIG_arg = -1;
  CPointsShopProcess *arg1 = (CPointsShopProcess *) 0 ;
  unsigned int arg2 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CPointsShopProcess,0))){
    SWIG_fail_ptr("CPointsShopProcess_OnMouseMoveOver",1,SWIGTYPE_p_CPointsShopProcess);
  }
  
  arg2 = (unsigned int)lua_tonumber(L, 2);
  (arg1)->OnMouseMoveOver(arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_CPointsShopProcess(lua_State* L) {
  int SWIG_arg = -1;
  CPointsShopProcess *result = 0 ;
  
  result = (CPointsShopProcess *)new CPointsShopProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CPointsShopProcess,1); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_delete_CPointsShopProcess(lua_State* L) {
  int SWIG_arg = -1;
  CPointsShopProcess *arg1 = (CPointsShopProcess *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_CPointsShopProcess,0))){
    SWIG_fail_ptr("delete_CPointsShopProcess",1,SWIGTYPE_p_CPointsShopProcess);
  }
  
  delete arg1;
  
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_CPointsShopProcess(void *obj) {
CPointsShopProcess *arg1 = (CPointsShopProcess *) obj;
delete arg1;
}
static swig_lua_method swig_CPointsShopProcess_methods[] = {
    {"ShowPointsShop", _wrap_CPointsShopProcess_ShowPointsShop}, 
    {"SelectPointsShopItem", _wrap_CPointsShopProcess_SelectPointsShopItem}, 
    {"PointsShopPrevPage", _wrap_CPointsShopProcess_PointsShopPrevPage}, 
    {"PointsShopNextPage", _wrap_CPointsShopProcess_PointsShopNextPage}, 
    {"PointsShopBuyItem", _wrap_CPointsShopProcess_PointsShopBuyItem}, 
    {"OnMouseMoveOver", _wrap_CPointsShopProcess_OnMouseMoveOver}, 
    {0,0}
};
static swig_lua_attribute swig_CPointsShopProcess_attributes[] = {
    {0,0,0}
};
static swig_lua_class *swig_CPointsShopProcess_bases[] = {0};
swig_lua_class _wrap_class_CPointsShopProcess = { "CPointsShopProcess", &SWIGTYPE_p_CPointsShopProcess,_wrap_new_CPointsShopProcess, swig_delete_CPointsShopProcess, swig_CPointsShopProcess_methods, swig_CPointsShopProcess_attributes, swig_CPointsShopProcess_bases };

static int _wrap_GetPlayerPos(lua_State* L) {
  int SWIG_arg = -1;
  int *arg1 = 0 ;
  int *arg2 = 0 ;
  
  if(!lua_isuserdata(L,1)) SWIG_fail_arg(1);
  if(!lua_isuserdata(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_int,0))){
    SWIG_fail_ptr("GetPlayerPos",1,SWIGTYPE_p_int);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_int,0))){
    SWIG_fail_ptr("GetPlayerPos",2,SWIGTYPE_p_int);
  }
  
  GetPlayerPos(*arg1,*arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetMapWidth(lua_State* L) {
  int SWIG_arg = -1;
  unsigned int result;
  
  result = (unsigned int)GetMapWidth();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetMapHeight(lua_State* L) {
  int SWIG_arg = -1;
  unsigned int result;
  
  result = (unsigned int)GetMapHeight();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_AddXMLFile2UIManger(lua_State* L) {
  int SWIG_arg = -1;
  char *arg1 = (char *) 0 ;
  
  if(!lua_isstring(L,1)) SWIG_fail_arg(1);
  arg1 = (char *)lua_tostring(L, 1);
  AddXMLFile2UIManger((char const *)arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UIMangerLoadUI(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *arg1 = (UIManager *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_UIManager,0))){
    SWIG_fail_ptr("UIMangerLoadUI",1,SWIGTYPE_p_UIManager);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  UIMangerLoadUI(arg1,(char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_OpenSubWindow(lua_State* L) {
  int SWIG_arg = -1;
  
  OpenSubWindow();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CloseSubWindow(lua_State* L) {
  int SWIG_arg = -1;
  
  CloseSubWindow();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PostQuitMessage(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  PostQuitMessage(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_OutputDebugStringA(lua_State* L) {
  int SWIG_arg = -1;
  char *arg1 = (char *) 0 ;
  
  if(!lua_isstring(L,1)) SWIG_fail_arg(1);
  arg1 = (char *)lua_tostring(L, 1);
  OutputDebugStringA((char const *)arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CheckShiftDown(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)CheckShiftDown();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_Div(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  int arg2 ;
  int result;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (int)lua_tonumber(L, 2);
  result = (int)Div(arg1,arg2);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_DivUInt32(lua_State* L) {
  int SWIG_arg = -1;
  unsigned int arg1 ;
  unsigned int arg2 ;
  unsigned int result;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  arg1 = (unsigned int)lua_tonumber(L, 1);
  arg2 = (unsigned int)lua_tonumber(L, 2);
  result = (unsigned int)DivUInt32(arg1,arg2);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LAnd(lua_State* L) {
  int SWIG_arg = -1;
  bool arg1 ;
  bool arg2 ;
  bool result;
  
  if(!lua_isboolean(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  arg1 = (bool)lua_toboolean(L, 1);
  arg2 = (bool)lua_toboolean(L, 2);
  result = (bool)LAnd(arg1,arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LOr(lua_State* L) {
  int SWIG_arg = -1;
  bool arg1 ;
  bool arg2 ;
  bool result;
  
  if(!lua_isboolean(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  arg1 = (bool)lua_toboolean(L, 1);
  arg2 = (bool)lua_toboolean(L, 2);
  result = (bool)LOr(arg1,arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LMod(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  int arg2 ;
  int result;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (int)lua_tonumber(L, 2);
  result = (int)LMod(arg1,arg2);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ChangeChannel(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  ChangeChannel(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ReceiveChannel(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  ReceiveChannel(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_RejectChannel(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  RejectChannel(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_InitChannelEnable(lua_State* L) {
  int SWIG_arg = -1;
  
  InitChannelEnable();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_IsChannelMsg(lua_State* L) {
  int SWIG_arg = -1;
  wchar_t *arg1 = (wchar_t *) 0 ;
  int arg2 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("IsChannelMsg",1,SWIGTYPE_p_wchar_t);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  result = (bool)IsChannelMsg((wchar_t const *)arg1,arg2);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_AddChatIconToPanel(lua_State* L) {
  int SWIG_arg = -1;
  
  AddChatIconToPanel();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_AddChatIconToEditLine(lua_State* L) {
  int SWIG_arg = -1;
  
  AddChatIconToEditLine();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ChangeEditLineColor(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  ChangeEditLineColor(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetLisentToChannel(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  bool result;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  result = (bool)GetLisentToChannel(arg1);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_SendPrivateMessageTo(lua_State* L) {
  int SWIG_arg = -1;
  wchar_t *arg1 = (wchar_t *) 0 ;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("SendPrivateMessageTo",1,SWIGTYPE_p_wchar_t);
  }
  
  SendPrivateMessageTo((wchar_t const *)arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_InitRecentChatListBox(lua_State* L) {
  int SWIG_arg = -1;
  
  InitRecentChatListBox();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PlayerChooseResult(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  PlayerChooseResult(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UpdateClockPanel(lua_State* L) {
  int SWIG_arg = -1;
  bool arg1 ;
  
  if(!lua_isboolean(L,1)) SWIG_fail_arg(1);
  arg1 = (bool)lua_toboolean(L, 1);
  UpdateClockPanel(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UpdateRightUpTimeInfo(lua_State* L) {
  int SWIG_arg = -1;
  
  UpdateRightUpTimeInfo();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetSubUIManager(lua_State* L) {
  int SWIG_arg = -1;
  UIManager *result = 0 ;
  
  result = (UIManager *)GetSubUIManager();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIManager,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetSkillProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSkillProcess *result = 0 ;
  
  result = (CMenuSkillProcess *)GetSkillProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuSkillProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetQuestLogProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestLogProcess *result = 0 ;
  
  result = (CMenuQuestLogProcess *)GetQuestLogProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuQuestLogProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetChatPool(lua_State* L) {
  int SWIG_arg = -1;
  ChatPool *result = 0 ;
  
  result = (ChatPool *)GetChatPool();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_ChatPool,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetPartnerProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerProcess *result = 0 ;
  
  result = (CMenuPartnerProcess *)GetPartnerProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuPartnerProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetGivenProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGivenProcess *result = 0 ;
  
  result = (CMenuGivenProcess *)GetGivenProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuGivenProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetItemProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuItemProcess *result = 0 ;
  
  result = (CMenuItemProcess *)GetItemProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuItemProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetBigMap(lua_State* L) {
  int SWIG_arg = -1;
  CBigMap *result = 0 ;
  
  result = (CBigMap *)GetBigMap();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CBigMap,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetMenuTargetProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTargetProcess *result = 0 ;
  
  result = (CMenuTargetProcess *)GetMenuTargetProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuTargetProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetMenuBuffIconProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuBuffIconProcess *result = 0 ;
  
  result = (CMenuBuffIconProcess *)GetMenuBuffIconProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuBuffIconProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetMenuSystemSetting(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSystemSetting *result = 0 ;
  
  result = (CMenuSystemSetting *)GetMenuSystemSetting();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuSystemSetting,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetMenuFriendProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuFriendProcess *result = 0 ;
  
  result = (CMenuFriendProcess *)GetMenuFriendProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuFriendProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetTradingProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTradingProcess *result = 0 ;
  
  result = (CMenuTradingProcess *)GetTradingProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuTradingProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetBankProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuBankService *result = 0 ;
  
  result = (CMenuBankService *)GetBankProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuBankService,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetMenuHelpProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHelpProcess *result = 0 ;
  
  result = (CMenuHelpProcess *)GetMenuHelpProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuHelpProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetOnlineShopProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuOnlineShopProcess *result = 0 ;
  
  result = (CMenuOnlineShopProcess *)GetOnlineShopProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuOnlineShopProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetMenuRankProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuRankProcess *result = 0 ;
  
  result = (CMenuRankProcess *)GetMenuRankProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuRankProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetMenuPetProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPetProcess *result = 0 ;
  
  result = (CMenuPetProcess *)GetMenuPetProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuPetProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetMixProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuMixProcess *result = 0 ;
  
  result = (CMenuMixProcess *)GetMixProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuMixProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetTitleProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTitleProcess *result = 0 ;
  
  result = (CMenuTitleProcess *)GetTitleProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuTitleProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetAntiHackProcess(lua_State* L) {
  int SWIG_arg = -1;
  CAntiHack *result = 0 ;
  
  result = (CAntiHack *)GetAntiHackProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CAntiHack,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetHawkerProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuHawkerProcess *result = 0 ;
  
  result = (CMenuHawkerProcess *)GetHawkerProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuHawkerProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetMenuGuildProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGuildProcess *result = 0 ;
  
  result = (CMenuGuildProcess *)GetMenuGuildProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuGuildProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetGiftBoxProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuGiftBox *result = 0 ;
  
  result = (CMenuGiftBox *)GetGiftBoxProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuGiftBox,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetQuestJournalProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuQuestJournal *result = 0 ;
  
  result = (CMenuQuestJournal *)GetQuestJournalProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuQuestJournal,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetWeaponsRankProcess(lua_State* L) {
  int SWIG_arg = -1;
  CWeaponsRank *result = 0 ;
  
  result = (CWeaponsRank *)GetWeaponsRankProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CWeaponsRank,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetTeamDescriptionProcess(lua_State* L) {
  int SWIG_arg = -1;
  CTeamDescription *result = 0 ;
  
  result = (CTeamDescription *)GetTeamDescriptionProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CTeamDescription,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetQuestionProcess(lua_State* L) {
  int SWIG_arg = -1;
  CQuestionProcess *result = 0 ;
  
  result = (CQuestionProcess *)GetQuestionProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CQuestionProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetWareHouseProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuWareHouseProcess *result = 0 ;
  
  result = (CMenuWareHouseProcess *)GetWareHouseProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuWareHouseProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetAutoWalkProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuAutoWalkProcess *result = 0 ;
  
  result = (CMenuAutoWalkProcess *)GetAutoWalkProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuAutoWalkProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetSellYBProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuSellYuanBaoProcess *result = 0 ;
  
  result = (CMenuSellYuanBaoProcess *)GetSellYBProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuSellYuanBaoProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetTargetEquipProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuTargetEquipProcess *result = 0 ;
  
  result = (CMenuTargetEquipProcess *)GetTargetEquipProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuTargetEquipProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetRelationSystemProcess(lua_State* L) {
  int SWIG_arg = -1;
  CRelationSystemProcess *result = 0 ;
  
  result = (CRelationSystemProcess *)GetRelationSystemProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CRelationSystemProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetWantedProcess(lua_State* L) {
  int SWIG_arg = -1;
  CWantedProcess *result = 0 ;
  
  result = (CWantedProcess *)GetWantedProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CWantedProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetGenerationProcess(lua_State* L) {
  int SWIG_arg = -1;
  CGenerationProcess *result = 0 ;
  
  result = (CGenerationProcess *)GetGenerationProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CGenerationProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetPartnerCultivationUpProcess(lua_State* L) {
  int SWIG_arg = -1;
  CMenuPartnerCultivationUpProcess *result = 0 ;
  
  result = (CMenuPartnerCultivationUpProcess *)GetPartnerCultivationUpProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CMenuPartnerCultivationUpProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetAccShopProcess(lua_State* L) {
  int SWIG_arg = -1;
  CAccShopProcess *result = 0 ;
  
  result = (CAccShopProcess *)GetAccShopProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CAccShopProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetPointsShopProcess(lua_State* L) {
  int SWIG_arg = -1;
  CPointsShopProcess *result = 0 ;
  
  result = (CPointsShopProcess *)GetPointsShopProcess();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_CPointsShopProcess,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BattleAction(lua_State* L) {
  int SWIG_arg = -1;
  
  BattleAction();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BattleSkill(lua_State* L) {
  int SWIG_arg = -1;
  
  BattleSkill();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BattleSpecial(lua_State* L) {
  int SWIG_arg = -1;
  
  BattleSpecial();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BattleItem(lua_State* L) {
  int SWIG_arg = -1;
  
  BattleItem();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BattleDefence(lua_State* L) {
  int SWIG_arg = -1;
  
  BattleDefence();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BattleFriend(lua_State* L) {
  int SWIG_arg = -1;
  
  BattleFriend();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BattleProtect(lua_State* L) {
  int SWIG_arg = -1;
  
  BattleProtect();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BattleCatch(lua_State* L) {
  int SWIG_arg = -1;
  
  BattleCatch();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BattleHelp(lua_State* L) {
  int SWIG_arg = -1;
  
  BattleHelp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BattleAuto(lua_State* L) {
  int SWIG_arg = -1;
  
  BattleAuto();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CancelAuto(lua_State* L) {
  int SWIG_arg = -1;
  
  CancelAuto();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BattleEscape(lua_State* L) {
  int SWIG_arg = -1;
  
  BattleEscape();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BattleJoin(lua_State* L) {
  int SWIG_arg = -1;
  
  BattleJoin();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BattleWatchLeave(lua_State* L) {
  int SWIG_arg = -1;
  
  BattleWatchLeave();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BBAttack(lua_State* L) {
  int SWIG_arg = -1;
  
  BBAttack();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BBTrade(lua_State* L) {
  int SWIG_arg = -1;
  
  BBTrade();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BBGive(lua_State* L) {
  int SWIG_arg = -1;
  
  BBGive();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BBParty(lua_State* L) {
  int SWIG_arg = -1;
  
  BBParty();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BBChar(lua_State* L) {
  int SWIG_arg = -1;
  
  BBChar();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BBFriend(lua_State* L) {
  int SWIG_arg = -1;
  
  BBFriend();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BBItem(lua_State* L) {
  int SWIG_arg = -1;
  
  BBItem();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BBSkill(lua_State* L) {
  int SWIG_arg = -1;
  
  BBSkill();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BBHousen(lua_State* L) {
  int SWIG_arg = -1;
  
  BBHousen();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BBMission(lua_State* L) {
  int SWIG_arg = -1;
  
  BBMission();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BBFriendShip(lua_State* L) {
  int SWIG_arg = -1;
  
  BBFriendShip();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BBEmotion(lua_State* L) {
  int SWIG_arg = -1;
  
  BBEmotion();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BBSystem(lua_State* L) {
  int SWIG_arg = -1;
  
  BBSystem();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BBGeneration(lua_State* L) {
  int SWIG_arg = -1;
  
  BBGeneration();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PartyPrivateCall(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  PartyPrivateCall(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PartyKick(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  PartyKick(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PartyPromote(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  PartyPromote(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PartyQuit(lua_State* L) {
  int SWIG_arg = -1;
  
  PartyQuit();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PartySelectLineup(lua_State* L) {
  int SWIG_arg = -1;
  
  PartySelectLineup();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PartySetKeyPos(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  PartySetKeyPos(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UpdateLineupSelectMenu(lua_State* L) {
  int SWIG_arg = -1;
  
  UpdateLineupSelectMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ForgetLearnedLineup(lua_State* L) {
  int SWIG_arg = -1;
  
  ForgetLearnedLineup();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PartySetSelectLineupResualt(lua_State* L) {
  int SWIG_arg = -1;
  
  PartySetSelectLineupResualt();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_OpenLineupInfoView(lua_State* L) {
  int SWIG_arg = -1;
  
  OpenLineupInfoView();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LeaveTemporarily(lua_State* L) {
  int SWIG_arg = -1;
  
  LeaveTemporarily();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ReturnParty(lua_State* L) {
  int SWIG_arg = -1;
  
  ReturnParty();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UpdateCharMenu(lua_State* L) {
  int SWIG_arg = -1;
  
  UpdateCharMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UpdateBattleItemMenu__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  bool arg1 ;
  
  if(!lua_isboolean(L,1)) SWIG_fail_arg(1);
  arg1 = (bool)lua_toboolean(L, 1);
  UpdateBattleItemMenu(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UpdateBattleItemMenu__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  
  UpdateBattleItemMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UpdateBattleItemMenu(lua_State* L) {
  int argc;
  int argv[2]={
    1,2
  };
  
  argc = lua_gettop(L);
  if (argc == 0) {
    return _wrap_UpdateBattleItemMenu__SWIG_1(L);
  }
  if (argc == 1) {
    int _v;
    {
      _v = lua_isboolean(L,argv[0]);
    }
    if (_v) {
      return _wrap_UpdateBattleItemMenu__SWIG_0(L);
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'UpdateBattleItemMenu'");
  lua_error(L);return 0;
}


static int _wrap_MBChangeNextPage(lua_State* L) {
  int SWIG_arg = -1;
  
  MBChangeNextPage();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BatDialogNextPage(lua_State* L) {
  int SWIG_arg = -1;
  
  BatDialogNextPage();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PlayerChooseResultInBat(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  PlayerChooseResultInBat(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BattleItemUse(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  BattleItemUse(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_SetCharacterIndex(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  SetCharacterIndex(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_SetLineIndex(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  SetLineIndex(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CopyToShortCut(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  int arg2 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (int)lua_tonumber(L, 2);
  CopyToShortCut(arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CopySkillToShortCut(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  int arg2 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (int)lua_tonumber(L, 2);
  CopySkillToShortCut(arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_DelShortCutSlot(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  int arg2 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (int)lua_tonumber(L, 2);
  DelShortCutSlot(arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetShortCutRefType(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  int result;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  result = (int)GetShortCutRefType(arg1);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetShortCutRefNum(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  int result;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  result = (int)GetShortCutRefNum(arg1);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_EquipItemUse(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  EquipItemUse(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_MoveEquipToBag(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  int arg2 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (int)lua_tonumber(L, 2);
  MoveEquipToBag(arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_MoveToBag__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  if(!lua_isnumber(L,3)) SWIG_fail_arg(3);
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  MoveToBag(arg1,arg2,arg3);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_MoveToBag__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  int arg2 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (int)lua_tonumber(L, 2);
  MoveToBag(arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_MoveToBag(lua_State* L) {
  int argc;
  int argv[4]={
    1,2,3,4
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_MoveToBag__SWIG_1(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_MoveToBag__SWIG_0(L);
        }
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'MoveToBag'");
  lua_error(L);return 0;
}


static int _wrap_DropItem(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  int arg2 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (int)lua_tonumber(L, 2);
  DropItem(arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_HasParty(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)HasParty();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_HasTempParty(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)HasTempParty();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UpdatePartyPanel(lua_State* L) {
  int SWIG_arg = -1;
  
  UpdatePartyPanel();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CopyImageForUIImage(lua_State* L) {
  int SWIG_arg = -1;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!lua_isstring(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  arg1 = (char *)lua_tostring(L, 1);
  arg2 = (char *)lua_tostring(L, 2);
  CopyImageForUIImage((char const *)arg1,(char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BattleItemDrag(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  BattleItemDrag(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_HasItem(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  bool result;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  result = (bool)HasItem(arg1);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetMaxStack(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  int result;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  result = (int)GetMaxStack(arg1);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_SetDropItemText(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  char *arg2 = (char *) 0 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (char *)lua_tostring(L, 2);
  SetDropItemText(arg1,(char const *)arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShowErrMessage__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  char *arg1 = (char *) 0 ;
  bool arg2 ;
  
  if(!lua_isstring(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  arg1 = (char *)lua_tostring(L, 1);
  arg2 = (bool)lua_toboolean(L, 2);
  ShowErrMessage((char const *)arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShowErrMessage__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  char *arg1 = (char *) 0 ;
  
  if(!lua_isstring(L,1)) SWIG_fail_arg(1);
  arg1 = (char *)lua_tostring(L, 1);
  ShowErrMessage((char const *)arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShowErrMessage(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      _v = lua_isstring(L,argv[0]);
    }
    if (_v) {
      return _wrap_ShowErrMessage__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      _v = lua_isstring(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        return _wrap_ShowErrMessage__SWIG_0(L);
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'ShowErrMessage'");
  lua_error(L);return 0;
}


static int _wrap_BattleItemMove(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  int arg2 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (int)lua_tonumber(L, 2);
  BattleItemMove(arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_HasCharacter(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  bool result;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  result = (bool)HasCharacter(arg1);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_InviteComing(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)InviteComing();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetBGMVolume(lua_State* L) {
  int SWIG_arg = -1;
  unsigned int result;
  
  result = (unsigned int)GetBGMVolume();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShowPartyByIndex__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  ShowPartyByIndex(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShowPartyByIndex__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  
  ShowPartyByIndex();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShowPartyByIndex(lua_State* L) {
  int argc;
  int argv[2]={
    1,2
  };
  
  argc = lua_gettop(L);
  if (argc == 0) {
    return _wrap_ShowPartyByIndex__SWIG_1(L);
  }
  if (argc == 1) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      return _wrap_ShowPartyByIndex__SWIG_0(L);
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'ShowPartyByIndex'");
  lua_error(L);return 0;
}


static int _wrap_GetSFXVolume(lua_State* L) {
  int SWIG_arg = -1;
  unsigned int result;
  
  result = (unsigned int)GetSFXVolume();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_InviteConfirm(lua_State* L) {
  int SWIG_arg = -1;
  bool arg1 ;
  
  if(!lua_isboolean(L,1)) SWIG_fail_arg(1);
  arg1 = (bool)lua_toboolean(L, 1);
  InviteConfirm(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetPartyListSize(lua_State* L) {
  int SWIG_arg = -1;
  int result;
  
  result = (int)GetPartyListSize();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UpdateApplicationMenu(lua_State* L) {
  int SWIG_arg = -1;
  
  UpdateApplicationMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_JoinConfirm(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  bool arg2 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (bool)lua_toboolean(L, 2);
  JoinConfirm(arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ClearAllRequest(lua_State* L) {
  int SWIG_arg = -1;
  
  ClearAllRequest();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShowOtherParty(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  ShowOtherParty(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ApplicantPanelScroll(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  ApplicantPanelScroll(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BattleJoinConfirm(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  bool arg2 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (bool)lua_toboolean(L, 2);
  BattleJoinConfirm(arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_JoinBattleClearAllRequestUp(lua_State* L) {
  int SWIG_arg = -1;
  
  JoinBattleClearAllRequestUp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_JoinBattleScroll(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  JoinBattleScroll(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UpdateJoinBattleMenu(lua_State* L) {
  int SWIG_arg = -1;
  
  UpdateJoinBattleMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_IsJoinRequestExist(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)IsJoinRequestExist();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShowCreateCharacter__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  int arg2 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (int)lua_tonumber(L, 2);
  ShowCreateCharacter(arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShowCreateCharacter__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  ShowCreateCharacter(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShowCreateCharacter__SWIG_2(lua_State* L) {
  int SWIG_arg = -1;
  
  ShowCreateCharacter();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShowCreateCharacter(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 0) {
    return _wrap_ShowCreateCharacter__SWIG_2(L);
  }
  if (argc == 1) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      return _wrap_ShowCreateCharacter__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_ShowCreateCharacter__SWIG_0(L);
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'ShowCreateCharacter'");
  lua_error(L);return 0;
}


static int _wrap_ChangeCharacterHairCol(lua_State* L) {
  int SWIG_arg = -1;
  bool arg1 ;
  
  if(!lua_isboolean(L,1)) SWIG_fail_arg(1);
  arg1 = (bool)lua_toboolean(L, 1);
  ChangeCharacterHairCol(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ChangeCharacterHead(lua_State* L) {
  int SWIG_arg = -1;
  bool arg1 ;
  
  if(!lua_isboolean(L,1)) SWIG_fail_arg(1);
  arg1 = (bool)lua_toboolean(L, 1);
  ChangeCharacterHead(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ChangeCharacterCloth(lua_State* L) {
  int SWIG_arg = -1;
  bool arg1 ;
  
  if(!lua_isboolean(L,1)) SWIG_fail_arg(1);
  arg1 = (bool)lua_toboolean(L, 1);
  ChangeCharacterCloth(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ChangeCharacterClothCol(lua_State* L) {
  int SWIG_arg = -1;
  bool arg1 ;
  
  if(!lua_isboolean(L,1)) SWIG_fail_arg(1);
  arg1 = (bool)lua_toboolean(L, 1);
  ChangeCharacterClothCol(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CreateCharacter(lua_State* L) {
  int SWIG_arg = -1;
  
  CreateCharacter();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetTempMsg(lua_State* L) {
  int SWIG_arg = -1;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)GetTempMsg();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_wchar_t,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_IsFullScreen(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)IsFullScreen();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_SetHighLightInLogin(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  bool arg2 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (bool)lua_toboolean(L, 2);
  SetHighLightInLogin(arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_IsBattle(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)IsBattle();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_IsPvP(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)IsPvP();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LoadLua(lua_State* L) {
  int SWIG_arg = -1;
  char *arg1 = (char *) 0 ;
  
  if(!lua_isstring(L,1)) SWIG_fail_arg(1);
  arg1 = (char *)lua_tostring(L, 1);
  LoadLua((char const *)arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CharacterLevelUp(lua_State* L) {
  int SWIG_arg = -1;
  
  CharacterLevelUp();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CharAttOk(lua_State* L) {
  int SWIG_arg = -1;
  
  CharAttOk();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CharAttUp(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  int arg2 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (int)lua_tonumber(L, 2);
  CharAttUp(arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CharAttDown(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  int arg2 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (int)lua_tonumber(L, 2);
  CharAttDown(arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShowMidMap(lua_State* L) {
  int SWIG_arg = -1;
  
  ShowMidMap();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_MidMapMoveCharTo(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  MidMapMoveCharTo(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_MidMapMoveOut(lua_State* L) {
  int SWIG_arg = -1;
  
  MidMapMoveOut();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ResetMidMapValue(lua_State* L) {
  int SWIG_arg = -1;
  
  ResetMidMapValue();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_MidMapShowName(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  MidMapShowName(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_MidMapClickNPC(lua_State* L) {
  int SWIG_arg = -1;
  
  MidMapClickNPC();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UpdateSearchList(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  UpdateSearchList(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NPCSearchListUpOrDown(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  NPCSearchListUpOrDown(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_MidMapShowLocationBox(lua_State* L) {
  int SWIG_arg = -1;
  
  MidMapShowLocationBox();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NPCSearchClickList(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  NPCSearchClickList(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PartySearchClickList(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  PartySearchClickList(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CharSearchClickList(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  CharSearchClickList(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShowLeaderInfo(lua_State* L) {
  int SWIG_arg = -1;
  
  ShowLeaderInfo();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShowLeaderInfoChar(lua_State* L) {
  int SWIG_arg = -1;
  
  ShowLeaderInfoChar();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_SearchNPCList(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  SearchNPCList(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_WeaponsRankSearchList(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  WeaponsRankSearchList(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShowPartySearchList(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  ShowPartySearchList(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShowCharSearchList(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  ShowCharSearchList(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_OnPartySearchPagePrev(lua_State* L) {
  int SWIG_arg = -1;
  
  OnPartySearchPagePrev();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_OnCharSearchPagePrev(lua_State* L) {
  int SWIG_arg = -1;
  
  OnCharSearchPagePrev();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_OnPartySearchPageNext(lua_State* L) {
  int SWIG_arg = -1;
  
  OnPartySearchPageNext();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_OnCharSearchPageNext(lua_State* L) {
  int SWIG_arg = -1;
  
  OnCharSearchPageNext();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_OnJoinPartySearch(lua_State* L) {
  int SWIG_arg = -1;
  
  OnJoinPartySearch();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_OnJoinCharSearch(lua_State* L) {
  int SWIG_arg = -1;
  
  OnJoinCharSearch();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_OnShowPartyInfo(lua_State* L) {
  int SWIG_arg = -1;
  
  OnShowPartyInfo();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_OnShowCharInfo(lua_State* L) {
  int SWIG_arg = -1;
  
  OnShowCharInfo();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_IsIndoor(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)IsIndoor();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ConfirmPK(lua_State* L) {
  int SWIG_arg = -1;
  
  ConfirmPK();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CancelPK(lua_State* L) {
  int SWIG_arg = -1;
  
  CancelPK();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ConfirmMatch(lua_State* L) {
  int SWIG_arg = -1;
  
  ConfirmMatch();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CancelMatch(lua_State* L) {
  int SWIG_arg = -1;
  
  CancelMatch();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_haveParty(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)haveParty();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_IsLeader(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)IsLeader();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetHelpEnable(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)GetHelpEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetActionEnable(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)GetActionEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetSkillEnable(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)GetSkillEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetItemEnable(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)GetItemEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetDefenceEnable(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)GetDefenceEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetFriendEnable(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)GetFriendEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetProtectEnable(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)GetProtectEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetCatchEnable(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)GetCatchEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetAutoEnable(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)GetAutoEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetEscapeEnable(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)GetEscapeEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetPartnerSkillEnable(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)GetPartnerSkillEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetPartnerItemEnable(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)GetPartnerItemEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetPartnerDefenceEnable(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)GetPartnerDefenceEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetPartnerProtectEnable(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)GetPartnerProtectEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetPartnerEscapeEnable(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)GetPartnerEscapeEnable();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_DeleteCharacter(lua_State* L) {
  int SWIG_arg = -1;
  
  DeleteCharacter();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_RetrieveCharacter(lua_State* L) {
  int SWIG_arg = -1;
  unsigned int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (unsigned int)lua_tonumber(L, 1);
  RetrieveCharacter(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CheckCharacterFrozen(lua_State* L) {
  int SWIG_arg = -1;
  unsigned int arg1 ;
  bool result;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (unsigned int)lua_tonumber(L, 1);
  result = (bool)CheckCharacterFrozen(arg1);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_NPCSearchListScroll(lua_State* L) {
  int SWIG_arg = -1;
  
  NPCSearchListScroll();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UpdateShopItemDetail(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  UpdateShopItemDetail(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ResetSearchValue(lua_State* L) {
  int SWIG_arg = -1;
  
  ResetSearchValue();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_InitLoginScreen(lua_State* L) {
  int SWIG_arg = -1;
  
  InitLoginScreen();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_SaveLoginDefault(lua_State* L) {
  int SWIG_arg = -1;
  
  SaveLoginDefault();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetDefaultCharacter(lua_State* L) {
  int SWIG_arg = -1;
  unsigned int result;
  
  result = (unsigned int)GetDefaultCharacter();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_SetDefaultCharacter(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  SetDefaultCharacter(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetDefaultLine(lua_State* L) {
  int SWIG_arg = -1;
  unsigned int result;
  
  result = (unsigned int)GetDefaultLine();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_SetDefaultLine(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  SetDefaultLine(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShopOpenConfirmBox__SWIG_0(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  int arg2 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (int)lua_tonumber(L, 2);
  ShopOpenConfirmBox(arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShopOpenConfirmBox__SWIG_1(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  ShopOpenConfirmBox(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShopOpenConfirmBox__SWIG_2(lua_State* L) {
  int SWIG_arg = -1;
  
  ShopOpenConfirmBox();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShopOpenConfirmBox(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 0) {
    return _wrap_ShopOpenConfirmBox__SWIG_2(L);
  }
  if (argc == 1) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      return _wrap_ShopOpenConfirmBox__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_ShopOpenConfirmBox__SWIG_0(L);
      }
    }
  }
  
  lua_pushstring(L,"No matching function for overloaded 'ShopOpenConfirmBox'");
  lua_error(L);return 0;
}


static int _wrap_ShopEnterItemCount(lua_State* L) {
  int SWIG_arg = -1;
  bool arg1 ;
  int arg2 ;
  
  if(!lua_isboolean(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  arg1 = (bool)lua_toboolean(L, 1);
  arg2 = (int)lua_tonumber(L, 2);
  ShopEnterItemCount(arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShopSetItemCount(lua_State* L) {
  int SWIG_arg = -1;
  bool arg1 ;
  
  if(!lua_isboolean(L,1)) SWIG_fail_arg(1);
  arg1 = (bool)lua_toboolean(L, 1);
  ShopSetItemCount(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShopAdjustItemCount(lua_State* L) {
  int SWIG_arg = -1;
  bool arg1 ;
  
  if(!lua_isboolean(L,1)) SWIG_fail_arg(1);
  arg1 = (bool)lua_toboolean(L, 1);
  ShopAdjustItemCount(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShopConfirmAction(lua_State* L) {
  int SWIG_arg = -1;
  
  ShopConfirmAction();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShopResetAction(lua_State* L) {
  int SWIG_arg = -1;
  
  ShopResetAction();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShopDragItemAction(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  ShopDragItemAction(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShopOnClickSellButton(lua_State* L) {
  int SWIG_arg = -1;
  
  ShopOnClickSellButton();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShopCloseMainMenu(lua_State* L) {
  int SWIG_arg = -1;
  
  ShopCloseMainMenu();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShopOnEditBoxKeyUp(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  ShopOnEditBoxKeyUp(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShopUpdatePrice(lua_State* L) {
  int SWIG_arg = -1;
  
  ShopUpdatePrice();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_SetAniStateInLogin(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  int arg2 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (int)lua_tonumber(L, 2);
  SetAniStateInLogin(arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShowPartyButton(lua_State* L) {
  int SWIG_arg = -1;
  
  ShowPartyButton();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_BattlePartnerEscape(lua_State* L) {
  int SWIG_arg = -1;
  
  BattlePartnerEscape();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_TestingFunction(lua_State* L) {
  int SWIG_arg = -1;
  
  TestingFunction();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_FormatToSkillString(lua_State* L) {
  int SWIG_arg = -1;
  char *arg1 = (char *) 0 ;
  
  if(!lua_isstring(L,1)) SWIG_fail_arg(1);
  arg1 = (char *)lua_tostring(L, 1);
  FormatToSkillString((char const *)arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_IsBattlePartnerTurn(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)IsBattlePartnerTurn();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CheckCharacterName(lua_State* L) {
  int SWIG_arg = -1;
  
  CheckCharacterName();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_SkillFail(lua_State* L) {
  int SWIG_arg = -1;
  char *arg1 = (char *) 0 ;
  
  if(!lua_isstring(L,1)) SWIG_fail_arg(1);
  arg1 = (char *)lua_tostring(L, 1);
  SkillFail((char const *)arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_SubChatScroll(lua_State* L) {
  int SWIG_arg = -1;
  
  SubChatScroll();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CanLevelUp(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)CanLevelUp();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_SelectItemPartner(lua_State* L) {
  int SWIG_arg = -1;
  UInt8 arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (UInt8)lua_tonumber(L, 1);
  SelectItemPartner(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UpdateChangeLine(lua_State* L) {
  int SWIG_arg = -1;
  
  UpdateChangeLine();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ApplicantPrivateCall(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  ApplicantPrivateCall(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_IsTalking(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)IsTalking();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ChangeMapLine(lua_State* L) {
  int SWIG_arg = -1;
  UInt8 arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (UInt8)lua_tonumber(L, 1);
  ChangeMapLine(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ConfirmChangeLineSec(lua_State* L) {
  int SWIG_arg = -1;
  
  ConfirmChangeLineSec();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_TeammatePrivateCall(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  TeammatePrivateCall(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_TeammateKick(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  TeammateKick(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_TeammatePromote(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  TeammatePromote(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ItemScroll(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  ItemScroll(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_OnCloseBattleItem(lua_State* L) {
  int SWIG_arg = -1;
  
  OnCloseBattleItem();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_QuestCancelCancel(lua_State* L) {
  int SWIG_arg = -1;
  
  QuestCancelCancel();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_QuestCancelConfirm(lua_State* L) {
  int SWIG_arg = -1;
  
  QuestCancelConfirm();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_IsOpenSkillShop(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)IsOpenSkillShop();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShowRemoveCharacterName(lua_State* L) {
  int SWIG_arg = -1;
  
  ShowRemoveCharacterName();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_SetTempResult(lua_State* L) {
  int SWIG_arg = -1;
  double arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (double)lua_tonumber(L, 1);
  SetTempResult(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetTempResult(lua_State* L) {
  int SWIG_arg = -1;
  double result;
  
  result = (double)GetTempResult();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ChangeFriendIcon(lua_State* L) {
  int SWIG_arg = -1;
  
  ChangeFriendIcon();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CloseFriendBox(lua_State* L) {
  int SWIG_arg = -1;
  
  CloseFriendBox();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CloseQuestionBox(lua_State* L) {
  int SWIG_arg = -1;
  
  CloseQuestionBox();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaSetBPShortCutFlag(lua_State* L) {
  int SWIG_arg = -1;
  bool arg1 ;
  
  if(!lua_isboolean(L,1)) SWIG_fail_arg(1);
  arg1 = (bool)lua_toboolean(L, 1);
  LuaSetBPShortCutFlag(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaGetBPShortCutFlag(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)LuaGetBPShortCutFlag();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LockItem(lua_State* L) {
  int SWIG_arg = -1;
  unsigned int arg1 ;
  unsigned int arg2 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  arg1 = (unsigned int)lua_tonumber(L, 1);
  arg2 = (unsigned int)lua_tonumber(L, 2);
  LockItem(arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_UnlockItem(lua_State* L) {
  int SWIG_arg = -1;
  unsigned int arg1 ;
  unsigned int arg2 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  arg1 = (unsigned int)lua_tonumber(L, 1);
  arg2 = (unsigned int)lua_tonumber(L, 2);
  UnlockItem(arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_SetLockCursor(lua_State* L) {
  int SWIG_arg = -1;
  bool arg1 ;
  
  if(!lua_isboolean(L,1)) SWIG_fail_arg(1);
  arg1 = (bool)lua_toboolean(L, 1);
  SetLockCursor(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_SetUnLockCursor(lua_State* L) {
  int SWIG_arg = -1;
  bool arg1 ;
  
  if(!lua_isboolean(L,1)) SWIG_fail_arg(1);
  arg1 = (bool)lua_toboolean(L, 1);
  SetUnLockCursor(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_OpenFriendChatBox(lua_State* L) {
  int SWIG_arg = -1;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  
  if(!lua_isstring(L,1)) SWIG_fail_arg(1);
  if(!lua_isstring(L,2)) SWIG_fail_arg(2);
  arg1 = (char *)lua_tostring(L, 1);
  arg2 = (char *)lua_tostring(L, 2);
  OpenFriendChatBox(arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_OpenGuildBox(lua_State* L) {
  int SWIG_arg = -1;
  
  OpenGuildBox();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_OpenDeleteMemberGuildBox(lua_State* L) {
  int SWIG_arg = -1;
  
  OpenDeleteMemberGuildBox();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_OpenLeaveGuildBox(lua_State* L) {
  int SWIG_arg = -1;
  
  OpenLeaveGuildBox();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ClsoeGuildBox(lua_State* L) {
  int SWIG_arg = -1;
  
  ClsoeGuildBox();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaCreateUIPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIPanel *result = 0 ;
  
  result = (UIPanel *)LuaCreateUIPanel();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIPanel,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaCreateUIPanelEx(lua_State* L) {
  int SWIG_arg = -1;
  UIPanelEx *result = 0 ;
  
  result = (UIPanelEx *)LuaCreateUIPanelEx();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIPanelEx,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaCreateUIImage(lua_State* L) {
  int SWIG_arg = -1;
  UIImage *result = 0 ;
  
  result = (UIImage *)LuaCreateUIImage();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIImage,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaCreateUIStaticText(lua_State* L) {
  int SWIG_arg = -1;
  UIStaticText *result = 0 ;
  
  result = (UIStaticText *)LuaCreateUIStaticText();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIStaticText,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaCreateUIButton(lua_State* L) {
  int SWIG_arg = -1;
  UIButton *result = 0 ;
  
  result = (UIButton *)LuaCreateUIButton();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIButton,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaCreateUICheckBox(lua_State* L) {
  int SWIG_arg = -1;
  UICheckBox *result = 0 ;
  
  result = (UICheckBox *)LuaCreateUICheckBox();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UICheckBox,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaCreateUIListBox(lua_State* L) {
  int SWIG_arg = -1;
  UIListBox *result = 0 ;
  
  result = (UIListBox *)LuaCreateUIListBox();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIListBox,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaCreateUIPopUpMenu(lua_State* L) {
  int SWIG_arg = -1;
  UIPopUpMenu *result = 0 ;
  
  result = (UIPopUpMenu *)LuaCreateUIPopUpMenu();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIPopUpMenu,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaCreateUIScrollBarH(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarH *result = 0 ;
  
  result = (UIScrollBarH *)LuaCreateUIScrollBarH();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIScrollBarH,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaCreateUIScrollBarV(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollBarV *result = 0 ;
  
  result = (UIScrollBarV *)LuaCreateUIScrollBarV();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIScrollBarV,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaCreateUIScrollListBox(lua_State* L) {
  int SWIG_arg = -1;
  UIScrollListBox *result = 0 ;
  
  result = (UIScrollListBox *)LuaCreateUIScrollListBox();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIScrollListBox,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaCreateUIEditBox(lua_State* L) {
  int SWIG_arg = -1;
  UIEditBox *result = 0 ;
  
  result = (UIEditBox *)LuaCreateUIEditBox();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIEditBox,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaCreateUIChatPanel(lua_State* L) {
  int SWIG_arg = -1;
  UIChatPanel *result = 0 ;
  
  result = (UIChatPanel *)LuaCreateUIChatPanel();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIChatPanel,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaCreateUIChatString(lua_State* L) {
  int SWIG_arg = -1;
  UIChatString *result = 0 ;
  
  result = (UIChatString *)LuaCreateUIChatString();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIChatString,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaCreateUIChatLink(lua_State* L) {
  int SWIG_arg = -1;
  UIChatLink *result = 0 ;
  
  result = (UIChatLink *)LuaCreateUIChatLink();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIChatLink,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaCreateUIMiniMap(lua_State* L) {
  int SWIG_arg = -1;
  UIMiniMap *result = 0 ;
  
  result = (UIMiniMap *)LuaCreateUIMiniMap();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIMiniMap,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaCreateUILinerImage(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImage *result = 0 ;
  
  result = (UILinerImage *)LuaCreateUILinerImage();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UILinerImage,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaCreateUILinerImageV(lua_State* L) {
  int SWIG_arg = -1;
  UILinerImageV *result = 0 ;
  
  result = (UILinerImageV *)LuaCreateUILinerImageV();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UILinerImageV,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaCreateUIAniIcon(lua_State* L) {
  int SWIG_arg = -1;
  UIAniIcon *result = 0 ;
  
  result = (UIAniIcon *)LuaCreateUIAniIcon();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIAniIcon,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaCreateUIDynamicText(lua_State* L) {
  int SWIG_arg = -1;
  UIDynamicText *result = 0 ;
  
  result = (UIDynamicText *)LuaCreateUIDynamicText();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_UIDynamicText,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_RunNewGame(lua_State* L) {
  int SWIG_arg = -1;
  
  RunNewGame();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_OpenHomePage(lua_State* L) {
  int SWIG_arg = -1;
  
  OpenHomePage();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ChangeChatIcon(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  ChangeChatIcon(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaGetChar_id(lua_State* L) {
  int SWIG_arg = -1;
  unsigned int result;
  
  result = (unsigned int)LuaGetChar_id();
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaGetBag(lua_State* L) {
  int SWIG_arg = -1;
  unsigned int arg1 ;
  unsigned int result;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (unsigned int)lua_tonumber(L, 1);
  result = (unsigned int)LuaGetBag(arg1);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaGetItemName(lua_State* L) {
  int SWIG_arg = -1;
  unsigned int arg1 ;
  wchar_t *result = 0 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (unsigned int)lua_tonumber(L, 1);
  result = (wchar_t *)LuaGetItemName(arg1);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_wchar_t,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaGetItemColor(lua_State* L) {
  int SWIG_arg = -1;
  unsigned int arg1 ;
  unsigned int result;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (unsigned int)lua_tonumber(L, 1);
  result = (unsigned int)LuaGetItemColor(arg1);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetFirstNum(lua_State* L) {
  int SWIG_arg = -1;
  wchar_t *arg1 = (wchar_t *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("GetFirstNum",1,SWIGTYPE_p_wchar_t);
  }
  
  result = (unsigned int)GetFirstNum((wchar_t const *)arg1);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_GetLastNum(lua_State* L) {
  int SWIG_arg = -1;
  wchar_t *arg1 = (wchar_t *) 0 ;
  unsigned int result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("GetLastNum",1,SWIGTYPE_p_wchar_t);
  }
  
  result = (unsigned int)GetLastNum((wchar_t const *)arg1);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaSetShopSkillFlag(lua_State* L) {
  int SWIG_arg = -1;
  bool arg1 ;
  
  if(!lua_isboolean(L,1)) SWIG_fail_arg(1);
  arg1 = (bool)lua_toboolean(L, 1);
  LuaSetShopSkillFlag(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaGetShopSkillFlag(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)LuaGetShopSkillFlag();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CharSetMapPos(lua_State* L) {
  int SWIG_arg = -1;
  wchar_t *arg1 = (wchar_t *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("CharSetMapPos",1,SWIGTYPE_p_wchar_t);
  }
  
  result = (bool)CharSetMapPos((wchar_t const *)arg1);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CharOpenQuestMenu(lua_State* L) {
  int SWIG_arg = -1;
  wchar_t *arg1 = (wchar_t *) 0 ;
  bool result;
  
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg(1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("CharOpenQuestMenu",1,SWIGTYPE_p_wchar_t);
  }
  
  result = (bool)CharOpenQuestMenu((wchar_t const *)arg1);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_OpenFactionDetail(lua_State* L) {
  int SWIG_arg = -1;
  
  OpenFactionDetail();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaGetPartnerName(lua_State* L) {
  int SWIG_arg = -1;
  unsigned int arg1 ;
  wchar_t *result = 0 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (unsigned int)lua_tonumber(L, 1);
  result = (wchar_t *)LuaGetPartnerName(arg1);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_wchar_t,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaGetPartnerOriginName(lua_State* L) {
  int SWIG_arg = -1;
  unsigned int arg1 ;
  wchar_t *result = 0 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (unsigned int)lua_tonumber(L, 1);
  result = (wchar_t *)LuaGetPartnerOriginName(arg1);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_wchar_t,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaGetPartnerID(lua_State* L) {
  int SWIG_arg = -1;
  unsigned int arg1 ;
  unsigned int result;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (unsigned int)lua_tonumber(L, 1);
  result = (unsigned int)LuaGetPartnerID(arg1);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaGetPetName(lua_State* L) {
  int SWIG_arg = -1;
  unsigned int arg1 ;
  wchar_t *result = 0 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (unsigned int)lua_tonumber(L, 1);
  result = (wchar_t *)LuaGetPetName(arg1);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_wchar_t,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaGetPetOriginName(lua_State* L) {
  int SWIG_arg = -1;
  unsigned int arg1 ;
  wchar_t *result = 0 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (unsigned int)lua_tonumber(L, 1);
  result = (wchar_t *)LuaGetPetOriginName(arg1);
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_wchar_t,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaGetPetID(lua_State* L) {
  int SWIG_arg = -1;
  unsigned int arg1 ;
  unsigned int result;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (unsigned int)lua_tonumber(L, 1);
  result = (unsigned int)LuaGetPetID(arg1);
  SWIG_arg=0;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaAddAlertBox(lua_State* L) {
  int SWIG_arg = -1;
  char *arg1 = (char *) 0 ;
  bool arg2 ;
  
  if(!lua_isstring(L,1)) SWIG_fail_arg(1);
  if(!lua_isboolean(L,2)) SWIG_fail_arg(2);
  arg1 = (char *)lua_tostring(L, 1);
  arg2 = (bool)lua_toboolean(L, 2);
  LuaAddAlertBox((char const *)arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_LuaGetLineTextName(lua_State* L) {
  int SWIG_arg = -1;
  wchar_t *result = 0 ;
  
  result = (wchar_t *)LuaGetLineTextName();
  SWIG_arg=0;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_wchar_t,0); SWIG_arg++; 
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_IsHawking(lua_State* L) {
  int SWIG_arg = -1;
  bool result;
  
  result = (bool)IsHawking();
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShowPartyPopUp(lua_State* L) {
  int SWIG_arg = -1;
  UInt8 arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (UInt8)lua_tonumber(L, 1);
  ShowPartyPopUp(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_SelectPartyPopUp(lua_State* L) {
  int SWIG_arg = -1;
  UInt8 arg1 ;
  UInt8 arg2 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  arg1 = (UInt8)lua_tonumber(L, 1);
  arg2 = (UInt8)lua_tonumber(L, 2);
  SelectPartyPopUp(arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShowTeammatePopUp(lua_State* L) {
  int SWIG_arg = -1;
  UInt8 arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (UInt8)lua_tonumber(L, 1);
  ShowTeammatePopUp(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_AutoAcceptCheckBox(lua_State* L) {
  int SWIG_arg = -1;
  bool arg1 ;
  
  if(!lua_isboolean(L,1)) SWIG_fail_arg(1);
  arg1 = (bool)lua_toboolean(L, 1);
  AutoAcceptCheckBox(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_SelectTeammatePopUp(lua_State* L) {
  int SWIG_arg = -1;
  UInt8 arg1 ;
  UInt8 arg2 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  arg1 = (UInt8)lua_tonumber(L, 1);
  arg2 = (UInt8)lua_tonumber(L, 2);
  SelectTeammatePopUp(arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_SetChangePos(lua_State* L) {
  int SWIG_arg = -1;
  UInt8 arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (UInt8)lua_tonumber(L, 1);
  SetChangePos(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ChangePartyDesc(lua_State* L) {
  int SWIG_arg = -1;
  
  ChangePartyDesc();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_StopCharacter(lua_State* L) {
  int SWIG_arg = -1;
  
  StopCharacter();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ShowAlertOK(lua_State* L) {
  int SWIG_arg = -1;
  
  ShowAlertOK();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CreateCharRotate(lua_State* L) {
  int SWIG_arg = -1;
  bool arg1 ;
  
  if(!lua_isboolean(L,1)) SWIG_fail_arg(1);
  arg1 = (bool)lua_toboolean(L, 1);
  CreateCharRotate(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ConfirmReplyString(lua_State* L) {
  int SWIG_arg = -1;
  
  ConfirmReplyString();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ReplyStringNULL(lua_State* L) {
  int SWIG_arg = -1;
  
  ReplyStringNULL();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_IsCurrMsgIcon(lua_State* L) {
  int SWIG_arg = -1;
  int arg1 ;
  bool result;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (int)lua_tonumber(L, 1);
  result = (bool)IsCurrMsgIcon(arg1);
  SWIG_arg=0;
  lua_pushboolean(L,(int)result); SWIG_arg++;
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_SetHotKeyEnable(lua_State* L) {
  int SWIG_arg = -1;
  bool arg1 ;
  
  if(!lua_isboolean(L,1)) SWIG_fail_arg(1);
  arg1 = (bool)lua_toboolean(L, 1);
  SetHotKeyEnable(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_OpenWebLink(lua_State* L) {
  int SWIG_arg = -1;
  
  OpenWebLink();
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_SetWebLink(lua_State* L) {
  int SWIG_arg = -1;
  char *arg1 = (char *) 0 ;
  int arg2 ;
  
  if(!lua_isstring(L,1)) SWIG_fail_arg(1);
  if(!lua_isnumber(L,2)) SWIG_fail_arg(2);
  arg1 = (char *)lua_tostring(L, 1);
  arg2 = (int)lua_tonumber(L, 2);
  SetWebLink((char const *)arg1,arg2);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CharEatFastFood(lua_State* L) {
  int SWIG_arg = -1;
  UInt8 arg1 ;
  
  if(!lua_isnumber(L,1)) SWIG_fail_arg(1);
  arg1 = (UInt8)lua_tonumber(L, 1);
  CharEatFastFood(arg1);
  SWIG_arg=0;
  
  return SWIG_arg;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


#ifdef __cplusplus
}
#endif

static const struct luaL_reg swig_commands[] = {
    { "HexToDWORD", _wrap_HexToDWORD},
    { "new_UIItem", _wrap_new_UIItem},
    { "delete_UIItem", _wrap_delete_UIItem},
    { "UIItem_Create", _wrap_UIItem_Create},
    { "UIItem_Dispose", _wrap_UIItem_Dispose},
    { "UIItem_Validate", _wrap_UIItem_Validate},
    { "UIItem_Invalidate", _wrap_UIItem_Invalidate},
    { "UIItem_Update", _wrap_UIItem_Update},
    { "UIItem_Render", _wrap_UIItem_Render},
    { "UIItem_SetPos", _wrap_UIItem_SetPos},
    { "UIItem_MovePos", _wrap_UIItem_MovePos},
    { "UIItem_GetX", _wrap_UIItem_GetX},
    { "UIItem_GetY", _wrap_UIItem_GetY},
    { "UIItem_GetOffsetX", _wrap_UIItem_GetOffsetX},
    { "UIItem_GetOffsetY", _wrap_UIItem_GetOffsetY},
    { "UIItem_GetWidth", _wrap_UIItem_GetWidth},
    { "UIItem_GetHeight", _wrap_UIItem_GetHeight},
    { "UIItem_IsPickUp", _wrap_UIItem_IsPickUp},
    { "UIItem_PickUp", _wrap_UIItem_PickUp},
    { "UIItem_UnPickUp", _wrap_UIItem_UnPickUp},
    { "UIItem_SetOffsetXY", _wrap_UIItem_SetOffsetXY},
    { "UIItem_SetOffsetXYOnly", _wrap_UIItem_SetOffsetXYOnly},
    { "UIItem_SetOffsetPos", _wrap_UIItem_SetOffsetPos},
    { "UIItem_SetLuaState", _wrap_UIItem_SetLuaState},
    { "UIItem_SetFocus", _wrap_UIItem_SetFocus},
    { "UIItem_GetFocus", _wrap_UIItem_GetFocus},
    { "UIItem_GetHotSpot", _wrap_UIItem_GetHotSpot},
    { "UIItem_GetMouseOver", _wrap_UIItem_GetMouseOver},
    { "UIItem_SetName", _wrap_UIItem_SetName},
    { "UIItem_SetLastKey", _wrap_UIItem_SetLastKey},
    { "UIItem_GetLastKey", _wrap_UIItem_GetLastKey},
    { "UIItem_SetLastWndMsg", _wrap_UIItem_SetLastWndMsg},
    { "UIItem_GetLastWndMsg", _wrap_UIItem_GetLastWndMsg},
    { "UIItem_SetEnable", _wrap_UIItem_SetEnable},
    { "UIItem_IsEnable", _wrap_UIItem_IsEnable},
    { "UIItem_CheckName",_wrap_UIItem_CheckName},
    { "UIItem_Equal", _wrap_UIItem_Equal},
    { "UIItem_SetNotDetected", _wrap_UIItem_SetNotDetected},
    { "UIItem_SetDetectRect",_wrap_UIItem_SetDetectRect},
    { "UIItem_SetDragRect", _wrap_UIItem_SetDragRect},
    { "UIItem_SetColor", _wrap_UIItem_SetColor},
    { "UIItem_SetNext", _wrap_UIItem_SetNext},
    { "UIItem_GetNext", _wrap_UIItem_GetNext},
    { "UIItem_SetPrev", _wrap_UIItem_SetPrev},
    { "UIItem_GetPrev", _wrap_UIItem_GetPrev},
    { "UIItem_SetCanDrag", _wrap_UIItem_SetCanDrag},
    { "UIItem_SetDetectImage", _wrap_UIItem_SetDetectImage},
    { "UIItem_IsDelectImage", _wrap_UIItem_IsDelectImage},
    { "UIItem_SetRenderStyle", _wrap_UIItem_SetRenderStyle},
    { "UIItem_GetRenderStyle", _wrap_UIItem_GetRenderStyle},
    { "UIItem_SetTimeOutCount", _wrap_UIItem_SetTimeOutCount},
    { "UIItem_SetTimeOutPreTime", _wrap_UIItem_SetTimeOutPreTime},
    { "UIItem_SetTimeOutState", _wrap_UIItem_SetTimeOutState},
    { "UIItem_SetEnableTimeOutEvent", _wrap_UIItem_SetEnableTimeOutEvent},
    { "UIItem_ResetTimer", _wrap_UIItem_ResetTimer},
    { "UIItem_GetTimeOutCount", _wrap_UIItem_GetTimeOutCount},
    { "UIItem_GetTimeOutPreTime", _wrap_UIItem_GetTimeOutPreTime},
    { "UIItem_GetTimeOutState", _wrap_UIItem_GetTimeOutState},
    { "UIItem_GetEnableTimeOutEvent", _wrap_UIItem_GetEnableTimeOutEvent},
    { "UIItem_GetUIItemPtr", _wrap_UIItem_GetUIItemPtr},
    { "UIItem_GetLuaState", _wrap_UIItem_GetLuaState},
    { "UIItem_SetLuaFunc", _wrap_UIItem_SetLuaFunc},
    { "UIItem_ChangeParent", _wrap_UIItem_ChangeParent},
    { "UIStaticText_SetFont", _wrap_UIStaticText_SetFont},
    { "UIStaticText_SetText", _wrap_UIStaticText_SetText},
    { "UIStaticText_LuaSetText", _wrap_UIStaticText_LuaSetText},
    { "UIStaticText_SetFontStyle", _wrap_UIStaticText_SetFontStyle},
    { "UIStaticText_SetFontColor", _wrap_UIStaticText_SetFontColor},
    { "UIStaticText_SetShadowColor", _wrap_UIStaticText_SetShadowColor},
    { "UIStaticText_SetImage", _wrap_UIStaticText_SetImage},
    { "UIStaticText_SetImageWH", _wrap_UIStaticText_SetImageWH},
    { "UIStaticText_FillImage", _wrap_UIStaticText_FillImage},
    { "UIStaticText_DrawFont", _wrap_UIStaticText_DrawFont},
    { "UIStaticText_Redraw", _wrap_UIStaticText_Redraw},
    { "UIStaticText_SetPassword", _wrap_UIStaticText_SetPassword},
    { "UIStaticText_ClearText", _wrap_UIStaticText_ClearText},
    { "UIStaticText_GetText", _wrap_UIStaticText_GetText},
    { "UIStaticText_GetTextSize", _wrap_UIStaticText_GetTextSize},
    { "UIStaticText_Empty", _wrap_UIStaticText_Empty},
    { "UIStaticText_SetAlign", _wrap_UIStaticText_SetAlign},
    { "UIStaticText_SetLinePitch", _wrap_UIStaticText_SetLinePitch},
    { "UIStaticText_SetRenderStyle", _wrap_UIStaticText_SetRenderStyle},
    { "UIStaticText_GetRenderStyle", _wrap_UIStaticText_GetRenderStyle},
    { "UIStaticText_GetUIStaticText", _wrap_UIStaticText_GetUIStaticText},
    { "UIStaticText_SetNumOnly", _wrap_UIStaticText_SetNumOnly},
    { "UIStaticText_SetSelColor", _wrap_UIStaticText_SetSelColor},
    { "UIStaticText_GetSelColor", _wrap_UIStaticText_GetSelColor},
    { "UIStaticText_SetSelStart", _wrap_UIStaticText_SetSelStart},
    { "UIStaticText_GetSelStart", _wrap_UIStaticText_GetSelStart},
    { "UIStaticText_SetSelEnd", _wrap_UIStaticText_SetSelEnd},
    { "UIStaticText_GetSelEnd", _wrap_UIStaticText_GetSelEnd},
    { "new_UIStaticText", _wrap_new_UIStaticText},
    { "delete_UIStaticText", _wrap_delete_UIStaticText},
    { "UIButton_SetDetectRect",_wrap_UIButton_SetDetectRect},
    { "UIButton_SetStateDetectRect", _wrap_UIButton_SetStateDetectRect},
    { "UIButton_GetX", _wrap_UIButton_GetX},
    { "UIButton_GetY", _wrap_UIButton_GetY},
    { "UIButton_SetPos", _wrap_UIButton_SetPos},
    { "UIButton_SetNormalState", _wrap_UIButton_SetNormalState},
    { "UIButton_SetDisableState", _wrap_UIButton_SetDisableState},
    { "UIButton_SetMouseOverState", _wrap_UIButton_SetMouseOverState},
    { "UIButton_SetClickState", _wrap_UIButton_SetClickState},
    { "UIButton_SetNoticeState", _wrap_UIButton_SetNoticeState},
    { "UIButton_SetSubOffSet", _wrap_UIButton_SetSubOffSet},
    { "UIButton_SetOffsetPos", _wrap_UIButton_SetOffsetPos},
    { "UIButton_SetLockState", _wrap_UIButton_SetLockState},
    { "UIButton_SetRenderStyle", _wrap_UIButton_SetRenderStyle},
    { "UIButton_GetRenderStyle", _wrap_UIButton_GetRenderStyle},
    { "UIButton_IsLockState", _wrap_UIButton_IsLockState},
    { "UIButton_SetState", _wrap_UIButton_SetState},
    { "UIButton_SetImageFileA", _wrap_UIButton_SetImageFileA},
    { "UIButton_SetRect", _wrap_UIButton_SetRect},
    { "UIButton_SetAniIcon", _wrap_UIButton_SetAniIcon},
    { "UIButton_GetState", _wrap_UIButton_GetState},
    { "new_UIButton", _wrap_new_UIButton},
    { "delete_UIButton", _wrap_delete_UIButton},
    { "UICheckBox_SetState", _wrap_UICheckBox_SetState},
    { "UICheckBox_GetState", _wrap_UICheckBox_GetState},
    { "UICheckBox_SetRenderStyle", _wrap_UICheckBox_SetRenderStyle},
    { "UICheckBox_GetRenderStyle", _wrap_UICheckBox_GetRenderStyle},
    { "UICheckBox_SetCheckXY", _wrap_UICheckBox_SetCheckXY},
    { "UICheckBox_SetImageFileA", _wrap_UICheckBox_SetImageFileA},
    { "UICheckBox_SetRect", _wrap_UICheckBox_SetRect},
    { "new_UICheckBox", _wrap_new_UICheckBox},
    { "delete_UICheckBox", _wrap_delete_UICheckBox},
    { "UIScrollBarV_InitButton", _wrap_UIScrollBarV_InitButton},
    { "UIScrollBarV_GetPrevBtn", _wrap_UIScrollBarV_GetPrevBtn},
    { "UIScrollBarV_GetNextBtn", _wrap_UIScrollBarV_GetNextBtn},
    { "UIScrollBarV_GetMoveBtn", _wrap_UIScrollBarV_GetMoveBtn},
    { "UIScrollBarV_SetPrevButton", _wrap_UIScrollBarV_SetPrevButton},
    { "UIScrollBarV_SetNextButton", _wrap_UIScrollBarV_SetNextButton},
    { "UIScrollBarV_SetMoveButton", _wrap_UIScrollBarV_SetMoveButton},
    { "UIScrollBarV_SetBarRect", _wrap_UIScrollBarV_SetBarRect},
    { "UIScrollBarV_SetBarWH", _wrap_UIScrollBarV_SetBarWH},
    { "UIScrollBarV_SetBarHeight", _wrap_UIScrollBarV_SetBarHeight},
    { "UIScrollBarV_SetNumCount", _wrap_UIScrollBarV_SetNumCount},
    { "UIScrollBarV_GetNumCount", _wrap_UIScrollBarV_GetNumCount},
    { "UIScrollBarV_GetSelNum", _wrap_UIScrollBarV_GetSelNum},
    { "UIScrollBarV_SetSelNum", _wrap_UIScrollBarV_SetSelNum},
    { "UIScrollBarV_MoveUp", _wrap_UIScrollBarV_MoveUp},
    { "UIScrollBarV_MoveDown", _wrap_UIScrollBarV_MoveDown},
    { "UIScrollBarV_HomeScroll", _wrap_UIScrollBarV_HomeScroll},
    { "UIScrollBarV_EndScroll", _wrap_UIScrollBarV_EndScroll},
    { "UIScrollBarV_ResetNumCount", _wrap_UIScrollBarV_ResetNumCount},
    { "UIScrollBarV_SetBarRenderType", _wrap_UIScrollBarV_SetBarRenderType},
    { "UIScrollBarV_SetBarColor", _wrap_UIScrollBarV_SetBarColor},
    { "UIScrollBarV_SetBarInfo", _wrap_UIScrollBarV_SetBarInfo},
    { "UIScrollBarV_OnMouseWheel", _wrap_UIScrollBarV_OnMouseWheel},
    { "new_UIScrollBarV", _wrap_new_UIScrollBarV},
    { "delete_UIScrollBarV", _wrap_delete_UIScrollBarV},
    { "new_UIScrollBarH", _wrap_new_UIScrollBarH},
    { "delete_UIScrollBarH", _wrap_delete_UIScrollBarH},
    { "UIScrollListBox_SetupScrollBarV", _wrap_UIScrollListBox_SetupScrollBarV},
    { "UIScrollListBox_SetupScrollBarH", _wrap_UIScrollListBox_SetupScrollBarH},
    { "UIScrollListBox_SetPos", _wrap_UIScrollListBox_SetPos},
    { "UIScrollListBox_MovePos", _wrap_UIScrollListBox_MovePos},
    { "UIScrollListBox_GetListBox", _wrap_UIScrollListBox_GetListBox},
    { "UIScrollListBox_GetScrollBarV", _wrap_UIScrollListBox_GetScrollBarV},
    { "UIScrollListBox_GetScrollBarH", _wrap_UIScrollListBox_GetScrollBarH},
    { "UIScrollListBox_UnPickUp", _wrap_UIScrollListBox_UnPickUp},
    { "new_UIScrollListBox", _wrap_new_UIScrollListBox},
    { "delete_UIScrollListBox", _wrap_delete_UIScrollListBox},
    { "UIListBox_SetBarWidth", _wrap_UIListBox_SetBarWidth},
    { "UIListBox_SetDetectRect", _wrap_UIListBox_SetDetectRect},
    { "UIListBox_SetBarRect", _wrap_UIListBox_SetBarRect},
    { "UIListBox_AddString", _wrap_UIListBox_AddString},
    { "UIListBox_AddStringA", _wrap_UIListBox_AddStringA},
    { "UIListBox_DelString", _wrap_UIListBox_DelString},
    { "UIListBox_DrawFont", _wrap_UIListBox_DrawFont},
    { "UIListBox_UpSel", _wrap_UIListBox_UpSel},
    { "UIListBox_DownSel", _wrap_UIListBox_DownSel},
    { "UIListBox_Home", _wrap_UIListBox_Home},
    { "UIListBox_End", _wrap_UIListBox_End},
    { "UIListBox_PageUp", _wrap_UIListBox_PageUp},
    { "UIListBox_PageDown", _wrap_UIListBox_PageDown},
    { "UIListBox_GetBarPos", _wrap_UIListBox_GetBarPos},
    { "UIListBox_GetBarString", _wrap_UIListBox_GetBarString},
    { "UIListBox_GetStringListSize", _wrap_UIListBox_GetStringListSize},
    { "new_UIListBox", _wrap_new_UIListBox},
    { "delete_UIListBox", _wrap_delete_UIListBox},
    { "UIPopUpMenu_GetBarPos", _wrap_UIPopUpMenu_GetBarPos},
    { "UIPopUpMenu_GetBarString", _wrap_UIPopUpMenu_GetBarString},
    { "UIPopUpMenu_GetBarCode", _wrap_UIPopUpMenu_GetBarCode},
    { "UIPopUpMenu_GetStringListSize", _wrap_UIPopUpMenu_GetStringListSize},
    { "UIPopUpMenu_SetRenderStyle", _wrap_UIPopUpMenu_SetRenderStyle},
    { "UIPopUpMenu_GetRenderStyle", _wrap_UIPopUpMenu_GetRenderStyle},
    { "UIPopUpMenu_GetUIStaticText", _wrap_UIPopUpMenu_GetUIStaticText},
    { "UIPopUpMenu_SetLinePitch", _wrap_UIPopUpMenu_SetLinePitch},
    { "UIPopUpMenu_SetBarWidth", _wrap_UIPopUpMenu_SetBarWidth},
    { "UIPopUpMenu_SetSelBarColor", _wrap_UIPopUpMenu_SetSelBarColor},
    { "UIPopUpMenu_SetSelFontColor", _wrap_UIPopUpMenu_SetSelFontColor},
    { "new_UIPopUpMenu", _wrap_new_UIPopUpMenu},
    { "delete_UIPopUpMenu", _wrap_delete_UIPopUpMenu},
    { "UIDynamicText_SetSpeed", _wrap_UIDynamicText_SetSpeed},
    { "new_UIDynamicText", _wrap_new_UIDynamicText},
    { "delete_UIDynamicText", _wrap_delete_UIDynamicText},
    { "UIEditBox_ClearText", _wrap_UIEditBox_ClearText},
    { "UIEditBox_GetEditLimit", _wrap_UIEditBox_GetEditLimit},
    { "UIEditBox_GetText", _wrap_UIEditBox_GetText},
    { "UIEditBox_GetTextSize", _wrap_UIEditBox_GetTextSize},
    { "UIEditBox_Empty", _wrap_UIEditBox_Empty},
    { "UIEditBox_BackSpace", _wrap_UIEditBox_BackSpace},
    { "UIEditBox_InsertText", _wrap_UIEditBox_InsertText},
    { "UIEditBox_AddText",_wrap_UIEditBox_AddText},
    { "UIEditBox_SetText",_wrap_UIEditBox_SetText},
    { "UIEditBox_ClearWaitText", _wrap_UIEditBox_ClearWaitText},
    { "UIEditBox_AddWaitText",_wrap_UIEditBox_AddWaitText},
    { "UIEditBox_SendWaitText", _wrap_UIEditBox_SendWaitText},
    { "UIEditBox_SetFontColor", _wrap_UIEditBox_SetFontColor},
    { "UIEditBox_Redraw", _wrap_UIEditBox_Redraw},
    { "UIEditBox_SetRenderStyle", _wrap_UIEditBox_SetRenderStyle},
    { "UIEditBox_GetRenderStyle", _wrap_UIEditBox_GetRenderStyle},
    { "UIEditBox_GetInt", _wrap_UIEditBox_GetInt},
    { "UIEditBox_SetEditLimit", _wrap_UIEditBox_SetEditLimit},
    { "UIEditBox_Home", _wrap_UIEditBox_Home},
    { "UIEditBox_End", _wrap_UIEditBox_End},
    { "UIEditBox_CursorMoveLeft", _wrap_UIEditBox_CursorMoveLeft},
    { "UIEditBox_CursorMoveRight", _wrap_UIEditBox_CursorMoveRight},
    { "new_UIEditBox", _wrap_new_UIEditBox},
    { "delete_UIEditBox", _wrap_delete_UIEditBox},
    { "UIEditBoxEx_GetText", _wrap_UIEditBoxEx_GetText},
    { "UIEditBoxEx_GetTextSize", _wrap_UIEditBoxEx_GetTextSize},
    { "new_UIEditBoxEx", _wrap_new_UIEditBoxEx},
    { "delete_UIEditBoxEx", _wrap_delete_UIEditBoxEx},
    { "UIChatItem_SetPos", _wrap_UIChatItem_SetPos},
    { "UIChatItem_GetWidth", _wrap_UIChatItem_GetWidth},
    { "UIChatItem_GetHeight", _wrap_UIChatItem_GetHeight},
    { "UIChatItem_Detect", _wrap_UIChatItem_Detect},
    { "UIChatItem_UpdateDetectRect", _wrap_UIChatItem_UpdateDetectRect},
    { "UIChatItem_GetString", _wrap_UIChatItem_GetString},
    { "UIChatItem_GetLinkString", _wrap_UIChatItem_GetLinkString},
    { "UIChatItem_GetLinkSubString", _wrap_UIChatItem_GetLinkSubString},
    { "UIChatItem_SetLinkType", _wrap_UIChatItem_SetLinkType},
    { "UIChatItem_GetLinkType", _wrap_UIChatItem_GetLinkType},
    { "new_UIChatItem", _wrap_new_UIChatItem},
    { "delete_UIChatItem", _wrap_delete_UIChatItem},
    { "UIChatString_SetString", _wrap_UIChatString_SetString},
    { "UIChatString_SetStringA", _wrap_UIChatString_SetStringA},
    { "UIChatString_GetUIChatItemPtr", _wrap_UIChatString_GetUIChatItemPtr},
    { "UIChatString_GetString", _wrap_UIChatString_GetString},
    { "new_UIChatString", _wrap_new_UIChatString},
    { "delete_UIChatString", _wrap_delete_UIChatString},
    { "UIChatLink_GetLinkString", _wrap_UIChatLink_GetLinkString},
    { "UIChatLink_GetUIChatItemPtr", _wrap_UIChatLink_GetUIChatItemPtr},
    { "UIChatLink_GetUIChatStringPtr", _wrap_UIChatLink_GetUIChatStringPtr},
    { "new_UIChatLink", _wrap_new_UIChatLink},
    { "delete_UIChatLink", _wrap_delete_UIChatLink},
    { "UIChatRow_AddItem", _wrap_UIChatRow_AddItem},
    { "UIChatRow_GetChatItem", _wrap_UIChatRow_GetChatItem},
    { "UIChatRow_AddStringW", _wrap_UIChatRow_AddStringW},
    { "UIChatRow_AddStringA", _wrap_UIChatRow_AddStringA},
    { "UIChatRow_GetHeight", _wrap_UIChatRow_GetHeight},
    { "UIChatRow_GetWidth", _wrap_UIChatRow_GetWidth},
    { "new_UIChatRow", _wrap_new_UIChatRow},
    { "delete_UIChatRow", _wrap_delete_UIChatRow},
    { "UIChatPanel_CreateRow", _wrap_UIChatPanel_CreateRow},
    { "UIChatPanel_GetRow", _wrap_UIChatPanel_GetRow},
    { "UIChatPanel_GetLastRow", _wrap_UIChatPanel_GetLastRow},
    { "UIChatPanel_GetSafeLastRow", _wrap_UIChatPanel_GetSafeLastRow},
    { "UIChatPanel_CreatePrevBtn", _wrap_UIChatPanel_CreatePrevBtn},
    { "UIChatPanel_CreateNextBtn", _wrap_UIChatPanel_CreateNextBtn},
    { "UIChatPanel_CreateHomeBtn", _wrap_UIChatPanel_CreateHomeBtn},
    { "UIChatPanel_CreateEndBtn", _wrap_UIChatPanel_CreateEndBtn},
    { "UIChatPanel_Start2BottomRow", _wrap_UIChatPanel_Start2BottomRow},
    { "UIChatPanel_End2TopRow", _wrap_UIChatPanel_End2TopRow},
    { "UIChatPanel_UpRow", _wrap_UIChatPanel_UpRow},
    { "UIChatPanel_DownRow", _wrap_UIChatPanel_DownRow},
    { "UIChatPanel_HomeRow", _wrap_UIChatPanel_HomeRow},
    { "UIChatPanel_EndRow", _wrap_UIChatPanel_EndRow},
    { "UIChatPanel_SetRow", _wrap_UIChatPanel_SetRow},
    { "UIChatPanel_GetFontHeight", _wrap_UIChatPanel_GetFontHeight},
    { "UIChatPanel_SetEnableScroll", _wrap_UIChatPanel_SetEnableScroll},
    { "UIChatPanel_IsEnableScroll", _wrap_UIChatPanel_IsEnableScroll},
    { "UIChatPanel_ClearAllRow", _wrap_UIChatPanel_ClearAllRow},
    { "UIChatPanel_SetDetectRect", _wrap_UIChatPanel_SetDetectRect},
    { "UIChatPanel_SetImage", _wrap_UIChatPanel_SetImage},
    { "UIChatPanel_Redraw", _wrap_UIChatPanel_Redraw},
    { "UIChatPanel_FillImage", _wrap_UIChatPanel_FillImage},
    { "UIChatPanel_GetWidth", _wrap_UIChatPanel_GetWidth},
    { "UIChatPanel_GetHeight", _wrap_UIChatPanel_GetHeight},
    { "UIChatPanel_SetFontColor", _wrap_UIChatPanel_SetFontColor},
    { "UIChatPanel_AddStringA", _wrap_UIChatPanel_AddStringA},
    { "UIChatPanel_AddStringW", _wrap_UIChatPanel_AddStringW},
    { "UIChatPanel_AddStringWNoPrefix", _wrap_UIChatPanel_AddStringWNoPrefix},
    { "UIChatPanel_RowListCount", _wrap_UIChatPanel_RowListCount},
    { "UIChatPanel_GetHomeRow", _wrap_UIChatPanel_GetHomeRow},
    { "UIChatPanel_GetTotalHeight", _wrap_UIChatPanel_GetTotalHeight},
    { "UIChatPanel_GetAllRowHeight", _wrap_UIChatPanel_GetAllRowHeight},
    { "UIChatPanel_GetStartRowIndex", _wrap_UIChatPanel_GetStartRowIndex},
    { "UIChatPanel_GetEndRowIndex", _wrap_UIChatPanel_GetEndRowIndex},
    { "UIChatPanel_SetImageWH", _wrap_UIChatPanel_SetImageWH},
    { "UIChatPanel_SetContinueRun", _wrap_UIChatPanel_SetContinueRun},
    { "UIChatPanel_LockChatPanel", _wrap_UIChatPanel_LockChatPanel},
    { "UIChatPanel_UnLockChatPanel", _wrap_UIChatPanel_UnLockChatPanel},
    { "UIChatPanel_IsEndRow", _wrap_UIChatPanel_IsEndRow},
    { "UIChatPanel_IsStartRow", _wrap_UIChatPanel_IsStartRow},
    { "UIChatPanel_UpdateDetectRect", _wrap_UIChatPanel_UpdateDetectRect},
    { "UIChatPanel_GetLinkItem", _wrap_UIChatPanel_GetLinkItem},
    { "UIChatPanel_ClearLinkItem", _wrap_UIChatPanel_ClearLinkItem},
    { "new_UIChatPanel", _wrap_new_UIChatPanel},
    { "delete_UIChatPanel", _wrap_delete_UIChatPanel},
    { "UIChatEditPanel_LoadText", _wrap_UIChatEditPanel_LoadText},
    { "UIChatEditPanel_SaveText", _wrap_UIChatEditPanel_SaveText},
    { "new_UIChatEditPanel", _wrap_new_UIChatEditPanel},
    { "delete_UIChatEditPanel", _wrap_delete_UIChatEditPanel},
    { "new_UIMiniMap", _wrap_new_UIMiniMap},
    { "delete_UIMiniMap", _wrap_delete_UIMiniMap},
    { "UIMiniMap_SetupRatio", _wrap_UIMiniMap_SetupRatio},
    { "UIMiniMap_ResetPlayerPos", _wrap_UIMiniMap_ResetPlayerPos},
    { "UIMiniMap_SetImageA", _wrap_UIMiniMap_SetImageA},
    { "UIMiniMap_SetDefaultMask", _wrap_UIMiniMap_SetDefaultMask},
    { "UIMiniMap_SetPlayerImageA", _wrap_UIMiniMap_SetPlayerImageA},
    { "UIMiniMap_SetPlayerImageRect", _wrap_UIMiniMap_SetPlayerImageRect},
    { "UIPanel_SetDetectRect", _wrap_UIPanel_SetDetectRect},
    { "UIPanel_GetX", _wrap_UIPanel_GetX},
    { "UIPanel_GetY", _wrap_UIPanel_GetY},
    { "UIPanel_SetPos", _wrap_UIPanel_SetPos},
    { "UIPanel_SetRenderStyle", _wrap_UIPanel_SetRenderStyle},
    { "UIPanel_GetRenderStyle", _wrap_UIPanel_GetRenderStyle},
    { "UIPanel_SetEnable", _wrap_UIPanel_SetEnable},
    { "UIPanel_SetAllColor", _wrap_UIPanel_SetAllColor},
    { "UIPanel_GetMouseOver", _wrap_UIPanel_GetMouseOver},
    { "UIPanel_SetImageFileA", _wrap_UIPanel_SetImageFileA},
    { "UIPanel_SetTextureUI", _wrap_UIPanel_SetTextureUI},
    { "UIPanel_SetTextureWH", _wrap_UIPanel_SetTextureWH},
    { "UIPanel_SetWH", _wrap_UIPanel_SetWH},
    { "UIPanel_SetImageNil", _wrap_UIPanel_SetImageNil},
    { "UIPanel_AddUIItem", _wrap_UIPanel_AddUIItem},
    { "UIPanel_SetAutoDelete", _wrap_UIPanel_SetAutoDelete},
    { "UIPanel_SetLuaPerLButtonUp", _wrap_UIPanel_SetLuaPerLButtonUp},
    { "UIPanel_SetLuaPerRButtonUp", _wrap_UIPanel_SetLuaPerRButtonUp},
    { "UIPanel_Freeze", _wrap_UIPanel_Freeze},
    { "UIPanel_Unfreeze", _wrap_UIPanel_Unfreeze},
    { "UIPanel_IsFreeze", _wrap_UIPanel_IsFreeze},
    { "new_UIPanel", _wrap_new_UIPanel},
    { "delete_UIPanel", _wrap_delete_UIPanel},
    { "UIImage_SetDetectRect", _wrap_UIImage_SetDetectRect},
    { "UIImage_GetX", _wrap_UIImage_GetX},
    { "UIImage_GetY", _wrap_UIImage_GetY},
    { "UIImage_SetPos", _wrap_UIImage_SetPos},
    { "UIImage_SetImageFileA", _wrap_UIImage_SetImageFileA},
    { "UIImage_SetImageFile", _wrap_UIImage_SetImageFile},
    { "UIImage_SetImage", _wrap_UIImage_SetImage},
    { "UIImage_FillImage", _wrap_UIImage_FillImage},
    { "UIImage_SetWidth", _wrap_UIImage_SetWidth},
    { "UIImage_SetHeight", _wrap_UIImage_SetHeight},
    { "UIImage_Set2TopLeft", _wrap_UIImage_Set2TopLeft},
    { "UIImage_Set2BottomLeft", _wrap_UIImage_Set2BottomLeft},
    { "UIImage_Set2TopRight", _wrap_UIImage_Set2TopRight},
    { "UIImage_Set2BottomRight", _wrap_UIImage_Set2BottomRight},
    { "UIImage_SetAutoDelete", _wrap_UIImage_SetAutoDelete},
    { "UIImage_GetUIImagePtr", _wrap_UIImage_GetUIImagePtr},
    { "new_UIImage", _wrap_new_UIImage},
    { "delete_UIImage", _wrap_delete_UIImage},
    { "UILinerImage_SetDetectRect", _wrap_UILinerImage_SetDetectRect},
    { "UILinerImage_GetX", _wrap_UILinerImage_GetX},
    { "UILinerImage_GetY", _wrap_UILinerImage_GetY},
    { "UILinerImage_SetPos", _wrap_UILinerImage_SetPos},
    { "UILinerImage_SetImageFileA", _wrap_UILinerImage_SetImageFileA},
    { "UILinerImage_SetImageFile", _wrap_UILinerImage_SetImageFile},
    { "UILinerImage_SetWidth", _wrap_UILinerImage_SetWidth},
    { "UILinerImage_SetHeight", _wrap_UILinerImage_SetHeight},
    { "UILinerImage_SetLinerWidth", _wrap_UILinerImage_SetLinerWidth},
    { "UILinerImage_GetLinerWidth", _wrap_UILinerImage_GetLinerWidth},
    { "UILinerImage_SetBaseWidth", _wrap_UILinerImage_SetBaseWidth},
    { "UILinerImage_SetDenumerator", _wrap_UILinerImage_SetDenumerator},
    { "UILinerImage_SetNumerator", _wrap_UILinerImage_SetNumerator},
    { "UILinerImage_FullWidth", _wrap_UILinerImage_FullWidth},
    { "UILinerImage_SetRenderStyle", _wrap_UILinerImage_SetRenderStyle},
    { "UILinerImage_GetRenderStyle", _wrap_UILinerImage_GetRenderStyle},
    { "UILinerImage_Set2Top", _wrap_UILinerImage_Set2Top},
    { "UILinerImage_Set2Bottom", _wrap_UILinerImage_Set2Bottom},
    { "new_UILinerImage", _wrap_new_UILinerImage},
    { "delete_UILinerImage", _wrap_delete_UILinerImage},
    { "UILinerImageV_SetDetectRect", _wrap_UILinerImageV_SetDetectRect},
    { "UILinerImageV_GetX", _wrap_UILinerImageV_GetX},
    { "UILinerImageV_GetY", _wrap_UILinerImageV_GetY},
    { "UILinerImageV_SetPos", _wrap_UILinerImageV_SetPos},
    { "UILinerImageV_SetImageFileA", _wrap_UILinerImageV_SetImageFileA},
    { "UILinerImageV_SetImageFile", _wrap_UILinerImageV_SetImageFile},
    { "UILinerImageV_SetWidth", _wrap_UILinerImageV_SetWidth},
    { "UILinerImageV_SetHeight", _wrap_UILinerImageV_SetHeight},
    { "UILinerImageV_SetLinerHeight", _wrap_UILinerImageV_SetLinerHeight},
    { "UILinerImageV_GetLinerHeight", _wrap_UILinerImageV_GetLinerHeight},
    { "UILinerImageV_SetBaseHeight", _wrap_UILinerImageV_SetBaseHeight},
    { "UILinerImageV_SetDenumerator", _wrap_UILinerImageV_SetDenumerator},
    { "UILinerImageV_SetNumerator", _wrap_UILinerImageV_SetNumerator},
    { "UILinerImageV_FullWidth", _wrap_UILinerImageV_FullWidth},
    { "UILinerImageV_SetRenderStyle", _wrap_UILinerImageV_SetRenderStyle},
    { "UILinerImageV_GetRenderStyle", _wrap_UILinerImageV_GetRenderStyle},
    { "UILinerImageV_Set2Left", _wrap_UILinerImageV_Set2Left},
    { "UILinerImageV_Set2Right", _wrap_UILinerImageV_Set2Right},
    { "new_UILinerImageV", _wrap_new_UILinerImageV},
    { "delete_UILinerImageV", _wrap_delete_UILinerImageV},
    { "UIPanelEx_GetLineCount", _wrap_UIPanelEx_GetLineCount},
    { "UIPanelEx_ChangeCount", _wrap_UIPanelEx_ChangeCount},
    { "UIPanelEx_SetDetectRect", _wrap_UIPanelEx_SetDetectRect},
    { "UIPanelEx_GetX", _wrap_UIPanelEx_GetX},
    { "UIPanelEx_GetY", _wrap_UIPanelEx_GetY},
    { "UIPanelEx_SetPos", _wrap_UIPanelEx_SetPos},
    { "UIPanelEx_SetRenderStyle", _wrap_UIPanelEx_SetRenderStyle},
    { "UIPanelEx_GetRenderStyle", _wrap_UIPanelEx_GetRenderStyle},
    { "UIPanelEx_SetAllColor", _wrap_UIPanelEx_SetAllColor},
    { "UIPanelEx_GetLineRect", _wrap_UIPanelEx_GetLineRect},
    { "UIPanelEx_GetLineRectHeight", _wrap_UIPanelEx_GetLineRectHeight},
    { "UIPanelEx_SetEnable", _wrap_UIPanelEx_SetEnable},
    { "UIPanelEx_IsEnable", _wrap_UIPanelEx_IsEnable},
    { "UIPanelEx_SetLineRect", _wrap_UIPanelEx_SetLineRect},
    { "UIPanelEx_SetBottomRect", _wrap_UIPanelEx_SetBottomRect},
    { "new_UIPanelEx", _wrap_new_UIPanelEx},
    { "delete_UIPanelEx", _wrap_delete_UIPanelEx},
    { "ChatPool_Clear", _wrap_ChatPool_Clear},
    { "ChatPool_Add", _wrap_ChatPool_Add},
    { "ChatPool_GetStartMsg", _wrap_ChatPool_GetStartMsg},
    { "ChatPool_GetLastMsg", _wrap_ChatPool_GetLastMsg},
    { "ChatPool_GetNextMsg", _wrap_ChatPool_GetNextMsg},
    { "ChatPool_GetMsgFormIndex", _wrap_ChatPool_GetMsgFormIndex},
    { "ChatPool_GetIndex", _wrap_ChatPool_GetIndex},
    { "ChatPool_ResetCopyIndex", _wrap_ChatPool_ResetCopyIndex},
    { "ChatPool_GetCopyIndex", _wrap_ChatPool_GetCopyIndex},
    { "new_ChatPool", _wrap_new_ChatPool},
    { "delete_ChatPool", _wrap_delete_ChatPool},
    { "UIAniIcon_SetAnimationData", _wrap_UIAniIcon_SetAnimationData},
    { "UIAniIcon_SetAnimationIndex", _wrap_UIAniIcon_SetAnimationIndex},
    { "UIAniIcon_SetAnimationDataA",_wrap_UIAniIcon_SetAnimationDataA},
    { "UIAniIcon_SetRotation", _wrap_UIAniIcon_SetRotation},
    { "UIAniIcon_ClearAniData", _wrap_UIAniIcon_ClearAniData},
    { "UIAniIcon_LockResources", _wrap_UIAniIcon_LockResources},
    { "UIAniIcon_SetDetect", _wrap_UIAniIcon_SetDetect},
    { "UIAniIcon_SetAlign", _wrap_UIAniIcon_SetAlign},
    { "UIAniIcon_Update", _wrap_UIAniIcon_Update},
    { "UIAniIcon_UpdateNow", _wrap_UIAniIcon_UpdateNow},
    { "UIAniIcon_GetHasAni", _wrap_UIAniIcon_GetHasAni},
    { "new_UIAniIcon", _wrap_new_UIAniIcon},
    { "delete_UIAniIcon", _wrap_delete_UIAniIcon},
    { "new_UIManager", _wrap_new_UIManager},
    { "delete_UIManager", _wrap_delete_UIManager},
    { "UIManager_GetCursorX", _wrap_UIManager_GetCursorX},
    { "UIManager_GetCursorY", _wrap_UIManager_GetCursorY},
    { "UIManager_Detect", _wrap_UIManager_Detect},
    { "UIManager_RenderAll", _wrap_UIManager_RenderAll},
    { "UIManager_GetUIItem", _wrap_UIManager_GetUIItem},
    { "UIManager_GetWaitItem", _wrap_UIManager_GetWaitItem},
    { "UIManager_SetBackImageA", _wrap_UIManager_SetBackImageA},
    { "UIManager_RegisterImage", _wrap_UIManager_RegisterImage},
    { "UIManager_RegisterImageA", _wrap_UIManager_RegisterImageA},
    { "UIManager_SetIDName", _wrap_UIManager_SetIDName},
    { "UIManager_GetIDName", _wrap_UIManager_GetIDName},
    { "UIManager_FindUIPanel", _wrap_UIManager_FindUIPanel},
    { "UIManager_FindUIPanelEx", _wrap_UIManager_FindUIPanelEx},
    { "UIManager_FindUIStaticText", _wrap_UIManager_FindUIStaticText},
    { "UIManager_FindUIButton", _wrap_UIManager_FindUIButton},
    { "UIManager_FindUIEditBox", _wrap_UIManager_FindUIEditBox},
    { "UIManager_FindUIEditBoxEx", _wrap_UIManager_FindUIEditBoxEx},
    { "UIManager_FindUIPopUpMenu", _wrap_UIManager_FindUIPopUpMenu},
    { "UIManager_FindUIScrollBarV", _wrap_UIManager_FindUIScrollBarV},
    { "UIManager_FindUIChatPanel", _wrap_UIManager_FindUIChatPanel},
    { "UIManager_FindUIMiniMap", _wrap_UIManager_FindUIMiniMap},
    { "UIManager_FindUIImage", _wrap_UIManager_FindUIImage},
    { "UIManager_FindUILinerImage", _wrap_UIManager_FindUILinerImage},
    { "UIManager_FindUICheckBox", _wrap_UIManager_FindUICheckBox},
    { "UIManager_FindUIAniIcon", _wrap_UIManager_FindUIAniIcon},
    { "UIManager_AddLockUIPanel", _wrap_UIManager_AddLockUIPanel},
    { "UIManager_ClearLockUIPanel", _wrap_UIManager_ClearLockUIPanel},
    { "UIManager_LockPanelActive", _wrap_UIManager_LockPanelActive},
    { "UIManager_BasePanelActive", _wrap_UIManager_BasePanelActive},
    { "UIManager_SetMonoItem", _wrap_UIManager_SetMonoItem},
    { "UIManager_SetMonoPanel", _wrap_UIManager_SetMonoPanel},
    { "UIManager_SetMonoPanelEx", _wrap_UIManager_SetMonoPanelEx},
    { "UIManager_GetMonoItem", _wrap_UIManager_GetMonoItem},
    { "UIManager_GetMonoPanel", _wrap_UIManager_GetMonoPanel},
    { "UIManager_GetMonoPanelEx", _wrap_UIManager_GetMonoPanelEx},
    { "UIManager_ClearMonoPanel", _wrap_UIManager_ClearMonoPanel},
    { "UIManager_LockMonoPanel", _wrap_UIManager_LockMonoPanel},
    { "UIManager_UnlockMonoPanel", _wrap_UIManager_UnlockMonoPanel},
    { "UIManager_SetLockMonoPanel", _wrap_UIManager_SetLockMonoPanel},
    { "UIManager_IsLockMonoPanel", _wrap_UIManager_IsLockMonoPanel},
    { "UIManager_SetFollowPanel", _wrap_UIManager_SetFollowPanel},
    { "UIManager_ChangeFocus", _wrap_UIManager_ChangeFocus},
    { "UIManager_SetEvent", _wrap_UIManager_SetEvent},
    { "UIManager_GetEvent", _wrap_UIManager_GetEvent},
    { "UIManager_CatchEvent", _wrap_UIManager_CatchEvent},
    { "UIManager_SetLeaveTimerItem", _wrap_UIManager_SetLeaveTimerItem},
    { "UIManager_ClearLeaveTimerItem", _wrap_UIManager_ClearLeaveTimerItem},
    { "UIManager_SetMoveInTimerItem", _wrap_UIManager_SetMoveInTimerItem},
    { "UIManager_ClearMoveInTimerItem", _wrap_UIManager_ClearMoveInTimerItem},
    { "UIManager_ClearStateItem", _wrap_UIManager_ClearStateItem},
    { "UIManager_SetDragPanel2Top", _wrap_UIManager_SetDragPanel2Top},
    { "UIManager_CheckPanelOnTop", _wrap_UIManager_CheckPanelOnTop},
    { "UIManager_GetPanelOnTop", _wrap_UIManager_GetPanelOnTop},
    { "UIManager_ChangeParent", _wrap_UIManager_ChangeParent},
    { "UIManager_DeletePanel", _wrap_UIManager_DeletePanel},
    { "UIManager_AddDirtyUIItem", _wrap_UIManager_AddDirtyUIItem},
    { "UIManager_SetDefaultEnterFunc", _wrap_UIManager_SetDefaultEnterFunc},
    { "UIManager_AddUIID", _wrap_UIManager_AddUIID},
    { "UIManager_SetLuaFuncName", _wrap_UIManager_SetLuaFuncName},
    { "UIManager_ResetTipsPanel", _wrap_UIManager_ResetTipsPanel},
    { "UIManager_AddUIPanel", _wrap_UIManager_AddUIPanel},
    { "UIManager_AddUpdateUIItem", _wrap_UIManager_AddUpdateUIItem},
    { "UIManager_ResetDragItem", _wrap_UIManager_ResetDragItem},
    { "UIManager_StopDrag", _wrap_UIManager_StopDrag},
    { "UIManager_DragNow", _wrap_UIManager_DragNow},
    { "UIManager_SetDragItemXY", _wrap_UIManager_SetDragItemXY},
    { "UIManager_GetKeyInItem", _wrap_UIManager_GetKeyInItem},
    { "UIManager_SetKeyInItem", _wrap_UIManager_SetKeyInItem},
    { "UIManager_GetDropPanel", _wrap_UIManager_GetDropPanel},
    { "UIManager_CloseTips", _wrap_UIManager_CloseTips},
    { "UIManager_InsertToInOutEvent", _wrap_UIManager_InsertToInOutEvent},
    { "UIManager_RemoveFromInOutEvent", _wrap_UIManager_RemoveFromInOutEvent},
    { "UIManager_SetPanel2Top", _wrap_UIManager_SetPanel2Top},
    { "UIManager_SetPanelEx2Top", _wrap_UIManager_SetPanelEx2Top},
    { "UIManager_SetPanel2Bottom", _wrap_UIManager_SetPanel2Bottom},
    { "UIManager_SetPanelEx2Bottom", _wrap_UIManager_SetPanelEx2Bottom},
    { "UIManager_SetBackImage", _wrap_UIManager_SetBackImage},
    { "UIManager_GetBackImage", _wrap_UIManager_GetBackImage},
    { "UIManager_GetLuaState", _wrap_UIManager_GetLuaState},
    { "UIManager_LoadLuaUI", _wrap_UIManager_LoadLuaUI},
    { "UIManager_SetAllPanelDisable", _wrap_UIManager_SetAllPanelDisable},
    { "UIManager_RestoreAllPanelEnable", _wrap_UIManager_RestoreAllPanelEnable},
    { "UIManager_GetFocusItem", _wrap_UIManager_GetFocusItem},
    { "UIManager_UIItemSetEnable", _wrap_UIManager_UIItemSetEnable},
    { "UIManager_RemoveUpdateUIItem", _wrap_UIManager_RemoveUpdateUIItem},
    { "UIManager_FreezeAll", _wrap_UIManager_FreezeAll},
    { "UIManager_UnfreezeAll", _wrap_UIManager_UnfreezeAll},
    { "UIManager_IsFreeze", _wrap_UIManager_IsFreeze},
    { "GetUIManager", _wrap_GetUIManager},
    { "FSound_Close", _wrap_FSound_Close},
    { "FSound_Play", _wrap_FSound_Play},
    { "FSound_Stop", _wrap_FSound_Stop},
    { "FSound_Pause", _wrap_FSound_Pause},
    { "FSound_Resume", _wrap_FSound_Resume},
    { "FSound_SetVolume", _wrap_FSound_SetVolume},
    { "new_FSound", _wrap_new_FSound},
    { "delete_FSound", _wrap_delete_FSound},
    { "FSOUND_Manager_Init", _wrap_FSOUND_Manager_Init},
    { "FSOUND_Manager_Close", _wrap_FSOUND_Manager_Close},
    { "FSOUND_Manager_SetMusic", _wrap_FSOUND_Manager_SetMusic},
    { "FSOUND_Manager_PlayMusic", _wrap_FSOUND_Manager_PlayMusic},
    { "FSOUND_Manager_StopMusic", _wrap_FSOUND_Manager_StopMusic},
    { "FSOUND_Manager_PauseMusic", _wrap_FSOUND_Manager_PauseMusic},
    { "FSOUND_Manager_ResumeMusic", _wrap_FSOUND_Manager_ResumeMusic},
    { "FSOUND_Manager_MusicIsPlaying", _wrap_FSOUND_Manager_MusicIsPlaying},
    { "FSOUND_Manager_MusicSetVolume", _wrap_FSOUND_Manager_MusicSetVolume},
    { "FSOUND_Manager_CreateSoundA", _wrap_FSOUND_Manager_CreateSoundA},
    { "FSOUND_Manager_CreateSound", _wrap_FSOUND_Manager_CreateSound},
    { "FSOUND_Manager_GetSound",_wrap_FSOUND_Manager_GetSound},
    { "FSOUND_Manager_PauseAll", _wrap_FSOUND_Manager_PauseAll},
    { "FSOUND_Manager_ResumeAll", _wrap_FSOUND_Manager_ResumeAll},
    { "new_FSOUND_Manager", _wrap_new_FSOUND_Manager},
    { "delete_FSOUND_Manager", _wrap_delete_FSOUND_Manager},
    { "GetFSoundManager", _wrap_GetFSoundManager},
    { "CEntityBase_SetEntOffsetJumpY", _wrap_CEntityBase_SetEntOffsetJumpY},
    { "new_CEntityBase", _wrap_new_CEntityBase},
    { "delete_CEntityBase", _wrap_delete_CEntityBase},
    { "CAnimatedEntity_SetEntOffsetJumpY", _wrap_CAnimatedEntity_SetEntOffsetJumpY},
    { "CAnimatedEntity_AppendAnimationSet", _wrap_CAnimatedEntity_AppendAnimationSet},
    { "CAnimatedEntity_InitChainData", _wrap_CAnimatedEntity_InitChainData},
    { "CAnimatedEntity_PushChainData", _wrap_CAnimatedEntity_PushChainData},
    { "CAnimatedEntity_SetAnimIndexChain", _wrap_CAnimatedEntity_SetAnimIndexChain},
    { "CAnimatedEntity_SetSharkChain", _wrap_CAnimatedEntity_SetSharkChain},
    { "CAnimatedEntity_SetJumpDataChain", _wrap_CAnimatedEntity_SetJumpDataChain},
    { "CAnimatedEntity_SetChainStartTime", _wrap_CAnimatedEntity_SetChainStartTime},
    { "CAnimatedEntity_GetAnimationIndex", _wrap_CAnimatedEntity_GetAnimationIndex},
    { "CAnimatedEntity_GetAnimationRotation", _wrap_CAnimatedEntity_GetAnimationRotation},
    { "new_CAnimatedEntity", _wrap_new_CAnimatedEntity},
    { "delete_CAnimatedEntity", _wrap_delete_CAnimatedEntity},
    { "CMenuSkillProcess_UpdateSkillMenu", _wrap_CMenuSkillProcess_UpdateSkillMenu},
    { "CMenuSkillProcess_UpdateSubSkillMenu", _wrap_CMenuSkillProcess_UpdateSubSkillMenu},
    { "CMenuSkillProcess_UpdateMainSkillMenu", _wrap_CMenuSkillProcess_UpdateMainSkillMenu},
    { "CMenuSkillProcess_SkillMenuMainUp", _wrap_CMenuSkillProcess_SkillMenuMainUp},
    { "CMenuSkillProcess_SkillMenuMainDown", _wrap_CMenuSkillProcess_SkillMenuMainDown},
    { "CMenuSkillProcess_SkillMenuMainSubUp", _wrap_CMenuSkillProcess_SkillMenuMainSubUp},
    { "CMenuSkillProcess_SkillMenuMainSubDown", _wrap_CMenuSkillProcess_SkillMenuMainSubDown},
    { "CMenuSkillProcess_SkillMenuMainScroll", _wrap_CMenuSkillProcess_SkillMenuMainScroll},
    { "CMenuSkillProcess_SkillMenuSubScroll", _wrap_CMenuSkillProcess_SkillMenuSubScroll},
    { "CMenuSkillProcess_GetUseSkillID", _wrap_CMenuSkillProcess_GetUseSkillID},
    { "CMenuSkillProcess_UseSkill", _wrap_CMenuSkillProcess_UseSkill},
    { "CMenuSkillProcess_UseSkillID", _wrap_CMenuSkillProcess_UseSkillID},
    { "CMenuSkillProcess_OpenSkillDetail", _wrap_CMenuSkillProcess_OpenSkillDetail},
    { "CMenuSkillProcess_SetSkillDetailIndex", _wrap_CMenuSkillProcess_SetSkillDetailIndex},
    { "CMenuSkillProcess_SetSkillShop", _wrap_CMenuSkillProcess_SetSkillShop},
    { "CMenuSkillProcess_GetIsShop", _wrap_CMenuSkillProcess_GetIsShop},
    { "CMenuSkillProcess_ShopLearn", _wrap_CMenuSkillProcess_ShopLearn},
    { "CMenuSkillProcess_ResetPosition", _wrap_CMenuSkillProcess_ResetPosition},
    { "new_CMenuSkillProcess", _wrap_new_CMenuSkillProcess},
    { "delete_CMenuSkillProcess", _wrap_delete_CMenuSkillProcess},
    { "CMenuQuestLogProcess_CallMissionButtonEffect", _wrap_CMenuQuestLogProcess_CallMissionButtonEffect},
    { "CMenuQuestLogProcess_OnSelectQuestTrace", _wrap_CMenuQuestLogProcess_OnSelectQuestTrace},
    { "CMenuQuestLogProcess_OnSelectLogDType", _wrap_CMenuQuestLogProcess_OnSelectLogDType},
    { "CMenuQuestLogProcess_UpdateMainQuestLstUI", _wrap_CMenuQuestLogProcess_UpdateMainQuestLstUI},
    { "CMenuQuestLogProcess_OnUpdateNoteUI", _wrap_CMenuQuestLogProcess_OnUpdateNoteUI},
    { "CMenuQuestLogProcess_LuaMainLstUpRow", _wrap_CMenuQuestLogProcess_LuaMainLstUpRow},
    { "CMenuQuestLogProcess_LuaMainLstDownRow", _wrap_CMenuQuestLogProcess_LuaMainLstDownRow},
    { "CMenuQuestLogProcess_LuaMainLstScrollMove", _wrap_CMenuQuestLogProcess_LuaMainLstScrollMove},
    { "CMenuQuestLogProcess_LuaSubDescUpRow", _wrap_CMenuQuestLogProcess_LuaSubDescUpRow},
    { "CMenuQuestLogProcess_LuaSubDescDownRow", _wrap_CMenuQuestLogProcess_LuaSubDescDownRow},
    { "CMenuQuestLogProcess_LuaSubDescScrollMove", _wrap_CMenuQuestLogProcess_LuaSubDescScrollMove},
    { "CMenuQuestLogProcess_LuaUpdateSubDescScrollV", _wrap_CMenuQuestLogProcess_LuaUpdateSubDescScrollV},
    { "CMenuQuestLogProcess_LuaCancelQuestClient", _wrap_CMenuQuestLogProcess_LuaCancelQuestClient},
    { "new_CMenuQuestLogProcess", _wrap_new_CMenuQuestLogProcess},
    { "delete_CMenuQuestLogProcess", _wrap_delete_CMenuQuestLogProcess},
    { "CMenuPartnerProcess_UpdatePartnerMenu", _wrap_CMenuPartnerProcess_UpdatePartnerMenu},
    { "CMenuPartnerProcess_AttrUp", _wrap_CMenuPartnerProcess_AttrUp},
    { "CMenuPartnerProcess_AttrDown", _wrap_CMenuPartnerProcess_AttrDown},
    { "CMenuPartnerProcess_AddConfirm", _wrap_CMenuPartnerProcess_AddConfirm},
    { "CMenuPartnerProcess_SelectPartner", _wrap_CMenuPartnerProcess_SelectPartner},
    { "CMenuPartnerProcess_ScrollPartner", _wrap_CMenuPartnerProcess_ScrollPartner},
    { "CMenuPartnerProcess_SetFollow", _wrap_CMenuPartnerProcess_SetFollow},
    { "CMenuPartnerProcess_ResetValue", _wrap_CMenuPartnerProcess_ResetValue},
    { "CMenuPartnerProcess_ChangePartnerName", _wrap_CMenuPartnerProcess_ChangePartnerName},
    { "CMenuPartnerProcess_SetPartnerState", _wrap_CMenuPartnerProcess_SetPartnerState},
    { "CMenuPartnerProcess_ShowRemovePartnerName", _wrap_CMenuPartnerProcess_ShowRemovePartnerName},
    { "CMenuPartnerProcess_DeleteOnShowPartner", _wrap_CMenuPartnerProcess_DeleteOnShowPartner},
    { "CMenuPartnerProcess_UpdateStateButton", _wrap_CMenuPartnerProcess_UpdateStateButton},
    { "CMenuPartnerProcess_ShowSkillDetail", _wrap_CMenuPartnerProcess_ShowSkillDetail},
    { "CMenuPartnerProcess_UpdateBattleSkillMenu", _wrap_CMenuPartnerProcess_UpdateBattleSkillMenu},
    { "CMenuPartnerProcess_SelectSkill", _wrap_CMenuPartnerProcess_SelectSkill},
    { "CMenuPartnerProcess_ShortCutSelectSkill", _wrap_CMenuPartnerProcess_ShortCutSelectSkill},
    { "CMenuPartnerProcess_IsBattleSkillExist", _wrap_CMenuPartnerProcess_IsBattleSkillExist},
    { "CMenuPartnerProcess_GetSelectIndex", _wrap_CMenuPartnerProcess_GetSelectIndex},
    { "CMenuPartnerProcess_ShowPublicPartnerDetail", _wrap_CMenuPartnerProcess_ShowPublicPartnerDetail},
    { "CMenuPartnerProcess_HasPartner", _wrap_CMenuPartnerProcess_HasPartner},
    { "CMenuPartnerProcess_UpdatePartnerCollectionMenu", _wrap_CMenuPartnerProcess_UpdatePartnerCollectionMenu},
    { "CMenuPartnerProcess_ShowPartnerCollectionDetail", _wrap_CMenuPartnerProcess_ShowPartnerCollectionDetail},
    { "CMenuPartnerProcess_PartnerCollectionNextPage", _wrap_CMenuPartnerProcess_PartnerCollectionNextPage},
    { "CMenuPartnerProcess_PartnerCollectionUseBuffTemp", _wrap_CMenuPartnerProcess_PartnerCollectionUseBuffTemp},
    { "CMenuPartnerProcess_DragPartner", _wrap_CMenuPartnerProcess_DragPartner},
    { "CMenuPartnerProcess_AddPartnerCollection", _wrap_CMenuPartnerProcess_AddPartnerCollection},
    { "CMenuPartnerProcess_PartnerEatFastFood", _wrap_CMenuPartnerProcess_PartnerEatFastFood},
    { "new_CMenuPartnerProcess", _wrap_new_CMenuPartnerProcess},
    { "delete_CMenuPartnerProcess", _wrap_delete_CMenuPartnerProcess},
    { "CAntiHack_SetHack", _wrap_CAntiHack_SetHack},
    { "new_CAntiHack", _wrap_new_CAntiHack},
    { "delete_CAntiHack", _wrap_delete_CAntiHack},
    { "CMenuBankService_ConfirmBankAction", _wrap_CMenuBankService_ConfirmBankAction},
    { "CMenuBankService_CheckDepositAmount", _wrap_CMenuBankService_CheckDepositAmount},
    { "CMenuBankService_CheckWithdrawalAmount", _wrap_CMenuBankService_CheckWithdrawalAmount},
    { "CMenuBankService_RefreshInputValue", _wrap_CMenuBankService_RefreshInputValue},
    { "CMenuBankService_OpenDepositInterface", _wrap_CMenuBankService_OpenDepositInterface},
    { "CMenuBankService_OpenWithdrawalInterface", _wrap_CMenuBankService_OpenWithdrawalInterface},
    { "CMenuBankService_SetInputMoneyColour", _wrap_CMenuBankService_SetInputMoneyColour},
    { "new_CMenuBankService", _wrap_new_CMenuBankService},
    { "delete_CMenuBankService", _wrap_delete_CMenuBankService},
    { "CMenuGivenProcess_ResetAll", _wrap_CMenuGivenProcess_ResetAll},
    { "CMenuGivenProcess_SetTargetCharIDNameToPanel", _wrap_CMenuGivenProcess_SetTargetCharIDNameToPanel},
    { "CMenuGivenProcess_SetItem", _wrap_CMenuGivenProcess_SetItem},
    { "CMenuGivenProcess_RemoveItem", _wrap_CMenuGivenProcess_RemoveItem},
    { "CMenuGivenProcess_SetPartner", _wrap_CMenuGivenProcess_SetPartner},
    { "CMenuGivenProcess_RemovePartner", _wrap_CMenuGivenProcess_RemovePartner},
    { "CMenuGivenProcess_SetPet", _wrap_CMenuGivenProcess_SetPet},
    { "CMenuGivenProcess_RemovePet", _wrap_CMenuGivenProcess_RemovePet},
    { "CMenuGivenProcess_ConfirmGiven", _wrap_CMenuGivenProcess_ConfirmGiven},
    { "CMenuGivenProcess_IsNpcGiven", _wrap_CMenuGivenProcess_IsNpcGiven},
    { "CMenuGivenProcess_IsSuitableNpcGivenItem", _wrap_CMenuGivenProcess_IsSuitableNpcGivenItem},
    { "CMenuGivenProcess_IsSuitableNpcGivenPartner", _wrap_CMenuGivenProcess_IsSuitableNpcGivenPartner},
    { "CMenuGivenProcess_IsSuitableNpcGivenPet", _wrap_CMenuGivenProcess_IsSuitableNpcGivenPet},
    { "CMenuGivenProcess_ShowMoneyColour", _wrap_CMenuGivenProcess_ShowMoneyColour},
    { "new_CMenuGivenProcess", _wrap_new_CMenuGivenProcess},
    { "delete_CMenuGivenProcess", _wrap_delete_CMenuGivenProcess},
    { "CMenuItemProcess_NewUpdateItemMenu",_wrap_CMenuItemProcess_NewUpdateItemMenu},
    { "CMenuItemProcess_NewUpdateItemCharacter", _wrap_CMenuItemProcess_NewUpdateItemCharacter},
    { "CMenuItemProcess_UpdateItemPartner",_wrap_CMenuItemProcess_UpdateItemPartner},
    { "CMenuItemProcess_Scroll", _wrap_CMenuItemProcess_Scroll},
    { "CMenuItemProcess_UpdateItemMenu",_wrap_CMenuItemProcess_UpdateItemMenu},
    { "CMenuItemProcess_ResetScroll", _wrap_CMenuItemProcess_ResetScroll},
    { "CMenuItemProcess_ItemUse", _wrap_CMenuItemProcess_ItemUse},
    { "CMenuItemProcess_DragPartner", _wrap_CMenuItemProcess_DragPartner},
    { "CMenuItemProcess_GetSelectedPartnerID", _wrap_CMenuItemProcess_GetSelectedPartnerID},
    { "CMenuItemProcess_IsGivenPartner", _wrap_CMenuItemProcess_IsGivenPartner},
    { "CMenuItemProcess_GetItemStack", _wrap_CMenuItemProcess_GetItemStack},
    { "CMenuItemProcess_UpdateItemDetail", _wrap_CMenuItemProcess_UpdateItemDetail},
    { "CMenuItemProcess_ShowPublicItemDetail", _wrap_CMenuItemProcess_ShowPublicItemDetail},
    { "CMenuItemProcess_IsItemBind", _wrap_CMenuItemProcess_IsItemBind},
    { "CMenuItemProcess_IsItemGiven", _wrap_CMenuItemProcess_IsItemGiven},
    { "CMenuItemProcess_IsItemSent", _wrap_CMenuItemProcess_IsItemSent},
    { "CMenuItemProcess_NeedRedBox", _wrap_CMenuItemProcess_NeedRedBox},
    { "CMenuItemProcess_BindCantTrading",_wrap_CMenuItemProcess_BindCantTrading},
    { "CMenuItemProcess_UpdateItemPet",_wrap_CMenuItemProcess_UpdateItemPet},
    { "CMenuItemProcess_UpdateShortCutSlot", _wrap_CMenuItemProcess_UpdateShortCutSlot},
    { "CMenuItemProcess_DragPet", _wrap_CMenuItemProcess_DragPet},
    { "CMenuItemProcess_IsGivenPet", _wrap_CMenuItemProcess_IsGivenPet},
    { "CMenuItemProcess_GetSelectedPetID", _wrap_CMenuItemProcess_GetSelectedPetID},
    { "CMenuItemProcess_IsItemSellable", _wrap_CMenuItemProcess_IsItemSellable},
    { "CMenuItemProcess_GetMenuSelectedPartnerIndex", _wrap_CMenuItemProcess_GetMenuSelectedPartnerIndex},
    { "CMenuItemProcess_GetMenuSelectedPetIndex", _wrap_CMenuItemProcess_GetMenuSelectedPetIndex},
    { "CMenuItemProcess_ResetIdentify", _wrap_CMenuItemProcess_ResetIdentify},
    { "CMenuItemProcess_IdentifyItem", _wrap_CMenuItemProcess_IdentifyItem},
    { "CMenuItemProcess_ConfirmAssetLockPassword", _wrap_CMenuItemProcess_ConfirmAssetLockPassword},
    { "CMenuItemProcess_ConfirmAssetUnLockPassword", _wrap_CMenuItemProcess_ConfirmAssetUnLockPassword},
    { "CMenuItemProcess_IsPartnerLocked", _wrap_CMenuItemProcess_IsPartnerLocked},
    { "CMenuItemProcess_IsPetLocked", _wrap_CMenuItemProcess_IsPetLocked},
    { "CMenuItemProcess_ForceResetAssetPassword", _wrap_CMenuItemProcess_ForceResetAssetPassword},
    { "CMenuItemProcess_JpackBag", _wrap_CMenuItemProcess_JpackBag},
    { "new_CMenuItemProcess", _wrap_new_CMenuItemProcess},
    { "delete_CMenuItemProcess", _wrap_delete_CMenuItemProcess},
    { "CBigMap_DrawButton", _wrap_CBigMap_DrawButton},
    { "CBigMap_GetButtonCount", _wrap_CBigMap_GetButtonCount},
    { "CBigMap_ShowPath", _wrap_CBigMap_ShowPath},
    { "CBigMap_StartBigMapDescMode", _wrap_CBigMap_StartBigMapDescMode},
    { "CBigMap_ShowDesc", _wrap_CBigMap_ShowDesc},
    { "CBigMap_DisableAllFlag", _wrap_CBigMap_DisableAllFlag},
    { "CBigMap_ResetDes", _wrap_CBigMap_ResetDes},
    { "CBigMap_SetOpenBigMap", _wrap_CBigMap_SetOpenBigMap},
    { "new_CBigMap", _wrap_new_CBigMap},
    { "delete_CBigMap", _wrap_delete_CBigMap},
    { "CMenuOnlineShopProcess_ShowCap", _wrap_CMenuOnlineShopProcess_ShowCap},
    { "CMenuOnlineShopProcess_ShowHotSale", _wrap_CMenuOnlineShopProcess_ShowHotSale},
    { "CMenuOnlineShopProcess_ShowMix", _wrap_CMenuOnlineShopProcess_ShowMix},
    { "CMenuOnlineShopProcess_ShowAssc", _wrap_CMenuOnlineShopProcess_ShowAssc},
    { "CMenuOnlineShopProcess_ShowPet", _wrap_CMenuOnlineShopProcess_ShowPet},
    { "CMenuOnlineShopProcess_ShowDiamond", _wrap_CMenuOnlineShopProcess_ShowDiamond},
    { "CMenuOnlineShopProcess_ShowBook", _wrap_CMenuOnlineShopProcess_ShowBook},
    { "CMenuOnlineShopProcess_ShowMould", _wrap_CMenuOnlineShopProcess_ShowMould},
    { "CMenuOnlineShopProcess_ShowFireworks", _wrap_CMenuOnlineShopProcess_ShowFireworks},
    { "CMenuOnlineShopProcess_ShowPartner", _wrap_CMenuOnlineShopProcess_ShowPartner},
    { "CMenuOnlineShopProcess_ShowCloth", _wrap_CMenuOnlineShopProcess_ShowCloth},
    { "CMenuOnlineShopProcess_ShowOther", _wrap_CMenuOnlineShopProcess_ShowOther},
    { "CMenuOnlineShopProcess_ShowLimitedItem", _wrap_CMenuOnlineShopProcess_ShowLimitedItem},
    { "CMenuOnlineShopProcess_ShowDiscountItem", _wrap_CMenuOnlineShopProcess_ShowDiscountItem},
    { "CMenuOnlineShopProcess_GetShowIndex", _wrap_CMenuOnlineShopProcess_GetShowIndex},
    { "CMenuOnlineShopProcess_GetPageNo", _wrap_CMenuOnlineShopProcess_GetPageNo},
    { "CMenuOnlineShopProcess_GetSelectedIndex", _wrap_CMenuOnlineShopProcess_GetSelectedIndex},
    { "CMenuOnlineShopProcess_GetSelectedDiscountIndex", _wrap_CMenuOnlineShopProcess_GetSelectedDiscountIndex},
    { "CMenuOnlineShopProcess_GetSelectedLimitedIndex", _wrap_CMenuOnlineShopProcess_GetSelectedLimitedIndex},
    { "CMenuOnlineShopProcess_ResetSelectedIndex", _wrap_CMenuOnlineShopProcess_ResetSelectedIndex},
    { "CMenuOnlineShopProcess_ResetSelectedDiscountIndex", _wrap_CMenuOnlineShopProcess_ResetSelectedDiscountIndex},
    { "CMenuOnlineShopProcess_ResetSelectedLimitedIndex", _wrap_CMenuOnlineShopProcess_ResetSelectedLimitedIndex},
    { "CMenuOnlineShopProcess_SetSelectedIndex", _wrap_CMenuOnlineShopProcess_SetSelectedIndex},
    { "CMenuOnlineShopProcess_SetSelectedDiscountIndex", _wrap_CMenuOnlineShopProcess_SetSelectedDiscountIndex},
    { "CMenuOnlineShopProcess_SetSelectedLimitedIndex", _wrap_CMenuOnlineShopProcess_SetSelectedLimitedIndex},
    { "CMenuOnlineShopProcess_AskForOnlineShop", _wrap_CMenuOnlineShopProcess_AskForOnlineShop},
    { "CMenuOnlineShopProcess_CloseOnlineShop", _wrap_CMenuOnlineShopProcess_CloseOnlineShop},
    { "CMenuOnlineShopProcess_NextPage", _wrap_CMenuOnlineShopProcess_NextPage},
    { "CMenuOnlineShopProcess_PrevPage", _wrap_CMenuOnlineShopProcess_PrevPage},
    { "CMenuOnlineShopProcess_ShowItemDetail", _wrap_CMenuOnlineShopProcess_ShowItemDetail},
    { "CMenuOnlineShopProcess_ShowDiscountItemDetail", _wrap_CMenuOnlineShopProcess_ShowDiscountItemDetail},
    { "CMenuOnlineShopProcess_ShowLimitedItemDetail", _wrap_CMenuOnlineShopProcess_ShowLimitedItemDetail},
    { "CMenuOnlineShopProcess_GetSelectedItemType", _wrap_CMenuOnlineShopProcess_GetSelectedItemType},
    { "CMenuOnlineShopProcess_GetSelectedItemPrice", _wrap_CMenuOnlineShopProcess_GetSelectedItemPrice},
    { "CMenuOnlineShopProcess_GetMaxSelectedItemStack", _wrap_CMenuOnlineShopProcess_GetMaxSelectedItemStack},
    { "CMenuOnlineShopProcess_SetBuyItemStack", _wrap_CMenuOnlineShopProcess_SetBuyItemStack},
    { "CMenuOnlineShopProcess_ConfirmBuyItem", _wrap_CMenuOnlineShopProcess_ConfirmBuyItem},
    { "CMenuOnlineShopProcess_GetSelectedItemOverLap", _wrap_CMenuOnlineShopProcess_GetSelectedItemOverLap},
    { "CMenuOnlineShopProcess_Preview", _wrap_CMenuOnlineShopProcess_Preview},
    { "CMenuOnlineShopProcess_PreviewRotate", _wrap_CMenuOnlineShopProcess_PreviewRotate},
    { "CMenuOnlineShopProcess_ShowLackMoneyMessage", _wrap_CMenuOnlineShopProcess_ShowLackMoneyMessage},
    { "CMenuOnlineShopProcess_OpenChargeShopWebSite", _wrap_CMenuOnlineShopProcess_OpenChargeShopWebSite},
    { "CMenuOnlineShopProcess_UpdateYuanBao",_wrap_CMenuOnlineShopProcess_UpdateYuanBao},
    { "new_CMenuOnlineShopProcess", _wrap_new_CMenuOnlineShopProcess},
    { "delete_CMenuOnlineShopProcess", _wrap_delete_CMenuOnlineShopProcess},
    { "CMenuGiftBox_ShowGiftBoxItem", _wrap_CMenuGiftBox_ShowGiftBoxItem},
    { "CMenuGiftBox_ShowGiftBoxPartner", _wrap_CMenuGiftBox_ShowGiftBoxPartner},
    { "CMenuGiftBox_ShowGiftBoxPet", _wrap_CMenuGiftBox_ShowGiftBoxPet},
    { "CMenuGiftBox_ShowConfirmGetGiftName", _wrap_CMenuGiftBox_ShowConfirmGetGiftName},
    { "CMenuGiftBox_ConfirmGetGift", _wrap_CMenuGiftBox_ConfirmGetGift},
    { "CMenuGiftBox_ShowDetail", _wrap_CMenuGiftBox_ShowDetail},
    { "CMenuGiftBox_CloseGiftBox", _wrap_CMenuGiftBox_CloseGiftBox},
    { "CMenuGiftBox_UpdateGiftBoxFromServer", _wrap_CMenuGiftBox_UpdateGiftBoxFromServer},
    { "new_CMenuGiftBox", _wrap_new_CMenuGiftBox},
    { "delete_CMenuGiftBox", _wrap_delete_CMenuGiftBox},
    { "ChatLst_GetEntity", _wrap_ChatLst_GetEntity},
    { "ChatLst_GetNext", _wrap_ChatLst_GetNext},
    { "ChatLst_Init", _wrap_ChatLst_Init},
    { "new_ChatLst", _wrap_new_ChatLst},
    { "delete_ChatLst", _wrap_delete_ChatLst},
    { "CBatBubbleControl_LuaAddBatBubble", _wrap_CBatBubbleControl_LuaAddBatBubble},
    { "CBatBubbleControl_LuaAddEnemyDialogue", _wrap_CBatBubbleControl_LuaAddEnemyDialogue},
    { "CBatBubbleControl_LuaGetMobIdCount", _wrap_CBatBubbleControl_LuaGetMobIdCount},
    { "CBatBubbleControl_LuaGetMobId", _wrap_CBatBubbleControl_LuaGetMobId},
    { "CBatBubbleControl_LuaGetMobDialgoueFile", _wrap_CBatBubbleControl_LuaGetMobDialgoueFile},
    { "new_CBatBubbleControl", _wrap_new_CBatBubbleControl},
    { "delete_CBatBubbleControl", _wrap_delete_CBatBubbleControl},
    { "CMenuTargetProcess_PopUpFunctionCall", _wrap_CMenuTargetProcess_PopUpFunctionCall},
    { "CMenuTargetProcess_ShowTargetPopUp", _wrap_CMenuTargetProcess_ShowTargetPopUp},
    { "CMenuTargetProcess_HideTargetMenu", _wrap_CMenuTargetProcess_HideTargetMenu},
    { "CMenuTargetProcess_UpdateInfo", _wrap_CMenuTargetProcess_UpdateInfo},
    { "CMenuTargetProcess_FindCharNameFriend", _wrap_CMenuTargetProcess_FindCharNameFriend},
    { "CMenuTargetProcess_PrivateMsg", _wrap_CMenuTargetProcess_PrivateMsg},
    { "CMenuTargetProcess_AddToFriend", _wrap_CMenuTargetProcess_AddToFriend},
    { "CMenuTargetProcess_ChangeGrp", _wrap_CMenuTargetProcess_ChangeGrp},
    { "CMenuTargetProcess_BreakRelation", _wrap_CMenuTargetProcess_BreakRelation},
    { "CMenuTargetProcess_BlackList", _wrap_CMenuTargetProcess_BlackList},
    { "new_CMenuTargetProcess", _wrap_new_CMenuTargetProcess},
    { "delete_CMenuTargetProcess", _wrap_delete_CMenuTargetProcess},
    { "CMenuBuffIconProcess_HideAllBuff", _wrap_CMenuBuffIconProcess_HideAllBuff},
    { "CMenuBuffIconProcess_ShowBuffIcon", _wrap_CMenuBuffIconProcess_ShowBuffIcon},
    { "CMenuBuffIconProcess_OpenBuffDetail", _wrap_CMenuBuffIconProcess_OpenBuffDetail},
    { "CMenuBuffIconProcess_HideBuffDetail", _wrap_CMenuBuffIconProcess_HideBuffDetail},
    { "new_CMenuBuffIconProcess", _wrap_new_CMenuBuffIconProcess},
    { "delete_CMenuBuffIconProcess", _wrap_delete_CMenuBuffIconProcess},
    { "CMenuFriendProcess_ConstructData", _wrap_CMenuFriendProcess_ConstructData},
    { "CMenuFriendProcess_RefreshMenu", _wrap_CMenuFriendProcess_RefreshMenu},
    { "CMenuFriendProcess_PageUp", _wrap_CMenuFriendProcess_PageUp},
    { "CMenuFriendProcess_PageDown", _wrap_CMenuFriendProcess_PageDown},
    { "CMenuFriendProcess_ChangeGroup", _wrap_CMenuFriendProcess_ChangeGroup},
    { "CMenuFriendProcess_GetStartIndex", _wrap_CMenuFriendProcess_GetStartIndex},
    { "CMenuFriendProcess_OpenFriendChat", _wrap_CMenuFriendProcess_OpenFriendChat},
    { "CMenuFriendProcess_SendMessageToFriend", _wrap_CMenuFriendProcess_SendMessageToFriend},
    { "CMenuFriendProcess_RefreshSelfSetting", _wrap_CMenuFriendProcess_RefreshSelfSetting},
    { "CMenuFriendProcess_OpenHistory", _wrap_CMenuFriendProcess_OpenHistory},
    { "CMenuFriendProcess_FindFriend", _wrap_CMenuFriendProcess_FindFriend},
    { "CMenuFriendProcess_RefreshPopUp", _wrap_CMenuFriendProcess_RefreshPopUp},
    { "CMenuFriendProcess_MoveGroup", _wrap_CMenuFriendProcess_MoveGroup},
    { "CMenuFriendProcess_MoveGroupImm", _wrap_CMenuFriendProcess_MoveGroupImm},
    { "CMenuFriendProcess_SetChangeGroup", _wrap_CMenuFriendProcess_SetChangeGroup},
    { "CMenuFriendProcess_OpenFriendDetail", _wrap_CMenuFriendProcess_OpenFriendDetail},
    { "CMenuFriendProcess_OpenTalkingFriendDetail", _wrap_CMenuFriendProcess_OpenTalkingFriendDetail},
    { "CMenuFriendProcess_ConfirmChangeToGroup", _wrap_CMenuFriendProcess_ConfirmChangeToGroup},
    { "CMenuFriendProcess_ConfirmSettingChange", _wrap_CMenuFriendProcess_ConfirmSettingChange},
    { "CMenuFriendProcess_NextChatMessage", _wrap_CMenuFriendProcess_NextChatMessage},
    { "CMenuFriendProcess_HasNextMessage", _wrap_CMenuFriendProcess_HasNextMessage},
    { "CMenuFriendProcess_FriendScroll", _wrap_CMenuFriendProcess_FriendScroll},
    { "CMenuFriendProcess_FriendChatScroll", _wrap_CMenuFriendProcess_FriendChatScroll},
    { "CMenuFriendProcess_FriendHisScroll", _wrap_CMenuFriendProcess_FriendHisScroll},
    { "CMenuFriendProcess_ConfirmDelete", _wrap_CMenuFriendProcess_ConfirmDelete},
    { "CMenuFriendProcess_ResetTalkingTarget", _wrap_CMenuFriendProcess_ResetTalkingTarget},
    { "CMenuFriendProcess_ClearHistory", _wrap_CMenuFriendProcess_ClearHistory},
    { "new_CMenuFriendProcess", _wrap_new_CMenuFriendProcess},
    { "delete_CMenuFriendProcess", _wrap_delete_CMenuFriendProcess},
    { "CMenuGuildProcess_RefreshInfoMenu", _wrap_CMenuGuildProcess_RefreshInfoMenu},
    { "CMenuGuildProcess_RefreshMemberMenu", _wrap_CMenuGuildProcess_RefreshMemberMenu},
    { "CMenuGuildProcess_RefreshRuleMenu", _wrap_CMenuGuildProcess_RefreshRuleMenu},
    { "CMenuGuildProcess_RefreshApplicantMenu", _wrap_CMenuGuildProcess_RefreshApplicantMenu},
    { "CMenuGuildProcess_RefreshManorMenu", _wrap_CMenuGuildProcess_RefreshManorMenu},
    { "CMenuGuildProcess_RequestMemberInfo", _wrap_CMenuGuildProcess_RequestMemberInfo},
    { "CMenuGuildProcess_RequestApplicantInfo", _wrap_CMenuGuildProcess_RequestApplicantInfo},
    { "CMenuGuildProcess_RequestGuildInfo", _wrap_CMenuGuildProcess_RequestGuildInfo},
    { "CMenuGuildProcess_RefreshPostMenu", _wrap_CMenuGuildProcess_RefreshPostMenu},
    { "CMenuGuildProcess_RefreshGuildAimEdit", _wrap_CMenuGuildProcess_RefreshGuildAimEdit},
    { "CMenuGuildProcess_RefreshGuildRuleEdit", _wrap_CMenuGuildProcess_RefreshGuildRuleEdit},
    { "CMenuGuildProcess_ConfirmGuildAimChange", _wrap_CMenuGuildProcess_ConfirmGuildAimChange},
    { "CMenuGuildProcess_ConfirmGuildRuleChange", _wrap_CMenuGuildProcess_ConfirmGuildRuleChange},
    { "CMenuGuildProcess_HasGuild", _wrap_CMenuGuildProcess_HasGuild},
    { "CMenuGuildProcess_RefreshGuildApplyPanel", _wrap_CMenuGuildProcess_RefreshGuildApplyPanel},
    { "CMenuGuildProcess_ShowAim", _wrap_CMenuGuildProcess_ShowAim},
    { "CMenuGuildProcess_ApplyConfirm", _wrap_CMenuGuildProcess_ApplyConfirm},
    { "CMenuGuildProcess_AddGuildMember", _wrap_CMenuGuildProcess_AddGuildMember},
    { "CMenuGuildProcess_RejectGuildMember", _wrap_CMenuGuildProcess_RejectGuildMember},
    { "CMenuGuildProcess_SetMenuIndex", _wrap_CMenuGuildProcess_SetMenuIndex},
    { "CMenuGuildProcess_SetGuildPostSelectIndex", _wrap_CMenuGuildProcess_SetGuildPostSelectIndex},
    { "CMenuGuildProcess_DeleteGuildMember", _wrap_CMenuGuildProcess_DeleteGuildMember},
    { "CMenuGuildProcess_ConfirmPostChange", _wrap_CMenuGuildProcess_ConfirmPostChange},
    { "CMenuGuildProcess_ShowInfo", _wrap_CMenuGuildProcess_ShowInfo},
    { "CMenuGuildProcess_RefreshGuildButton", _wrap_CMenuGuildProcess_RefreshGuildButton},
    { "CMenuGuildProcess_ConfirmDonate", _wrap_CMenuGuildProcess_ConfirmDonate},
    { "CMenuGuildProcess_ConfirmGuildNameInput", _wrap_CMenuGuildProcess_ConfirmGuildNameInput},
    { "CMenuGuildProcess_CancelGuildNameInput", _wrap_CMenuGuildProcess_CancelGuildNameInput},
    { "CMenuGuildProcess_GetSelectedMember", _wrap_CMenuGuildProcess_GetSelectedMember},
    { "CMenuGuildProcess_ScrollMember", _wrap_CMenuGuildProcess_ScrollMember},
    { "CMenuGuildProcess_MemberPageUp", _wrap_CMenuGuildProcess_MemberPageUp},
    { "CMenuGuildProcess_MemberPageDown", _wrap_CMenuGuildProcess_MemberPageDown},
    { "CMenuGuildProcess_ScrollGuildApply", _wrap_CMenuGuildProcess_ScrollGuildApply},
    { "CMenuGuildProcess_GuildApplyPageUp", _wrap_CMenuGuildProcess_GuildApplyPageUp},
    { "CMenuGuildProcess_GuildApplyPageDown", _wrap_CMenuGuildProcess_GuildApplyPageDown},
    { "CMenuGuildProcess_LeaveGuild", _wrap_CMenuGuildProcess_LeaveGuild},
    { "CMenuGuildProcess_IsSelectedMember", _wrap_CMenuGuildProcess_IsSelectedMember},
    { "CMenuGuildProcess_FreeGuild", _wrap_CMenuGuildProcess_FreeGuild},
    { "CMenuGuildProcess_SortMember", _wrap_CMenuGuildProcess_SortMember},
    { "CMenuGuildProcess_RefreshGuildBusinessLogPanel", _wrap_CMenuGuildProcess_RefreshGuildBusinessLogPanel},
    { "CMenuGuildProcess_ScrollGuildBusinessLog", _wrap_CMenuGuildProcess_ScrollGuildBusinessLog},
    { "CMenuGuildProcess_GuildBusinessLogPageUp", _wrap_CMenuGuildProcess_GuildBusinessLogPageUp},
    { "CMenuGuildProcess_GuildBusinessLogPageDown", _wrap_CMenuGuildProcess_GuildBusinessLogPageDown},
    { "CMenuGuildProcess_ConfirmGuildBusinessLogSearchYes", _wrap_CMenuGuildProcess_ConfirmGuildBusinessLogSearchYes},
    { "CMenuGuildProcess_SetGuildBusinessLogSelectIndex", _wrap_CMenuGuildProcess_SetGuildBusinessLogSelectIndex},
    { "CMenuGuildProcess_ClearGuildBusinessLog", _wrap_CMenuGuildProcess_ClearGuildBusinessLog},
    { "new_CMenuGuildProcess", _wrap_new_CMenuGuildProcess},
    { "delete_CMenuGuildProcess", _wrap_delete_CMenuGuildProcess},
    { "CMenuPetProcess_ResetMenu", _wrap_CMenuPetProcess_ResetMenu},
    { "CMenuPetProcess_RefreshMenu", _wrap_CMenuPetProcess_RefreshMenu},
    { "CMenuPetProcess_PageUp", _wrap_CMenuPetProcess_PageUp},
    { "CMenuPetProcess_PageDown", _wrap_CMenuPetProcess_PageDown},
    { "CMenuPetProcess_Scroll", _wrap_CMenuPetProcess_Scroll},
    { "CMenuPetProcess_SetSelIndex", _wrap_CMenuPetProcess_SetSelIndex},
    { "CMenuPetProcess_UsePet", _wrap_CMenuPetProcess_UsePet},
    { "CMenuPetProcess_PetRest", _wrap_CMenuPetProcess_PetRest},
    { "CMenuPetProcess_DumpPet", _wrap_CMenuPetProcess_DumpPet},
    { "CMenuPetProcess_ChangePetName", _wrap_CMenuPetProcess_ChangePetName},
    { "CMenuPetProcess_ShowRemovePetName", _wrap_CMenuPetProcess_ShowRemovePetName},
    { "CMenuPetProcess_OpenPetSkillDetail", _wrap_CMenuPetProcess_OpenPetSkillDetail},
    { "CMenuPetProcess_ClosePetSkillDetail", _wrap_CMenuPetProcess_ClosePetSkillDetail},
    { "CMenuPetProcess_ShowPublicPetDetail", _wrap_CMenuPetProcess_ShowPublicPetDetail},
    { "CMenuPetProcess_GetPetSelectIndex", _wrap_CMenuPetProcess_GetPetSelectIndex},
    { "CMenuPetProcess_HasPet", _wrap_CMenuPetProcess_HasPet},
    { "CMenuPetProcess_PetCanUseItem", _wrap_CMenuPetProcess_PetCanUseItem},
    { "CMenuPetProcess_SetUseFoodItem", _wrap_CMenuPetProcess_SetUseFoodItem},
    { "CMenuPetProcess_CanEatFood", _wrap_CMenuPetProcess_CanEatFood},
    { "CMenuPetProcess_ReSetFoodUseItem", _wrap_CMenuPetProcess_ReSetFoodUseItem},
    { "CMenuPetProcess_PetUseFood", _wrap_CMenuPetProcess_PetUseFood},
    { "CMenuPetProcess_InitUsePetFoodPanel", _wrap_CMenuPetProcess_InitUsePetFoodPanel},
    { "new_CMenuPetProcess", _wrap_new_CMenuPetProcess},
    { "delete_CMenuPetProcess", _wrap_delete_CMenuPetProcess},
    { "CMenuHelpProcess_RefreshMenu", _wrap_CMenuHelpProcess_RefreshMenu},
    { "CMenuHelpProcess_PageUp", _wrap_CMenuHelpProcess_PageUp},
    { "CMenuHelpProcess_PageDown", _wrap_CMenuHelpProcess_PageDown},
    { "CMenuHelpProcess_IsOpenChange", _wrap_CMenuHelpProcess_IsOpenChange},
    { "CMenuHelpProcess_ShowTextContent",_wrap_CMenuHelpProcess_ShowTextContent},
    { "CMenuHelpProcess_SearchContent", _wrap_CMenuHelpProcess_SearchContent},
    { "CMenuHelpProcess_ResetSearch", _wrap_CMenuHelpProcess_ResetSearch},
    { "CMenuHelpProcess_SetIndex", _wrap_CMenuHelpProcess_SetIndex},
    { "CMenuHelpProcess_CalOpenCount", _wrap_CMenuHelpProcess_CalOpenCount},
    { "CMenuHelpProcess_HandleEvent", _wrap_CMenuHelpProcess_HandleEvent},
    { "CMenuHelpProcess_HandleGuideEvent", _wrap_CMenuHelpProcess_HandleGuideEvent},
    { "CMenuHelpProcess_CloseNewGuide", _wrap_CMenuHelpProcess_CloseNewGuide},
    { "new_CMenuHelpProcess", _wrap_new_CMenuHelpProcess},
    { "delete_CMenuHelpProcess", _wrap_delete_CMenuHelpProcess},
    { "CMenuRankProcess_RefreshMenu", _wrap_CMenuRankProcess_RefreshMenu},
    { "CMenuRankProcess_PageUp", _wrap_CMenuRankProcess_PageUp},
    { "CMenuRankProcess_PageDown", _wrap_CMenuRankProcess_PageDown},
    { "CMenuRankProcess_SetIndex", _wrap_CMenuRankProcess_SetIndex},
    { "CMenuRankProcess_RankScroll", _wrap_CMenuRankProcess_RankScroll},
    { "CMenuRankProcess_FindRank", _wrap_CMenuRankProcess_FindRank},
    { "CMenuRankProcess_SetSelIndex", _wrap_CMenuRankProcess_SetSelIndex},
    { "CMenuRankProcess_SetRankSubType", _wrap_CMenuRankProcess_SetRankSubType},
    { "new_CMenuRankProcess", _wrap_new_CMenuRankProcess},
    { "delete_CMenuRankProcess", _wrap_delete_CMenuRankProcess},
    { "CMenuSystemSetting_SetWindowMode", _wrap_CMenuSystemSetting_SetWindowMode},
    { "CMenuSystemSetting_SetNightMode", _wrap_CMenuSystemSetting_SetNightMode},
    { "CMenuSystemSetting_SetMapAnimeMode", _wrap_CMenuSystemSetting_SetMapAnimeMode},
    { "CMenuSystemSetting_SetWeatherMode", _wrap_CMenuSystemSetting_SetWeatherMode},
    { "CMenuSystemSetting_SetBlockGivenMode", _wrap_CMenuSystemSetting_SetBlockGivenMode},
    { "CMenuSystemSetting_SetBlockPartyMode", _wrap_CMenuSystemSetting_SetBlockPartyMode},
    { "CMenuSystemSetting_SetBlockMessageMode", _wrap_CMenuSystemSetting_SetBlockMessageMode},
    { "CMenuSystemSetting_SetBlockPKMode", _wrap_CMenuSystemSetting_SetBlockPKMode},
    { "CMenuSystemSetting_SetBlockMakeFriendMode", _wrap_CMenuSystemSetting_SetBlockMakeFriendMode},
    { "CMenuSystemSetting_SetBlockTradingMode", _wrap_CMenuSystemSetting_SetBlockTradingMode},
    { "CMenuSystemSetting_SetMusicMode", _wrap_CMenuSystemSetting_SetMusicMode},
    { "CMenuSystemSetting_SetMusicVolume", _wrap_CMenuSystemSetting_SetMusicVolume},
    { "CMenuSystemSetting_SetSoundEffectMode", _wrap_CMenuSystemSetting_SetSoundEffectMode},
    { "CMenuSystemSetting_SetSoundEffectVolume", _wrap_CMenuSystemSetting_SetSoundEffectVolume},
    { "CMenuSystemSetting_SetSaveChatHistory", _wrap_CMenuSystemSetting_SetSaveChatHistory},
    { "CMenuSystemSetting_SetShowEquipMode", _wrap_CMenuSystemSetting_SetShowEquipMode},
    { "CMenuSystemSetting_IsWindowModeEnable", _wrap_CMenuSystemSetting_IsWindowModeEnable},
    { "CMenuSystemSetting_IsNightModeEnable", _wrap_CMenuSystemSetting_IsNightModeEnable},
    { "CMenuSystemSetting_IsMapAnimeModeEnable", _wrap_CMenuSystemSetting_IsMapAnimeModeEnable},
    { "CMenuSystemSetting_IsWeatherModeEnable", _wrap_CMenuSystemSetting_IsWeatherModeEnable},
    { "CMenuSystemSetting_IsBlockGivenModeEnable", _wrap_CMenuSystemSetting_IsBlockGivenModeEnable},
    { "CMenuSystemSetting_IsBlockPartyModeEnable", _wrap_CMenuSystemSetting_IsBlockPartyModeEnable},
    { "CMenuSystemSetting_IsBlockMessageModeEnable", _wrap_CMenuSystemSetting_IsBlockMessageModeEnable},
    { "CMenuSystemSetting_IsBlockPKModeEnable", _wrap_CMenuSystemSetting_IsBlockPKModeEnable},
    { "CMenuSystemSetting_IsBlockMakeFriendModeEnable", _wrap_CMenuSystemSetting_IsBlockMakeFriendModeEnable},
    { "CMenuSystemSetting_IsBlockTradingModeEnable", _wrap_CMenuSystemSetting_IsBlockTradingModeEnable},
    { "CMenuSystemSetting_IsMusicModeEnable", _wrap_CMenuSystemSetting_IsMusicModeEnable},
    { "CMenuSystemSetting_IsSaveChatHistory", _wrap_CMenuSystemSetting_IsSaveChatHistory},
    { "CMenuSystemSetting_GetTempMusicVolume", _wrap_CMenuSystemSetting_GetTempMusicVolume},
    { "CMenuSystemSetting_GetMusicVolume", _wrap_CMenuSystemSetting_GetMusicVolume},
    { "CMenuSystemSetting_IsSoundEffectModeEnable", _wrap_CMenuSystemSetting_IsSoundEffectModeEnable},
    { "CMenuSystemSetting_GetTempSoundEffectVolume", _wrap_CMenuSystemSetting_GetTempSoundEffectVolume},
    { "CMenuSystemSetting_GetSoundEffectVolume", _wrap_CMenuSystemSetting_GetSoundEffectVolume},
    { "CMenuSystemSetting_GetSoundEffectVolForFmod", _wrap_CMenuSystemSetting_GetSoundEffectVolForFmod},
    { "CMenuSystemSetting_GetMusicVolForFmod", _wrap_CMenuSystemSetting_GetMusicVolForFmod},
    { "CMenuSystemSetting_IsShowEquipModeEnable", _wrap_CMenuSystemSetting_IsShowEquipModeEnable},
    { "CMenuSystemSetting_InitSystemSetting", _wrap_CMenuSystemSetting_InitSystemSetting},
    { "CMenuSystemSetting_AddMusicVolume", _wrap_CMenuSystemSetting_AddMusicVolume},
    { "CMenuSystemSetting_SubMusicVolume", _wrap_CMenuSystemSetting_SubMusicVolume},
    { "CMenuSystemSetting_AddSoundEffectVolume", _wrap_CMenuSystemSetting_AddSoundEffectVolume},
    { "CMenuSystemSetting_SubSoundEffectVolume", _wrap_CMenuSystemSetting_SubSoundEffectVolume},
    { "CMenuSystemSetting_ResetTempVolume", _wrap_CMenuSystemSetting_ResetTempVolume},
    { "CMenuSystemSetting_RestoreTempVolumeToDefault", _wrap_CMenuSystemSetting_RestoreTempVolumeToDefault},
    { "CMenuSystemSetting_WriteSystemSetting", _wrap_CMenuSystemSetting_WriteSystemSetting},
    { "CMenuSystemSetting_SetSubChatPosition", _wrap_CMenuSystemSetting_SetSubChatPosition},
    { "CMenuSystemSetting_SetSubChatEnable", _wrap_CMenuSystemSetting_SetSubChatEnable},
    { "CMenuSystemSetting_SaveBlockSetting", _wrap_CMenuSystemSetting_SaveBlockSetting},
    { "new_CMenuSystemSetting", _wrap_new_CMenuSystemSetting},
    { "delete_CMenuSystemSetting", _wrap_delete_CMenuSystemSetting},
    { "CMenuTradingProcess_ConfirmReqTrading", _wrap_CMenuTradingProcess_ConfirmReqTrading},
    { "CMenuTradingProcess_RejectReqTrading", _wrap_CMenuTradingProcess_RejectReqTrading},
    { "CMenuTradingProcess_SetItem", _wrap_CMenuTradingProcess_SetItem},
    { "CMenuTradingProcess_RemoveItem", _wrap_CMenuTradingProcess_RemoveItem},
    { "CMenuTradingProcess_SetPartner", _wrap_CMenuTradingProcess_SetPartner},
    { "CMenuTradingProcess_RemovePartner", _wrap_CMenuTradingProcess_RemovePartner},
    { "CMenuTradingProcess_SetLock", _wrap_CMenuTradingProcess_SetLock},
    { "CMenuTradingProcess_CancelTrading", _wrap_CMenuTradingProcess_CancelTrading},
    { "CMenuTradingProcess_SetMoney", _wrap_CMenuTradingProcess_SetMoney},
    { "CMenuTradingProcess_CheckMoney", _wrap_CMenuTradingProcess_CheckMoney},
    { "CMenuTradingProcess_ConfirmTrading", _wrap_CMenuTradingProcess_ConfirmTrading},
    { "CMenuTradingProcess_IsConfirm", _wrap_CMenuTradingProcess_IsConfirm},
    { "CMenuTradingProcess_ShowItemDetail", _wrap_CMenuTradingProcess_ShowItemDetail},
    { "CMenuTradingProcess_ShowPartnerDetail", _wrap_CMenuTradingProcess_ShowPartnerDetail},
    { "CMenuTradingProcess_SetPet", _wrap_CMenuTradingProcess_SetPet},
    { "CMenuTradingProcess_RemovePet", _wrap_CMenuTradingProcess_RemovePet},
    { "CMenuTradingProcess_ShowPetDetail", _wrap_CMenuTradingProcess_ShowPetDetail},
    { "CMenuTradingProcess_ShowMoneyColour", _wrap_CMenuTradingProcess_ShowMoneyColour},
    { "new_CMenuTradingProcess", _wrap_new_CMenuTradingProcess},
    { "delete_CMenuTradingProcess", _wrap_delete_CMenuTradingProcess},
    { "CMenuAutoWalkProcess_StartAutoWalk", _wrap_CMenuAutoWalkProcess_StartAutoWalk},
    { "CMenuAutoWalkProcess_StopAutoWalk", _wrap_CMenuAutoWalkProcess_StopAutoWalk},
    { "CMenuAutoWalkProcess_ChangeHitBoss", _wrap_CMenuAutoWalkProcess_ChangeHitBoss},
    { "CMenuAutoWalkProcess_OnOpenAutoWalk", _wrap_CMenuAutoWalkProcess_OnOpenAutoWalk},
    { "CMenuAutoWalkProcess_SetRunning", _wrap_CMenuAutoWalkProcess_SetRunning},
    { "CMenuAutoWalkProcess_ShowTime", _wrap_CMenuAutoWalkProcess_ShowTime},
    { "new_CMenuAutoWalkProcess", _wrap_new_CMenuAutoWalkProcess},
    { "delete_CMenuAutoWalkProcess", _wrap_delete_CMenuAutoWalkProcess},
    { "CMenuMixProcess_SetSelectedIndex", _wrap_CMenuMixProcess_SetSelectedIndex},
    { "CMenuMixProcess_ResetMixShopMake", _wrap_CMenuMixProcess_ResetMixShopMake},
    { "CMenuMixProcess_MixShopMakeProductScroll", _wrap_CMenuMixProcess_MixShopMakeProductScroll},
    { "CMenuMixProcess_MixShopMakeSourceScroll", _wrap_CMenuMixProcess_MixShopMakeSourceScroll},
    { "CMenuMixProcess_HaveSelectedItemMix", _wrap_CMenuMixProcess_HaveSelectedItemMix},
    { "CMenuMixProcess_IsSuitableItemMix", _wrap_CMenuMixProcess_IsSuitableItemMix},
    { "CMenuMixProcess_SetSourceItem", _wrap_CMenuMixProcess_SetSourceItem},
    { "CMenuMixProcess_SetIronShopItem", _wrap_CMenuMixProcess_SetIronShopItem},
    { "CMenuMixProcess_IsSuitableIronShopItem", _wrap_CMenuMixProcess_IsSuitableIronShopItem},
    { "CMenuMixProcess_IsIronShopMake", _wrap_CMenuMixProcess_IsIronShopMake},
    { "CMenuMixProcess_RemoveIronItem", _wrap_CMenuMixProcess_RemoveIronItem},
    { "CMenuMixProcess_ResetIronShop", _wrap_CMenuMixProcess_ResetIronShop},
    { "CMenuMixProcess_IsIronShopRepair", _wrap_CMenuMixProcess_IsIronShopRepair},
    { "CMenuMixProcess_IsStartMaking", _wrap_CMenuMixProcess_IsStartMaking},
    { "CMenuMixProcess_CancelMake", _wrap_CMenuMixProcess_CancelMake},
    { "CMenuMixProcess_RemoveMakeItem", _wrap_CMenuMixProcess_RemoveMakeItem},
    { "CMenuMixProcess_StartServerTime", _wrap_CMenuMixProcess_StartServerTime},
    { "CMenuMixProcess_ResetMixShop", _wrap_CMenuMixProcess_ResetMixShop},
    { "CMenuMixProcess_IsSuitableMixShopItem", _wrap_CMenuMixProcess_IsSuitableMixShopItem},
    { "CMenuMixProcess_SetMixShopItem", _wrap_CMenuMixProcess_SetMixShopItem},
    { "CMenuMixProcess_RemoveMixItem", _wrap_CMenuMixProcess_RemoveMixItem},
    { "CMenuMixProcess_SetRemainItemCount", _wrap_CMenuMixProcess_SetRemainItemCount},
    { "CMenuMixProcess_SetMakeAll", _wrap_CMenuMixProcess_SetMakeAll},
    { "CMenuMixProcess_IsRepairShop", _wrap_CMenuMixProcess_IsRepairShop},
    { "CMenuMixProcess_IsStoneMixShop", _wrap_CMenuMixProcess_IsStoneMixShop},
    { "CMenuMixProcess_GetMaxStoneNumByItemSlot", _wrap_CMenuMixProcess_GetMaxStoneNumByItemSlot},
    { "CMenuMixProcess_HasResultStone", _wrap_CMenuMixProcess_HasResultStone},
    { "CMenuMixProcess_IsUnSoulBoundShop", _wrap_CMenuMixProcess_IsUnSoulBoundShop},
    { "CMenuMixProcess_GetUnSoulBoundStoneNum", _wrap_CMenuMixProcess_GetUnSoulBoundStoneNum},
    { "CMenuMixProcess_IsSuitableGemMixShopItem", _wrap_CMenuMixProcess_IsSuitableGemMixShopItem},
    { "CMenuMixProcess_IsGemMixShop", _wrap_CMenuMixProcess_IsGemMixShop},
    { "CMenuMixProcess_SetGemMixShopItem", _wrap_CMenuMixProcess_SetGemMixShopItem},
    { "CMenuMixProcess_IsGemInlayShop", _wrap_CMenuMixProcess_IsGemInlayShop},
    { "CMenuMixProcess_IsGemRemoveShop", _wrap_CMenuMixProcess_IsGemRemoveShop},
    { "CMenuMixProcess_IsGemMeltingShop", _wrap_CMenuMixProcess_IsGemMeltingShop},
    { "CMenuMixProcess_IsGemPolishingShop", _wrap_CMenuMixProcess_IsGemPolishingShop},
    { "CMenuMixProcess_IsColorStoneMixShop", _wrap_CMenuMixProcess_IsColorStoneMixShop},
    { "CMenuMixProcess_SetGemRemoveIndex", _wrap_CMenuMixProcess_SetGemRemoveIndex},
    { "CMenuMixProcess_UpdateMixItemDetail", _wrap_CMenuMixProcess_UpdateMixItemDetail},
    { "CMenuMixProcess_isShowItem", _wrap_CMenuMixProcess_isShowItem},
    { "new_CMenuMixProcess", _wrap_new_CMenuMixProcess},
    { "delete_CMenuMixProcess", _wrap_delete_CMenuMixProcess},
    { "CMenuTitleProcess_RefreshMenu", _wrap_CMenuTitleProcess_RefreshMenu},
    { "CMenuTitleProcess_PageUp", _wrap_CMenuTitleProcess_PageUp},
    { "CMenuTitleProcess_PageDown", _wrap_CMenuTitleProcess_PageDown},
    { "CMenuTitleProcess_Sroll", _wrap_CMenuTitleProcess_Sroll},
    { "CMenuTitleProcess_SetSelectIndex", _wrap_CMenuTitleProcess_SetSelectIndex},
    { "CMenuTitleProcess_ConfirmChange", _wrap_CMenuTitleProcess_ConfirmChange},
    { "new_CMenuTitleProcess", _wrap_new_CMenuTitleProcess},
    { "delete_CMenuTitleProcess", _wrap_delete_CMenuTitleProcess},
    { "CMenuHawkerProcess_UpdateOwnerItem",_wrap_CMenuHawkerProcess_UpdateOwnerItem},
    { "CMenuHawkerProcess_UpdateOwnerItemSlot",_wrap_CMenuHawkerProcess_UpdateOwnerItemSlot},
    { "CMenuHawkerProcess_UpdateOwnerEqItem", _wrap_CMenuHawkerProcess_UpdateOwnerEqItem},
    { "CMenuHawkerProcess_UpdateOwner", _wrap_CMenuHawkerProcess_UpdateOwner},
    { "CMenuHawkerProcess_UpdateOwnerModel", _wrap_CMenuHawkerProcess_UpdateOwnerModel},
    { "CMenuHawkerProcess_UpdateOwnerPartner",_wrap_CMenuHawkerProcess_UpdateOwnerPartner},
    { "CMenuHawkerProcess_UpdateOwnerPet",_wrap_CMenuHawkerProcess_UpdateOwnerPet},
    { "CMenuHawkerProcess_SetIconOff", _wrap_CMenuHawkerProcess_SetIconOff},
    { "CMenuHawkerProcess_UpdateOwnerPartnerNameList", _wrap_CMenuHawkerProcess_UpdateOwnerPartnerNameList},
    { "CMenuHawkerProcess_SelectHawkItem", _wrap_CMenuHawkerProcess_SelectHawkItem},
    { "CMenuHawkerProcess_SelectHawkPartner", _wrap_CMenuHawkerProcess_SelectHawkPartner},
    { "CMenuHawkerProcess_SelectHawkPet", _wrap_CMenuHawkerProcess_SelectHawkPet},
    { "CMenuHawkerProcess_SelectHawkExchangeRecord", _wrap_CMenuHawkerProcess_SelectHawkExchangeRecord},
    { "CMenuHawkerProcess_SetItemHawk", _wrap_CMenuHawkerProcess_SetItemHawk},
    { "CMenuHawkerProcess_SetPartnerHawk", _wrap_CMenuHawkerProcess_SetPartnerHawk},
    { "CMenuHawkerProcess_SetPetHawk", _wrap_CMenuHawkerProcess_SetPetHawk},
    { "CMenuHawkerProcess_TurnPage", _wrap_CMenuHawkerProcess_TurnPage},
    { "CMenuHawkerProcess_SelectPartnerOrPet", _wrap_CMenuHawkerProcess_SelectPartnerOrPet},
    { "CMenuHawkerProcess_NotForSellPartner",_wrap_CMenuHawkerProcess_NotForSellPartner},
    { "CMenuHawkerProcess_NotForSellPet",_wrap_CMenuHawkerProcess_NotForSellPet},
    { "CMenuHawkerProcess_ResetHawkerOwner", _wrap_CMenuHawkerProcess_ResetHawkerOwner},
    { "CMenuHawkerProcess_DragPartner", _wrap_CMenuHawkerProcess_DragPartner},
    { "CMenuHawkerProcess_DragPet", _wrap_CMenuHawkerProcess_DragPet},
    { "CMenuHawkerProcess_ResetSellItem", _wrap_CMenuHawkerProcess_ResetSellItem},
    { "CMenuHawkerProcess_GetHawkMenuIndex", _wrap_CMenuHawkerProcess_GetHawkMenuIndex},
    { "CMenuHawkerProcess_StartHawk", _wrap_CMenuHawkerProcess_StartHawk},
    { "CMenuHawkerProcess_StopHawk", _wrap_CMenuHawkerProcess_StopHawk},
    { "CMenuHawkerProcess_IsStartHawk", _wrap_CMenuHawkerProcess_IsStartHawk},
    { "CMenuHawkerProcess_ClickHawkAlertPanel", _wrap_CMenuHawkerProcess_ClickHawkAlertPanel},
    { "CMenuHawkerProcess_SelectHawkSellItem", _wrap_CMenuHawkerProcess_SelectHawkSellItem},
    { "CMenuHawkerProcess_SelectHawkSellPartner", _wrap_CMenuHawkerProcess_SelectHawkSellPartner},
    { "CMenuHawkerProcess_SelectHawkSellPet", _wrap_CMenuHawkerProcess_SelectHawkSellPet},
    { "CMenuHawkerProcess_ShowHawkMessage", _wrap_CMenuHawkerProcess_ShowHawkMessage},
    { "CMenuHawkerProcess_ChangeHawkName", _wrap_CMenuHawkerProcess_ChangeHawkName},
    { "CMenuHawkerProcess_CloseHawkFromTarget", _wrap_CMenuHawkerProcess_CloseHawkFromTarget},
    { "CMenuHawkerProcess_GetMaxItemStackForHawk", _wrap_CMenuHawkerProcess_GetMaxItemStackForHawk},
    { "CMenuHawkerProcess_BuyHawkItem", _wrap_CMenuHawkerProcess_BuyHawkItem},
    { "CMenuHawkerProcess_ShowHawkSelltemDetail", _wrap_CMenuHawkerProcess_ShowHawkSelltemDetail},
    { "CMenuHawkerProcess_GetItemPriceForHawk", _wrap_CMenuHawkerProcess_GetItemPriceForHawk},
    { "CMenuHawkerProcess_ShowItemPriceForHawk", _wrap_CMenuHawkerProcess_ShowItemPriceForHawk},
    { "CMenuHawkerProcess_HawkerOwnerNameListScroll", _wrap_CMenuHawkerProcess_HawkerOwnerNameListScroll},
    { "CMenuHawkerProcess_ResetOwnerScroll", _wrap_CMenuHawkerProcess_ResetOwnerScroll},
    { "CMenuHawkerProcess_SetItemMoneyColour", _wrap_CMenuHawkerProcess_SetItemMoneyColour},
    { "CMenuHawkerProcess_InitItemPartnerPet", _wrap_CMenuHawkerProcess_InitItemPartnerPet},
    { "CMenuHawkerProcess_SetConcernTarget", _wrap_CMenuHawkerProcess_SetConcernTarget},
    { "new_CMenuHawkerProcess", _wrap_new_CMenuHawkerProcess},
    { "delete_CMenuHawkerProcess", _wrap_delete_CMenuHawkerProcess},
    { "CMenuQuestJournal_CloseQuestJournal", _wrap_CMenuQuestJournal_CloseQuestJournal},
    { "CMenuQuestJournal_ShowQuestJournal", _wrap_CMenuQuestJournal_ShowQuestJournal},
    { "CMenuQuestJournal_SelectJournal", _wrap_CMenuQuestJournal_SelectJournal},
    { "CMenuQuestJournal_JournalScroll", _wrap_CMenuQuestJournal_JournalScroll},
    { "CMenuQuestJournal_DBClickJournal", _wrap_CMenuQuestJournal_DBClickJournal},
    { "new_CMenuQuestJournal", _wrap_new_CMenuQuestJournal},
    { "delete_CMenuQuestJournal", _wrap_delete_CMenuQuestJournal},
    { "CWeaponsRank_CloseWeaponsRank", _wrap_CWeaponsRank_CloseWeaponsRank},
    { "CWeaponsRank_ShowWeaponsRank", _wrap_CWeaponsRank_ShowWeaponsRank},
    { "CWeaponsRank_SelectWeaponsRank", _wrap_CWeaponsRank_SelectWeaponsRank},
    { "CWeaponsRank_WeaponsRankScroll", _wrap_CWeaponsRank_WeaponsRankScroll},
    { "CWeaponsRank_DBClickWeaponsRank", _wrap_CWeaponsRank_DBClickWeaponsRank},
    { "new_CWeaponsRank", _wrap_new_CWeaponsRank},
    { "delete_CWeaponsRank", _wrap_delete_CWeaponsRank},
    { "CTeamDescription_CloseTeamDescription", _wrap_CTeamDescription_CloseTeamDescription},
    { "CTeamDescription_ShowTeamDescription", _wrap_CTeamDescription_ShowTeamDescription},
    { "CTeamDescription_SetTeamDescriptionData", _wrap_CTeamDescription_SetTeamDescriptionData},
    { "CTeamDescription_TeamDescriptionTabControl", _wrap_CTeamDescription_TeamDescriptionTabControl},
    { "CTeamDescription_TeamDescriptionInput", _wrap_CTeamDescription_TeamDescriptionInput},
    { "CTeamDescription_TeamDescriptionLevelDown", _wrap_CTeamDescription_TeamDescriptionLevelDown},
    { "CTeamDescription_TeamDescriptionLevelUp", _wrap_CTeamDescription_TeamDescriptionLevelUp},
    { "CTeamDescription_GetDescriptionLevelDown", _wrap_CTeamDescription_GetDescriptionLevelDown},
    { "CTeamDescription_GetDescriptionLevelUp", _wrap_CTeamDescription_GetDescriptionLevelUp},
    { "new_CTeamDescription", _wrap_new_CTeamDescription},
    { "delete_CTeamDescription", _wrap_delete_CTeamDescription},
    { "CQuestionProcess_Answer", _wrap_CQuestionProcess_Answer},
    { "CQuestionProcess_EnterQuestion", _wrap_CQuestionProcess_EnterQuestion},
    { "CQuestionProcess_ExitQuestion", _wrap_CQuestionProcess_ExitQuestion},
    { "new_CQuestionProcess", _wrap_new_CQuestionProcess},
    { "delete_CQuestionProcess", _wrap_delete_CQuestionProcess},
    { "CMenuWareHouseProcess_ShowWareHouseItem",_wrap_CMenuWareHouseProcess_ShowWareHouseItem},
    { "CMenuWareHouseProcess_ShowWareHousePartner", _wrap_CMenuWareHouseProcess_ShowWareHousePartner},
    { "CMenuWareHouseProcess_ShowWareHousePet", _wrap_CMenuWareHouseProcess_ShowWareHousePet},
    { "CMenuWareHouseProcess_CloseWareHouse", _wrap_CMenuWareHouseProcess_CloseWareHouse},
    { "CMenuWareHouseProcess_PutToWareHouse", _wrap_CMenuWareHouseProcess_PutToWareHouse},
    { "CMenuWareHouseProcess_GetMaxStack", _wrap_CMenuWareHouseProcess_GetMaxStack},
    { "CMenuWareHouseProcess_GetFromWareHouse", _wrap_CMenuWareHouseProcess_GetFromWareHouse},
    { "CMenuWareHouseProcess_CheckCanSwap", _wrap_CMenuWareHouseProcess_CheckCanSwap},
    { "CMenuWareHouseProcess_AvailSlot", _wrap_CMenuWareHouseProcess_AvailSlot},
    { "CMenuWareHouseProcess_ShowItemDetail", _wrap_CMenuWareHouseProcess_ShowItemDetail},
    { "CMenuWareHouseProcess_MoveItem", _wrap_CMenuWareHouseProcess_MoveItem},
    { "CMenuWareHouseProcess_PutPartnerToWareHouse", _wrap_CMenuWareHouseProcess_PutPartnerToWareHouse},
    { "CMenuWareHouseProcess_GetPartnerFromWareHouse", _wrap_CMenuWareHouseProcess_GetPartnerFromWareHouse},
    { "CMenuWareHouseProcess_ShowPartnerDetail", _wrap_CMenuWareHouseProcess_ShowPartnerDetail},
    { "CMenuWareHouseProcess_PutPetToWareHouse", _wrap_CMenuWareHouseProcess_PutPetToWareHouse},
    { "CMenuWareHouseProcess_GetPetFromWareHouse", _wrap_CMenuWareHouseProcess_GetPetFromWareHouse},
    { "CMenuWareHouseProcess_ShowPetDetail", _wrap_CMenuWareHouseProcess_ShowPetDetail},
    { "CMenuWareHouseProcess_JpackWareHouse", _wrap_CMenuWareHouseProcess_JpackWareHouse},
    { "new_CMenuWareHouseProcess", _wrap_new_CMenuWareHouseProcess},
    { "delete_CMenuWareHouseProcess", _wrap_delete_CMenuWareHouseProcess},
    { "CMenuSellYuanBaoProcess_OpenSellYBMenuChoice", _wrap_CMenuSellYuanBaoProcess_OpenSellYBMenuChoice},
    { "CMenuSellYuanBaoProcess_OpenChangeYBSelect", _wrap_CMenuSellYuanBaoProcess_OpenChangeYBSelect},
    { "CMenuSellYuanBaoProcess_OpenExchangeYBYBT", _wrap_CMenuSellYuanBaoProcess_OpenExchangeYBYBT},
    { "CMenuSellYuanBaoProcess_CloseSellYuanBao", _wrap_CMenuSellYuanBaoProcess_CloseSellYuanBao},
    { "CMenuSellYuanBaoProcess_CheckYBTAmount", _wrap_CMenuSellYuanBaoProcess_CheckYBTAmount},
    { "CMenuSellYuanBaoProcess_ConfirmChangeYBYBT", _wrap_CMenuSellYuanBaoProcess_ConfirmChangeYBYBT},
    { "CMenuSellYuanBaoProcess_InitStartPos", _wrap_CMenuSellYuanBaoProcess_InitStartPos},
    { "CMenuSellYuanBaoProcess_OpenSellYBBuySell", _wrap_CMenuSellYuanBaoProcess_OpenSellYBBuySell},
    { "CMenuSellYuanBaoProcess_PageUpAndDown", _wrap_CMenuSellYuanBaoProcess_PageUpAndDown},
    { "CMenuSellYuanBaoProcess_ConfirmSellYB", _wrap_CMenuSellYuanBaoProcess_ConfirmSellYB},
    { "CMenuSellYuanBaoProcess_SetConfirmBoxText", _wrap_CMenuSellYuanBaoProcess_SetConfirmBoxText},
    { "CMenuSellYuanBaoProcess_SelectBuyYBT", _wrap_CMenuSellYuanBaoProcess_SelectBuyYBT},
    { "CMenuSellYuanBaoProcess_ConfirmBuyYB", _wrap_CMenuSellYuanBaoProcess_ConfirmBuyYB},
    { "CMenuSellYuanBaoProcess_DisplayBuyYBConfirmText", _wrap_CMenuSellYuanBaoProcess_DisplayBuyYBConfirmText},
    { "CMenuSellYuanBaoProcess_ResetSelectBuyYBT", _wrap_CMenuSellYuanBaoProcess_ResetSelectBuyYBT},
    { "CMenuSellYuanBaoProcess_GetSellYBTempBank", _wrap_CMenuSellYuanBaoProcess_GetSellYBTempBank},
    { "CMenuSellYuanBaoProcess_GetAllTBMoneyYBT", _wrap_CMenuSellYuanBaoProcess_GetAllTBMoneyYBT},
    { "CMenuSellYuanBaoProcess_SetEditBoxColor", _wrap_CMenuSellYuanBaoProcess_SetEditBoxColor},
    { "new_CMenuSellYuanBaoProcess", _wrap_new_CMenuSellYuanBaoProcess},
    { "delete_CMenuSellYuanBaoProcess", _wrap_delete_CMenuSellYuanBaoProcess},
    { "CMenuTargetEquipProcess_RequestTargetEquip", _wrap_CMenuTargetEquipProcess_RequestTargetEquip},
    { "CMenuTargetEquipProcess_FreeTargetEquip", _wrap_CMenuTargetEquipProcess_FreeTargetEquip},
    { "CMenuTargetEquipProcess_UpdateTargetEquipDetail", _wrap_CMenuTargetEquipProcess_UpdateTargetEquipDetail},
    { "CMenuTargetEquipProcess_HasTargetEquip", _wrap_CMenuTargetEquipProcess_HasTargetEquip},
    { "new_CMenuTargetEquipProcess", _wrap_new_CMenuTargetEquipProcess},
    { "delete_CMenuTargetEquipProcess", _wrap_delete_CMenuTargetEquipProcess},
    { "CRelationSystemProcess_SetSiblingTitlePrefix", _wrap_CRelationSystemProcess_SetSiblingTitlePrefix},
    { "CRelationSystemProcess_SetSiblingTitleSuffix", _wrap_CRelationSystemProcess_SetSiblingTitleSuffix},
    { "CRelationSystemProcess_ChooseTimeScroll", _wrap_CRelationSystemProcess_ChooseTimeScroll},
    { "CRelationSystemProcess_ShowChooseTime", _wrap_CRelationSystemProcess_ShowChooseTime},
    { "CRelationSystemProcess_SelectChooseTime", _wrap_CRelationSystemProcess_SelectChooseTime},
    { "CRelationSystemProcess_EstablishChooseTime", _wrap_CRelationSystemProcess_EstablishChooseTime},
    { "new_CRelationSystemProcess", _wrap_new_CRelationSystemProcess},
    { "delete_CRelationSystemProcess", _wrap_delete_CRelationSystemProcess},
    { "CWantedProcess_ClearAllWanted", _wrap_CWantedProcess_ClearAllWanted},
    { "CWantedProcess_SelectWanted", _wrap_CWantedProcess_SelectWanted},
    { "CWantedProcess_WantedScroll", _wrap_CWantedProcess_WantedScroll},
    { "CWantedProcess_SelectWantedClass", _wrap_CWantedProcess_SelectWantedClass},
    { "CWantedProcess_RequestWantedReward", _wrap_CWantedProcess_RequestWantedReward},
    { "CWantedProcess_WantedReward", _wrap_CWantedProcess_WantedReward},
    { "CWantedProcess_WantedDetail", _wrap_CWantedProcess_WantedDetail},
    { "CWantedProcess_WantedJailDelivery", _wrap_CWantedProcess_WantedJailDelivery},
    { "CWantedProcess_WantedBail", _wrap_CWantedProcess_WantedBail},
    { "CWantedProcess_WantedTrace", _wrap_CWantedProcess_WantedTrace},
    { "new_CWantedProcess", _wrap_new_CWantedProcess},
    { "delete_CWantedProcess", _wrap_delete_CWantedProcess},
    { "CGenerationProcess_SortListByLevel", _wrap_CGenerationProcess_SortListByLevel},
    { "CGenerationProcess_SortListByClass", _wrap_CGenerationProcess_SortListByClass},
    { "CGenerationProcess_SortListByOffline", _wrap_CGenerationProcess_SortListByOffline},
    { "CGenerationProcess_SortListByAccOrExp", _wrap_CGenerationProcess_SortListByAccOrExp},
    { "CGenerationProcess_SortListByGiftOrHisAcc", _wrap_CGenerationProcess_SortListByGiftOrHisAcc},
    { "CGenerationProcess_GetSavedExp", _wrap_CGenerationProcess_GetSavedExp},
    { "CGenerationProcess_DisbandGeneration", _wrap_CGenerationProcess_DisbandGeneration},
    { "CGenerationProcess_RequestCreateGeneration", _wrap_CGenerationProcess_RequestCreateGeneration},
    { "CGenerationProcess_RequestGenerationAns", _wrap_CGenerationProcess_RequestGenerationAns},
    { "CGenerationProcess_ClearGenerationRequest", _wrap_CGenerationProcess_ClearGenerationRequest},
    { "CGenerationProcess_SystemDesc", _wrap_CGenerationProcess_SystemDesc},
    { "CGenerationProcess_UpdateGeneration", _wrap_CGenerationProcess_UpdateGeneration},
    { "CGenerationProcess_UpdateDisbandPanel", _wrap_CGenerationProcess_UpdateDisbandPanel},
    { "CGenerationProcess_UpDateRequestPanel", _wrap_CGenerationProcess_UpDateRequestPanel},
    { "CGenerationProcess_ShowGenerations", _wrap_CGenerationProcess_ShowGenerations},
    { "CGenerationProcess_SelectGeneration", _wrap_CGenerationProcess_SelectGeneration},
    { "CGenerationProcess_GenerationScroll", _wrap_CGenerationProcess_GenerationScroll},
    { "CGenerationProcess_HideAllPanel", _wrap_CGenerationProcess_HideAllPanel},
    { "CGenerationProcess_ShowAllPanel", _wrap_CGenerationProcess_ShowAllPanel},
    { "CGenerationProcess_OpenGenCharDetail", _wrap_CGenerationProcess_OpenGenCharDetail},
    { "new_CGenerationProcess", _wrap_new_CGenerationProcess},
    { "delete_CGenerationProcess", _wrap_delete_CGenerationProcess},
    { "CMenuPartnerCultivationUpProcess_OpenPartnerCultivationUp", _wrap_CMenuPartnerCultivationUpProcess_OpenPartnerCultivationUp},
    { "CMenuPartnerCultivationUpProcess_GetPartnerCultivationUpType", _wrap_CMenuPartnerCultivationUpProcess_GetPartnerCultivationUpType},
    { "CMenuPartnerCultivationUpProcess_ResetPartnerCultivationUp", _wrap_CMenuPartnerCultivationUpProcess_ResetPartnerCultivationUp},
    { "CMenuPartnerCultivationUpProcess_ClosePartnerCultivationUp", _wrap_CMenuPartnerCultivationUpProcess_ClosePartnerCultivationUp},
    { "CMenuPartnerCultivationUpProcess_SetSrcPartner", _wrap_CMenuPartnerCultivationUpProcess_SetSrcPartner},
    { "CMenuPartnerCultivationUpProcess_SetDestPartner", _wrap_CMenuPartnerCultivationUpProcess_SetDestPartner},
    { "CMenuPartnerCultivationUpProcess_IsSuitableSrcPartner", _wrap_CMenuPartnerCultivationUpProcess_IsSuitableSrcPartner},
    { "CMenuPartnerCultivationUpProcess_IsSuitableDestPartner", _wrap_CMenuPartnerCultivationUpProcess_IsSuitableDestPartner},
    { "CMenuPartnerCultivationUpProcess_PartnerCultivationUpByPartner", _wrap_CMenuPartnerCultivationUpProcess_PartnerCultivationUpByPartner},
    { "CMenuPartnerCultivationUpProcess_PartnerCultivationUpByItem", _wrap_CMenuPartnerCultivationUpProcess_PartnerCultivationUpByItem},
    { "new_CMenuPartnerCultivationUpProcess", _wrap_new_CMenuPartnerCultivationUpProcess},
    { "delete_CMenuPartnerCultivationUpProcess", _wrap_delete_CMenuPartnerCultivationUpProcess},
    { "CAccShopProcess_ShowAccShop", _wrap_CAccShopProcess_ShowAccShop},
    { "CAccShopProcess_SelectAccShopItem", _wrap_CAccShopProcess_SelectAccShopItem},
    { "CAccShopProcess_AccShopPrevPage", _wrap_CAccShopProcess_AccShopPrevPage},
    { "CAccShopProcess_AccShopNextPage", _wrap_CAccShopProcess_AccShopNextPage},
    { "CAccShopProcess_AccShopBuyItem", _wrap_CAccShopProcess_AccShopBuyItem},
    { "CAccShopProcess_OnMouseMoveOver", _wrap_CAccShopProcess_OnMouseMoveOver},
    { "new_CAccShopProcess", _wrap_new_CAccShopProcess},
    { "delete_CAccShopProcess", _wrap_delete_CAccShopProcess},
    { "CPointsShopProcess_ShowPointsShop", _wrap_CPointsShopProcess_ShowPointsShop},
    { "CPointsShopProcess_SelectPointsShopItem", _wrap_CPointsShopProcess_SelectPointsShopItem},
    { "CPointsShopProcess_PointsShopPrevPage", _wrap_CPointsShopProcess_PointsShopPrevPage},
    { "CPointsShopProcess_PointsShopNextPage", _wrap_CPointsShopProcess_PointsShopNextPage},
    { "CPointsShopProcess_PointsShopBuyItem", _wrap_CPointsShopProcess_PointsShopBuyItem},
    { "CPointsShopProcess_OnMouseMoveOver", _wrap_CPointsShopProcess_OnMouseMoveOver},
    { "new_CPointsShopProcess", _wrap_new_CPointsShopProcess},
    { "delete_CPointsShopProcess", _wrap_delete_CPointsShopProcess},
    { "GetPlayerPos", _wrap_GetPlayerPos},
    { "GetMapWidth", _wrap_GetMapWidth},
    { "GetMapHeight", _wrap_GetMapHeight},
    { "AddXMLFile2UIManger", _wrap_AddXMLFile2UIManger},
    { "UIMangerLoadUI", _wrap_UIMangerLoadUI},
    { "OpenSubWindow", _wrap_OpenSubWindow},
    { "CloseSubWindow", _wrap_CloseSubWindow},
    { "PostQuitMessage", _wrap_PostQuitMessage},
    { "OutputDebugStringA", _wrap_OutputDebugStringA},
    { "CheckShiftDown", _wrap_CheckShiftDown},
    { "Div", _wrap_Div},
    { "DivUInt32", _wrap_DivUInt32},
    { "LAnd", _wrap_LAnd},
    { "LOr", _wrap_LOr},
    { "LMod", _wrap_LMod},
    { "ChangeChannel", _wrap_ChangeChannel},
    { "ReceiveChannel", _wrap_ReceiveChannel},
    { "RejectChannel", _wrap_RejectChannel},
    { "InitChannelEnable", _wrap_InitChannelEnable},
    { "IsChannelMsg", _wrap_IsChannelMsg},
    { "AddChatIconToPanel", _wrap_AddChatIconToPanel},
    { "AddChatIconToEditLine", _wrap_AddChatIconToEditLine},
    { "ChangeEditLineColor", _wrap_ChangeEditLineColor},
    { "GetLisentToChannel", _wrap_GetLisentToChannel},
    { "SendPrivateMessageTo", _wrap_SendPrivateMessageTo},
    { "InitRecentChatListBox", _wrap_InitRecentChatListBox},
    { "PlayerChooseResult", _wrap_PlayerChooseResult},
    { "UpdateClockPanel", _wrap_UpdateClockPanel},
    { "UpdateRightUpTimeInfo", _wrap_UpdateRightUpTimeInfo},
    { "GetSubUIManager", _wrap_GetSubUIManager},
    { "GetSkillProcess", _wrap_GetSkillProcess},
    { "GetQuestLogProcess", _wrap_GetQuestLogProcess},
    { "GetChatPool", _wrap_GetChatPool},
    { "GetPartnerProcess", _wrap_GetPartnerProcess},
    { "GetGivenProcess", _wrap_GetGivenProcess},
    { "GetItemProcess", _wrap_GetItemProcess},
    { "GetBigMap", _wrap_GetBigMap},
    { "GetMenuTargetProcess", _wrap_GetMenuTargetProcess},
    { "GetMenuBuffIconProcess", _wrap_GetMenuBuffIconProcess},
    { "GetMenuSystemSetting", _wrap_GetMenuSystemSetting},
    { "GetMenuFriendProcess", _wrap_GetMenuFriendProcess},
    { "GetTradingProcess", _wrap_GetTradingProcess},
    { "GetBankProcess", _wrap_GetBankProcess},
    { "GetMenuHelpProcess", _wrap_GetMenuHelpProcess},
    { "GetOnlineShopProcess", _wrap_GetOnlineShopProcess},
    { "GetMenuRankProcess", _wrap_GetMenuRankProcess},
    { "GetMenuPetProcess", _wrap_GetMenuPetProcess},
    { "GetMixProcess", _wrap_GetMixProcess},
    { "GetTitleProcess", _wrap_GetTitleProcess},
    { "GetAntiHackProcess", _wrap_GetAntiHackProcess},
    { "GetHawkerProcess", _wrap_GetHawkerProcess},
    { "GetMenuGuildProcess", _wrap_GetMenuGuildProcess},
    { "GetGiftBoxProcess", _wrap_GetGiftBoxProcess},
    { "GetQuestJournalProcess", _wrap_GetQuestJournalProcess},
    { "GetWeaponsRankProcess", _wrap_GetWeaponsRankProcess},
    { "GetTeamDescriptionProcess", _wrap_GetTeamDescriptionProcess},
    { "GetQuestionProcess", _wrap_GetQuestionProcess},
    { "GetWareHouseProcess", _wrap_GetWareHouseProcess},
    { "GetAutoWalkProcess", _wrap_GetAutoWalkProcess},
    { "GetSellYBProcess", _wrap_GetSellYBProcess},
    { "GetTargetEquipProcess", _wrap_GetTargetEquipProcess},
    { "GetRelationSystemProcess", _wrap_GetRelationSystemProcess},
    { "GetWantedProcess", _wrap_GetWantedProcess},
    { "GetGenerationProcess", _wrap_GetGenerationProcess},
    { "GetPartnerCultivationUpProcess", _wrap_GetPartnerCultivationUpProcess},
    { "GetAccShopProcess", _wrap_GetAccShopProcess},
    { "GetPointsShopProcess", _wrap_GetPointsShopProcess},
    { "BattleAction", _wrap_BattleAction},
    { "BattleSkill", _wrap_BattleSkill},
    { "BattleSpecial", _wrap_BattleSpecial},
    { "BattleItem", _wrap_BattleItem},
    { "BattleDefence", _wrap_BattleDefence},
    { "BattleFriend", _wrap_BattleFriend},
    { "BattleProtect", _wrap_BattleProtect},
    { "BattleCatch", _wrap_BattleCatch},
    { "BattleHelp", _wrap_BattleHelp},
    { "BattleAuto", _wrap_BattleAuto},
    { "CancelAuto", _wrap_CancelAuto},
    { "BattleEscape", _wrap_BattleEscape},
    { "BattleJoin", _wrap_BattleJoin},
    { "BattleWatchLeave", _wrap_BattleWatchLeave},
    { "BBAttack", _wrap_BBAttack},
    { "BBTrade", _wrap_BBTrade},
    { "BBGive", _wrap_BBGive},
    { "BBParty", _wrap_BBParty},
    { "BBChar", _wrap_BBChar},
    { "BBFriend", _wrap_BBFriend},
    { "BBItem", _wrap_BBItem},
    { "BBSkill", _wrap_BBSkill},
    { "BBHousen", _wrap_BBHousen},
    { "BBMission", _wrap_BBMission},
    { "BBFriendShip", _wrap_BBFriendShip},
    { "BBEmotion", _wrap_BBEmotion},
    { "BBSystem", _wrap_BBSystem},
    { "BBGeneration", _wrap_BBGeneration},
    { "PartyPrivateCall", _wrap_PartyPrivateCall},
    { "PartyKick", _wrap_PartyKick},
    { "PartyPromote", _wrap_PartyPromote},
    { "PartyQuit", _wrap_PartyQuit},
    { "PartySelectLineup", _wrap_PartySelectLineup},
    { "PartySetKeyPos", _wrap_PartySetKeyPos},
    { "UpdateLineupSelectMenu", _wrap_UpdateLineupSelectMenu},
    { "ForgetLearnedLineup", _wrap_ForgetLearnedLineup},
    { "PartySetSelectLineupResualt", _wrap_PartySetSelectLineupResualt},
    { "OpenLineupInfoView", _wrap_OpenLineupInfoView},
    { "LeaveTemporarily", _wrap_LeaveTemporarily},
    { "ReturnParty", _wrap_ReturnParty},
    { "UpdateCharMenu", _wrap_UpdateCharMenu},
    { "UpdateBattleItemMenu",_wrap_UpdateBattleItemMenu},
    { "MBChangeNextPage", _wrap_MBChangeNextPage},
    { "BatDialogNextPage", _wrap_BatDialogNextPage},
    { "PlayerChooseResultInBat", _wrap_PlayerChooseResultInBat},
    { "BattleItemUse", _wrap_BattleItemUse},
    { "SetCharacterIndex", _wrap_SetCharacterIndex},
    { "SetLineIndex", _wrap_SetLineIndex},
    { "CopyToShortCut", _wrap_CopyToShortCut},
    { "CopySkillToShortCut", _wrap_CopySkillToShortCut},
    { "DelShortCutSlot", _wrap_DelShortCutSlot},
    { "GetShortCutRefType", _wrap_GetShortCutRefType},
    { "GetShortCutRefNum", _wrap_GetShortCutRefNum},
    { "EquipItemUse", _wrap_EquipItemUse},
    { "MoveEquipToBag", _wrap_MoveEquipToBag},
    { "MoveToBag",_wrap_MoveToBag},
    { "DropItem", _wrap_DropItem},
    { "HasParty", _wrap_HasParty},
    { "HasTempParty", _wrap_HasTempParty},
    { "UpdatePartyPanel", _wrap_UpdatePartyPanel},
    { "CopyImageForUIImage", _wrap_CopyImageForUIImage},
    { "BattleItemDrag", _wrap_BattleItemDrag},
    { "HasItem", _wrap_HasItem},
    { "GetMaxStack", _wrap_GetMaxStack},
    { "SetDropItemText", _wrap_SetDropItemText},
    { "ShowErrMessage",_wrap_ShowErrMessage},
    { "BattleItemMove", _wrap_BattleItemMove},
    { "HasCharacter", _wrap_HasCharacter},
    { "InviteComing", _wrap_InviteComing},
    { "GetBGMVolume", _wrap_GetBGMVolume},
    { "ShowPartyByIndex",_wrap_ShowPartyByIndex},
    { "GetSFXVolume", _wrap_GetSFXVolume},
    { "InviteConfirm", _wrap_InviteConfirm},
    { "GetPartyListSize", _wrap_GetPartyListSize},
    { "UpdateApplicationMenu", _wrap_UpdateApplicationMenu},
    { "JoinConfirm", _wrap_JoinConfirm},
    { "ClearAllRequest", _wrap_ClearAllRequest},
    { "ShowOtherParty", _wrap_ShowOtherParty},
    { "ApplicantPanelScroll", _wrap_ApplicantPanelScroll},
    { "BattleJoinConfirm", _wrap_BattleJoinConfirm},
    { "JoinBattleClearAllRequestUp", _wrap_JoinBattleClearAllRequestUp},
    { "JoinBattleScroll", _wrap_JoinBattleScroll},
    { "UpdateJoinBattleMenu", _wrap_UpdateJoinBattleMenu},
    { "IsJoinRequestExist", _wrap_IsJoinRequestExist},
    { "ShowCreateCharacter",_wrap_ShowCreateCharacter},
    { "ChangeCharacterHairCol", _wrap_ChangeCharacterHairCol},
    { "ChangeCharacterHead", _wrap_ChangeCharacterHead},
    { "ChangeCharacterCloth", _wrap_ChangeCharacterCloth},
    { "ChangeCharacterClothCol", _wrap_ChangeCharacterClothCol},
    { "CreateCharacter", _wrap_CreateCharacter},
    { "GetTempMsg", _wrap_GetTempMsg},
    { "IsFullScreen", _wrap_IsFullScreen},
    { "SetHighLightInLogin", _wrap_SetHighLightInLogin},
    { "IsBattle", _wrap_IsBattle},
    { "IsPvP", _wrap_IsPvP},
    { "LoadLua", _wrap_LoadLua},
    { "CharacterLevelUp", _wrap_CharacterLevelUp},
    { "CharAttOk", _wrap_CharAttOk},
    { "CharAttUp", _wrap_CharAttUp},
    { "CharAttDown", _wrap_CharAttDown},
    { "ShowMidMap", _wrap_ShowMidMap},
    { "MidMapMoveCharTo", _wrap_MidMapMoveCharTo},
    { "MidMapMoveOut", _wrap_MidMapMoveOut},
    { "ResetMidMapValue", _wrap_ResetMidMapValue},
    { "MidMapShowName", _wrap_MidMapShowName},
    { "MidMapClickNPC", _wrap_MidMapClickNPC},
    { "UpdateSearchList", _wrap_UpdateSearchList},
    { "NPCSearchListUpOrDown", _wrap_NPCSearchListUpOrDown},
    { "MidMapShowLocationBox", _wrap_MidMapShowLocationBox},
    { "NPCSearchClickList", _wrap_NPCSearchClickList},
    { "PartySearchClickList", _wrap_PartySearchClickList},
    { "CharSearchClickList", _wrap_CharSearchClickList},
    { "ShowLeaderInfo", _wrap_ShowLeaderInfo},
    { "ShowLeaderInfoChar", _wrap_ShowLeaderInfoChar},
    { "SearchNPCList", _wrap_SearchNPCList},
    { "WeaponsRankSearchList", _wrap_WeaponsRankSearchList},
    { "ShowPartySearchList", _wrap_ShowPartySearchList},
    { "ShowCharSearchList", _wrap_ShowCharSearchList},
    { "OnPartySearchPagePrev", _wrap_OnPartySearchPagePrev},
    { "OnCharSearchPagePrev", _wrap_OnCharSearchPagePrev},
    { "OnPartySearchPageNext", _wrap_OnPartySearchPageNext},
    { "OnCharSearchPageNext", _wrap_OnCharSearchPageNext},
    { "OnJoinPartySearch", _wrap_OnJoinPartySearch},
    { "OnJoinCharSearch", _wrap_OnJoinCharSearch},
    { "OnShowPartyInfo", _wrap_OnShowPartyInfo},
    { "OnShowCharInfo", _wrap_OnShowCharInfo},
    { "IsIndoor", _wrap_IsIndoor},
    { "ConfirmPK", _wrap_ConfirmPK},
    { "CancelPK", _wrap_CancelPK},
    { "ConfirmMatch", _wrap_ConfirmMatch},
    { "CancelMatch", _wrap_CancelMatch},
    { "haveParty", _wrap_haveParty},
    { "IsLeader", _wrap_IsLeader},
    { "GetHelpEnable", _wrap_GetHelpEnable},
    { "GetActionEnable", _wrap_GetActionEnable},
    { "GetSkillEnable", _wrap_GetSkillEnable},
    { "GetItemEnable", _wrap_GetItemEnable},
    { "GetDefenceEnable", _wrap_GetDefenceEnable},
    { "GetFriendEnable", _wrap_GetFriendEnable},
    { "GetProtectEnable", _wrap_GetProtectEnable},
    { "GetCatchEnable", _wrap_GetCatchEnable},
    { "GetAutoEnable", _wrap_GetAutoEnable},
    { "GetEscapeEnable", _wrap_GetEscapeEnable},
    { "GetPartnerSkillEnable", _wrap_GetPartnerSkillEnable},
    { "GetPartnerItemEnable", _wrap_GetPartnerItemEnable},
    { "GetPartnerDefenceEnable", _wrap_GetPartnerDefenceEnable},
    { "GetPartnerProtectEnable", _wrap_GetPartnerProtectEnable},
    { "GetPartnerEscapeEnable", _wrap_GetPartnerEscapeEnable},
    { "DeleteCharacter", _wrap_DeleteCharacter},
    { "RetrieveCharacter", _wrap_RetrieveCharacter},
    { "CheckCharacterFrozen", _wrap_CheckCharacterFrozen},
    { "NPCSearchListScroll", _wrap_NPCSearchListScroll},
    { "UpdateShopItemDetail", _wrap_UpdateShopItemDetail},
    { "ResetSearchValue", _wrap_ResetSearchValue},
    { "InitLoginScreen", _wrap_InitLoginScreen},
    { "SaveLoginDefault", _wrap_SaveLoginDefault},
    { "GetDefaultCharacter", _wrap_GetDefaultCharacter},
    { "SetDefaultCharacter", _wrap_SetDefaultCharacter},
    { "GetDefaultLine", _wrap_GetDefaultLine},
    { "SetDefaultLine", _wrap_SetDefaultLine},
    { "ShopOpenConfirmBox",_wrap_ShopOpenConfirmBox},
    { "ShopEnterItemCount", _wrap_ShopEnterItemCount},
    { "ShopSetItemCount", _wrap_ShopSetItemCount},
    { "ShopAdjustItemCount", _wrap_ShopAdjustItemCount},
    { "ShopConfirmAction", _wrap_ShopConfirmAction},
    { "ShopResetAction", _wrap_ShopResetAction},
    { "ShopDragItemAction", _wrap_ShopDragItemAction},
    { "ShopOnClickSellButton", _wrap_ShopOnClickSellButton},
    { "ShopCloseMainMenu", _wrap_ShopCloseMainMenu},
    { "ShopOnEditBoxKeyUp", _wrap_ShopOnEditBoxKeyUp},
    { "ShopUpdatePrice", _wrap_ShopUpdatePrice},
    { "SetAniStateInLogin", _wrap_SetAniStateInLogin},
    { "ShowPartyButton", _wrap_ShowPartyButton},
    { "BattlePartnerEscape", _wrap_BattlePartnerEscape},
    { "TestingFunction", _wrap_TestingFunction},
    { "FormatToSkillString", _wrap_FormatToSkillString},
    { "IsBattlePartnerTurn", _wrap_IsBattlePartnerTurn},
    { "CheckCharacterName", _wrap_CheckCharacterName},
    { "SkillFail", _wrap_SkillFail},
    { "SubChatScroll", _wrap_SubChatScroll},
    { "CanLevelUp", _wrap_CanLevelUp},
    { "SelectItemPartner", _wrap_SelectItemPartner},
    { "UpdateChangeLine", _wrap_UpdateChangeLine},
    { "ApplicantPrivateCall", _wrap_ApplicantPrivateCall},
    { "IsTalking", _wrap_IsTalking},
    { "ChangeMapLine", _wrap_ChangeMapLine},
    { "ConfirmChangeLineSec", _wrap_ConfirmChangeLineSec},
    { "TeammatePrivateCall", _wrap_TeammatePrivateCall},
    { "TeammateKick", _wrap_TeammateKick},
    { "TeammatePromote", _wrap_TeammatePromote},
    { "ItemScroll", _wrap_ItemScroll},
    { "OnCloseBattleItem", _wrap_OnCloseBattleItem},
    { "QuestCancelCancel", _wrap_QuestCancelCancel},
    { "QuestCancelConfirm", _wrap_QuestCancelConfirm},
    { "IsOpenSkillShop", _wrap_IsOpenSkillShop},
    { "ShowRemoveCharacterName", _wrap_ShowRemoveCharacterName},
    { "SetTempResult", _wrap_SetTempResult},
    { "GetTempResult", _wrap_GetTempResult},
    { "ChangeFriendIcon", _wrap_ChangeFriendIcon},
    { "CloseFriendBox", _wrap_CloseFriendBox},
    { "CloseQuestionBox", _wrap_CloseQuestionBox},
    { "LuaSetBPShortCutFlag", _wrap_LuaSetBPShortCutFlag},
    { "LuaGetBPShortCutFlag", _wrap_LuaGetBPShortCutFlag},
    { "LockItem", _wrap_LockItem},
    { "UnlockItem", _wrap_UnlockItem},
    { "SetLockCursor", _wrap_SetLockCursor},
    { "SetUnLockCursor", _wrap_SetUnLockCursor},
    { "OpenFriendChatBox", _wrap_OpenFriendChatBox},
    { "OpenGuildBox", _wrap_OpenGuildBox},
    { "OpenDeleteMemberGuildBox", _wrap_OpenDeleteMemberGuildBox},
    { "OpenLeaveGuildBox", _wrap_OpenLeaveGuildBox},
    { "ClsoeGuildBox", _wrap_ClsoeGuildBox},
    { "LuaCreateUIPanel", _wrap_LuaCreateUIPanel},
    { "LuaCreateUIPanelEx", _wrap_LuaCreateUIPanelEx},
    { "LuaCreateUIImage", _wrap_LuaCreateUIImage},
    { "LuaCreateUIStaticText", _wrap_LuaCreateUIStaticText},
    { "LuaCreateUIButton", _wrap_LuaCreateUIButton},
    { "LuaCreateUICheckBox", _wrap_LuaCreateUICheckBox},
    { "LuaCreateUIListBox", _wrap_LuaCreateUIListBox},
    { "LuaCreateUIPopUpMenu", _wrap_LuaCreateUIPopUpMenu},
    { "LuaCreateUIScrollBarH", _wrap_LuaCreateUIScrollBarH},
    { "LuaCreateUIScrollBarV", _wrap_LuaCreateUIScrollBarV},
    { "LuaCreateUIScrollListBox", _wrap_LuaCreateUIScrollListBox},
    { "LuaCreateUIEditBox", _wrap_LuaCreateUIEditBox},
    { "LuaCreateUIChatPanel", _wrap_LuaCreateUIChatPanel},
    { "LuaCreateUIChatString", _wrap_LuaCreateUIChatString},
    { "LuaCreateUIChatLink", _wrap_LuaCreateUIChatLink},
    { "LuaCreateUIMiniMap", _wrap_LuaCreateUIMiniMap},
    { "LuaCreateUILinerImage", _wrap_LuaCreateUILinerImage},
    { "LuaCreateUILinerImageV", _wrap_LuaCreateUILinerImageV},
    { "LuaCreateUIAniIcon", _wrap_LuaCreateUIAniIcon},
    { "LuaCreateUIDynamicText", _wrap_LuaCreateUIDynamicText},
    { "RunNewGame", _wrap_RunNewGame},
    { "OpenHomePage", _wrap_OpenHomePage},
    { "ChangeChatIcon", _wrap_ChangeChatIcon},
    { "LuaGetChar_id", _wrap_LuaGetChar_id},
    { "LuaGetBag", _wrap_LuaGetBag},
    { "LuaGetItemName", _wrap_LuaGetItemName},
    { "LuaGetItemColor", _wrap_LuaGetItemColor},
    { "GetFirstNum", _wrap_GetFirstNum},
    { "GetLastNum", _wrap_GetLastNum},
    { "LuaSetShopSkillFlag", _wrap_LuaSetShopSkillFlag},
    { "LuaGetShopSkillFlag", _wrap_LuaGetShopSkillFlag},
    { "CharSetMapPos", _wrap_CharSetMapPos},
    { "CharOpenQuestMenu", _wrap_CharOpenQuestMenu},
    { "OpenFactionDetail", _wrap_OpenFactionDetail},
    { "LuaGetPartnerName", _wrap_LuaGetPartnerName},
    { "LuaGetPartnerOriginName", _wrap_LuaGetPartnerOriginName},
    { "LuaGetPartnerID", _wrap_LuaGetPartnerID},
    { "LuaGetPetName", _wrap_LuaGetPetName},
    { "LuaGetPetOriginName", _wrap_LuaGetPetOriginName},
    { "LuaGetPetID", _wrap_LuaGetPetID},
    { "LuaAddAlertBox", _wrap_LuaAddAlertBox},
    { "LuaGetLineTextName", _wrap_LuaGetLineTextName},
    { "IsHawking", _wrap_IsHawking},
    { "ShowPartyPopUp", _wrap_ShowPartyPopUp},
    { "SelectPartyPopUp", _wrap_SelectPartyPopUp},
    { "ShowTeammatePopUp", _wrap_ShowTeammatePopUp},
    { "AutoAcceptCheckBox", _wrap_AutoAcceptCheckBox},
    { "SelectTeammatePopUp", _wrap_SelectTeammatePopUp},
    { "SetChangePos", _wrap_SetChangePos},
    { "ChangePartyDesc", _wrap_ChangePartyDesc},
    { "StopCharacter", _wrap_StopCharacter},
    { "ShowAlertOK", _wrap_ShowAlertOK},
    { "CreateCharRotate", _wrap_CreateCharRotate},
    { "ConfirmReplyString", _wrap_ConfirmReplyString},
    { "ReplyStringNULL", _wrap_ReplyStringNULL},
    { "IsCurrMsgIcon", _wrap_IsCurrMsgIcon},
    { "SetHotKeyEnable", _wrap_SetHotKeyEnable},
    { "OpenWebLink", _wrap_OpenWebLink},
    { "SetWebLink", _wrap_SetWebLink},
    { "CharEatFastFood", _wrap_CharEatFastFood},
    {0,0}
};

static swig_lua_var_info swig_variables[] = {
    {0,0,0}
};

static swig_lua_const_info swig_constants[] = {
{ SWIG_LUA_INT,     (char *)"VK_RETURN", (long) 0x0D, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"VK_TAB", (long) 0x09, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"VK_DELETE", (long) 0x2E, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"WM_KEYDOWN", (long) 0x0100, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"WM_KEYUP", (long) 0x0101, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"WM_CHAR", (long) 0x0102, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"WM_MOUSEMOVE", (long) 0x0200, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"WM_LBUTTONDOWN", (long) 0x0201, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"WM_LBUTTONUP", (long) 0x0202, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"WM_LBUTTONDBLCLK", (long) 0x0203, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"WM_RBUTTONDOWN", (long) 0x0204, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"WM_RBUTTONUP", (long) 0x0205, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"WM_RBUTTONDBLCLK", (long) 0x0206, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EDGE_FONT1", (long) EDGE_FONT1, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EDGE_FONT2", (long) EDGE_FONT2, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EDGE_SHADOW", (long) EDGE_SHADOW, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EDGE_LIGHT", (long) EDGE_LIGHT, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"ANIM_IDLE1", (long) ANIM_IDLE1, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"ANIM_RUN", (long) ANIM_RUN, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"ANIM_SIT", (long) ANIM_SIT, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"ANIM_W1BAT", (long) ANIM_W1BAT, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"ANIM_W1ATK1", (long) ANIM_W1ATK1, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"ANIM_W1ATK2", (long) ANIM_W1ATK2, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"ANIM_W2BAT", (long) ANIM_W2BAT, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"ANIM_W2ATK1", (long) ANIM_W2ATK1, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"ANIM_W2ATK2", (long) ANIM_W2ATK2, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"ANIM_SKILL", (long) ANIM_SKILL, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"ANIM_HURT", (long) ANIM_HURT, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"ANIM_DIE", (long) ANIM_DIE, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"ANIM_DEF", (long) ANIM_DEF, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"ANIM_USE", (long) ANIM_USE, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"ANIM_JUMP_START", (long) ANIM_JUMP_START, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"ANIM_JUMP", (long) ANIM_JUMP, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"ANIM_JUMP_END", (long) ANIM_JUMP_END, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"ANIM_IDLE2", (long) ANIM_IDLE2, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"ANIM_WALK", (long) ANIM_WALK, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"MAX_ANIM_TYPE", (long) MAX_ANIM_TYPE, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"_ButtonNormal", (long) _ButtonNormal, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"_ButtonMouseOver", (long) _ButtonMouseOver, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"_ButtonClick", (long) _ButtonClick, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"_ButtonDisable", (long) _ButtonDisable, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"_MaxButton_State", (long) _MaxButton_State, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"SOUTH", (long) SOUTH, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"SOUTHEAST", (long) SOUTHEAST, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"EAST", (long) EAST, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"NORTHEAST", (long) NORTHEAST, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"NORTH", (long) NORTH, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"NORTHWEST", (long) NORTHWEST, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"WEST", (long) WEST, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"SOUTHWEST", (long) SOUTHWEST, 0, 0, 0},
{ SWIG_LUA_INT,     (char *)"MAXROTATION", (long) MAXROTATION, 0, 0, 0},
    {0,0,0,0,0,0}
};

/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_UIListBoxTo_p_UIItem(void *x) {
    return (void *)((UIItem *) (UIStaticText *) ((UIListBox *) x));
}
static void *_p_UIScrollListBoxTo_p_UIItem(void *x) {
    return (void *)((UIItem *)  ((UIScrollListBox *) x));
}
static void *_p_UIDynamicTextTo_p_UIItem(void *x) {
    return (void *)((UIItem *) (UIStaticText *) ((UIDynamicText *) x));
}
static void *_p_UILinerImageTo_p_UIItem(void *x) {
    return (void *)((UIItem *) (UIImage *) ((UILinerImage *) x));
}
static void *_p_UIButtonTo_p_UIItem(void *x) {
    return (void *)((UIItem *)  ((UIButton *) x));
}
static void *_p_UIEditBoxTo_p_UIItem(void *x) {
    return (void *)((UIItem *) (UIStaticText *) ((UIEditBox *) x));
}
static void *_p_UIPanelExTo_p_UIItem(void *x) {
    return (void *)((UIItem *) (UIPanel *) ((UIPanelEx *) x));
}
static void *_p_UIChatEditPanelTo_p_UIItem(void *x) {
    return (void *)((UIItem *) (UIStaticText *)(UIChatPanel *) ((UIChatEditPanel *) x));
}
static void *_p_UIChatPanelTo_p_UIItem(void *x) {
    return (void *)((UIItem *) (UIStaticText *) ((UIChatPanel *) x));
}
static void *_p_UIPopUpMenuTo_p_UIItem(void *x) {
    return (void *)((UIItem *) (UIStaticText *)(UIListBox *) ((UIPopUpMenu *) x));
}
static void *_p_UIEditBoxExTo_p_UIItem(void *x) {
    return (void *)((UIItem *) (UIStaticText *)(UIEditBox *) ((UIEditBoxEx *) x));
}
static void *_p_UILinerImageVTo_p_UIItem(void *x) {
    return (void *)((UIItem *) (UIImage *)(UILinerImage *) ((UILinerImageV *) x));
}
static void *_p_UIMiniMapTo_p_UIItem(void *x) {
    return (void *)((UIItem *)  ((UIMiniMap *) x));
}
static void *_p_UIScrollBarVTo_p_UIItem(void *x) {
    return (void *)((UIItem *)  ((UIScrollBarV *) x));
}
static void *_p_UIScrollBarHTo_p_UIItem(void *x) {
    return (void *)((UIItem *) (UIScrollBarV *) ((UIScrollBarH *) x));
}
static void *_p_UICheckBoxTo_p_UIItem(void *x) {
    return (void *)((UIItem *)  ((UICheckBox *) x));
}
static void *_p_UIPanelTo_p_UIItem(void *x) {
    return (void *)((UIItem *)  ((UIPanel *) x));
}
static void *_p_UIAniIconTo_p_UIItem(void *x) {
    return (void *)((UIItem *) (UIImage *) ((UIAniIcon *) x));
}
static void *_p_UIImageTo_p_UIItem(void *x) {
    return (void *)((UIItem *)  ((UIImage *) x));
}
static void *_p_UIStaticTextTo_p_UIItem(void *x) {
    return (void *)((UIItem *)  ((UIStaticText *) x));
}
static void *_p_UIChatEditPanelTo_p_UIChatPanel(void *x) {
    return (void *)((UIChatPanel *)  ((UIChatEditPanel *) x));
}
static void *_p_UIScrollBarHTo_p_UIScrollBarV(void *x) {
    return (void *)((UIScrollBarV *)  ((UIScrollBarH *) x));
}
static void *_p_UIEditBoxExTo_p_UIEditBox(void *x) {
    return (void *)((UIEditBox *)  ((UIEditBoxEx *) x));
}
static void *_p_UIPopUpMenuTo_p_UIListBox(void *x) {
    return (void *)((UIListBox *)  ((UIPopUpMenu *) x));
}
static void *_p_UILinerImageVTo_p_UIImage(void *x) {
    return (void *)((UIImage *) (UILinerImage *) ((UILinerImageV *) x));
}
static void *_p_UILinerImageTo_p_UIImage(void *x) {
    return (void *)((UIImage *)  ((UILinerImage *) x));
}
static void *_p_UIAniIconTo_p_UIImage(void *x) {
    return (void *)((UIImage *)  ((UIAniIcon *) x));
}
static void *_p_UIChatStringTo_p_UIChatItem(void *x) {
    return (void *)((UIChatItem *)  ((UIChatString *) x));
}
static void *_p_UIChatLinkTo_p_UIChatItem(void *x) {
    return (void *)((UIChatItem *) (UIChatString *) ((UIChatLink *) x));
}
static void *_p_UILinerImageVTo_p_UILinerImage(void *x) {
    return (void *)((UILinerImage *)  ((UILinerImageV *) x));
}
static void *_p_UIPanelExTo_p_UIPanel(void *x) {
    return (void *)((UIPanel *)  ((UIPanelEx *) x));
}
static void *_p_UIChatLinkTo_p_UIChatString(void *x) {
    return (void *)((UIChatString *)  ((UIChatLink *) x));
}
static void *_p_UIDynamicTextTo_p_UIStaticText(void *x) {
    return (void *)((UIStaticText *)  ((UIDynamicText *) x));
}
static void *_p_UIEditBoxTo_p_UIStaticText(void *x) {
    return (void *)((UIStaticText *)  ((UIEditBox *) x));
}
static void *_p_UIEditBoxExTo_p_UIStaticText(void *x) {
    return (void *)((UIStaticText *) (UIEditBox *) ((UIEditBoxEx *) x));
}
static void *_p_UIListBoxTo_p_UIStaticText(void *x) {
    return (void *)((UIStaticText *)  ((UIListBox *) x));
}
static void *_p_UIPopUpMenuTo_p_UIStaticText(void *x) {
    return (void *)((UIStaticText *) (UIListBox *) ((UIPopUpMenu *) x));
}
static void *_p_UIChatPanelTo_p_UIStaticText(void *x) {
    return (void *)((UIStaticText *)  ((UIChatPanel *) x));
}
static void *_p_UIChatEditPanelTo_p_UIStaticText(void *x) {
    return (void *)((UIStaticText *) (UIChatPanel *) ((UIChatEditPanel *) x));
}
static swig_type_info _swigt__UInt = {"_UInt", "UInt", 0, 0, (void*)0, 0};
static swig_type_info _swigt__WORD = {"_WORD", "WORD", 0, 0, (void*)0, 0};
static swig_type_info _swigt__WPARAM = {"_WPARAM", "WPARAM", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CAccShopProcess = {"_p_CAccShopProcess", "CAccShopProcess *", 0, 0, (void*)&_wrap_class_CAccShopProcess, 0};
static swig_type_info _swigt__p_CAnimatedEntity = {"_p_CAnimatedEntity", "CAnimatedEntity *", 0, 0, (void*)&_wrap_class_CAnimatedEntity, 0};
static swig_type_info _swigt__p_CAntiHack = {"_p_CAntiHack", "CAntiHack *", 0, 0, (void*)&_wrap_class_CAntiHack, 0};
static swig_type_info _swigt__p_CBatBubbleControl = {"_p_CBatBubbleControl", "CBatBubbleControl *", 0, 0, (void*)&_wrap_class_CBatBubbleControl, 0};
static swig_type_info _swigt__p_CBigMap = {"_p_CBigMap", "CBigMap *", 0, 0, (void*)&_wrap_class_CBigMap, 0};
static swig_type_info _swigt__p_CEntityBase = {"_p_CEntityBase", "CEntityBase *", 0, 0, (void*)&_wrap_class_CEntityBase, 0};
static swig_type_info _swigt__p_CGenerationProcess = {"_p_CGenerationProcess", "CGenerationProcess *", 0, 0, (void*)&_wrap_class_CGenerationProcess, 0};
static swig_type_info _swigt__p_CImage = {"_p_CImage", "CImage *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CMenuAutoWalkProcess = {"_p_CMenuAutoWalkProcess", "CMenuAutoWalkProcess *", 0, 0, (void*)&_wrap_class_CMenuAutoWalkProcess, 0};
static swig_type_info _swigt__p_CMenuBankService = {"_p_CMenuBankService", "CMenuBankService *", 0, 0, (void*)&_wrap_class_CMenuBankService, 0};
static swig_type_info _swigt__p_CMenuBuffIconProcess = {"_p_CMenuBuffIconProcess", "CMenuBuffIconProcess *", 0, 0, (void*)&_wrap_class_CMenuBuffIconProcess, 0};
static swig_type_info _swigt__p_CMenuFriendProcess = {"_p_CMenuFriendProcess", "CMenuFriendProcess *", 0, 0, (void*)&_wrap_class_CMenuFriendProcess, 0};
static swig_type_info _swigt__p_CMenuGiftBox = {"_p_CMenuGiftBox", "CMenuGiftBox *", 0, 0, (void*)&_wrap_class_CMenuGiftBox, 0};
static swig_type_info _swigt__p_CMenuGivenProcess = {"_p_CMenuGivenProcess", "CMenuGivenProcess *", 0, 0, (void*)&_wrap_class_CMenuGivenProcess, 0};
static swig_type_info _swigt__p_CMenuGuildProcess = {"_p_CMenuGuildProcess", "CMenuGuildProcess *", 0, 0, (void*)&_wrap_class_CMenuGuildProcess, 0};
static swig_type_info _swigt__p_CMenuHawkerProcess = {"_p_CMenuHawkerProcess", "CMenuHawkerProcess *", 0, 0, (void*)&_wrap_class_CMenuHawkerProcess, 0};
static swig_type_info _swigt__p_CMenuHelpProcess = {"_p_CMenuHelpProcess", "CMenuHelpProcess *", 0, 0, (void*)&_wrap_class_CMenuHelpProcess, 0};
static swig_type_info _swigt__p_CMenuItemProcess = {"_p_CMenuItemProcess", "CMenuItemProcess *", 0, 0, (void*)&_wrap_class_CMenuItemProcess, 0};
static swig_type_info _swigt__p_CMenuMixProcess = {"_p_CMenuMixProcess", "CMenuMixProcess *", 0, 0, (void*)&_wrap_class_CMenuMixProcess, 0};
static swig_type_info _swigt__p_CMenuOnlineShopProcess = {"_p_CMenuOnlineShopProcess", "CMenuOnlineShopProcess *", 0, 0, (void*)&_wrap_class_CMenuOnlineShopProcess, 0};
static swig_type_info _swigt__p_CMenuPartnerCultivationUpProcess = {"_p_CMenuPartnerCultivationUpProcess", "CMenuPartnerCultivationUpProcess *", 0, 0, (void*)&_wrap_class_CMenuPartnerCultivationUpProcess, 0};
static swig_type_info _swigt__p_CMenuPartnerProcess = {"_p_CMenuPartnerProcess", "CMenuPartnerProcess *", 0, 0, (void*)&_wrap_class_CMenuPartnerProcess, 0};
static swig_type_info _swigt__p_CMenuPetProcess = {"_p_CMenuPetProcess", "CMenuPetProcess *", 0, 0, (void*)&_wrap_class_CMenuPetProcess, 0};
static swig_type_info _swigt__p_CMenuQuestJournal = {"_p_CMenuQuestJournal", "CMenuQuestJournal *", 0, 0, (void*)&_wrap_class_CMenuQuestJournal, 0};
static swig_type_info _swigt__p_CMenuQuestLogProcess = {"_p_CMenuQuestLogProcess", "CMenuQuestLogProcess *", 0, 0, (void*)&_wrap_class_CMenuQuestLogProcess, 0};
static swig_type_info _swigt__p_CMenuRankProcess = {"_p_CMenuRankProcess", "CMenuRankProcess *", 0, 0, (void*)&_wrap_class_CMenuRankProcess, 0};
static swig_type_info _swigt__p_CMenuSellYuanBaoProcess = {"_p_CMenuSellYuanBaoProcess", "CMenuSellYuanBaoProcess *", 0, 0, (void*)&_wrap_class_CMenuSellYuanBaoProcess, 0};
static swig_type_info _swigt__p_CMenuSkillProcess = {"_p_CMenuSkillProcess", "CMenuSkillProcess *", 0, 0, (void*)&_wrap_class_CMenuSkillProcess, 0};
static swig_type_info _swigt__p_CMenuSystemSetting = {"_p_CMenuSystemSetting", "CMenuSystemSetting *", 0, 0, (void*)&_wrap_class_CMenuSystemSetting, 0};
static swig_type_info _swigt__p_CMenuTargetEquipProcess = {"_p_CMenuTargetEquipProcess", "CMenuTargetEquipProcess *", 0, 0, (void*)&_wrap_class_CMenuTargetEquipProcess, 0};
static swig_type_info _swigt__p_CMenuTargetProcess = {"_p_CMenuTargetProcess", "CMenuTargetProcess *", 0, 0, (void*)&_wrap_class_CMenuTargetProcess, 0};
static swig_type_info _swigt__p_CMenuTitleProcess = {"_p_CMenuTitleProcess", "CMenuTitleProcess *", 0, 0, (void*)&_wrap_class_CMenuTitleProcess, 0};
static swig_type_info _swigt__p_CMenuTradingProcess = {"_p_CMenuTradingProcess", "CMenuTradingProcess *", 0, 0, (void*)&_wrap_class_CMenuTradingProcess, 0};
static swig_type_info _swigt__p_CMenuWareHouseProcess = {"_p_CMenuWareHouseProcess", "CMenuWareHouseProcess *", 0, 0, (void*)&_wrap_class_CMenuWareHouseProcess, 0};
static swig_type_info _swigt__p_CPointsShopProcess = {"_p_CPointsShopProcess", "CPointsShopProcess *", 0, 0, (void*)&_wrap_class_CPointsShopProcess, 0};
static swig_type_info _swigt__p_CQuestionProcess = {"_p_CQuestionProcess", "CQuestionProcess *", 0, 0, (void*)&_wrap_class_CQuestionProcess, 0};
static swig_type_info _swigt__p_CRelationSystemProcess = {"_p_CRelationSystemProcess", "CRelationSystemProcess *", 0, 0, (void*)&_wrap_class_CRelationSystemProcess, 0};
static swig_type_info _swigt__p_CTeamDescription = {"_p_CTeamDescription", "CTeamDescription *", 0, 0, (void*)&_wrap_class_CTeamDescription, 0};
static swig_type_info _swigt__p_CWantedProcess = {"_p_CWantedProcess", "CWantedProcess *", 0, 0, (void*)&_wrap_class_CWantedProcess, 0};
static swig_type_info _swigt__p_CWeaponsRank = {"_p_CWeaponsRank", "CWeaponsRank *", 0, 0, (void*)&_wrap_class_CWeaponsRank, 0};
static swig_type_info _swigt__p_ChatLst = {"_p_ChatLst", "ChatLst *", 0, 0, (void*)&_wrap_class_ChatLst, 0};
static swig_type_info _swigt__p_ChatPool = {"_p_ChatPool", "ChatPool *", 0, 0, (void*)&_wrap_class_ChatPool, 0};
static swig_type_info _swigt__p_FSOUND_Manager = {"_p_FSOUND_Manager", "FSOUND_Manager *", 0, 0, (void*)&_wrap_class_FSOUND_Manager, 0};
static swig_type_info _swigt__p_FSound = {"_p_FSound", "FSound *", 0, 0, (void*)&_wrap_class_FSound, 0};
static swig_type_info _swigt__p_RECT = {"_p_RECT", "RECT *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_StringA = {"_p_StringA", "StringA *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_StringW = {"_p_StringW", "StringW *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UIAniIcon = {"_p_UIAniIcon", "UIAniIcon *", 0, 0, (void*)&_wrap_class_UIAniIcon, 0};
static swig_type_info _swigt__p_UIButton = {"_p_UIButton", "UIButton *", 0, 0, (void*)&_wrap_class_UIButton, 0};
static swig_type_info _swigt__p_UIChatEditPanel = {"_p_UIChatEditPanel", "UIChatEditPanel *", 0, 0, (void*)&_wrap_class_UIChatEditPanel, 0};
static swig_type_info _swigt__p_UIChatItem = {"_p_UIChatItem", "UIChatItem *", 0, 0, (void*)&_wrap_class_UIChatItem, 0};
static swig_type_info _swigt__p_UIChatLink = {"_p_UIChatLink", "UIChatLink *", 0, 0, (void*)&_wrap_class_UIChatLink, 0};
static swig_type_info _swigt__p_UIChatPanel = {"_p_UIChatPanel", "UIChatPanel *", 0, 0, (void*)&_wrap_class_UIChatPanel, 0};
static swig_type_info _swigt__p_UIChatRow = {"_p_UIChatRow", "UIChatRow *", 0, 0, (void*)&_wrap_class_UIChatRow, 0};
static swig_type_info _swigt__p_UIChatString = {"_p_UIChatString", "UIChatString *", 0, 0, (void*)&_wrap_class_UIChatString, 0};
static swig_type_info _swigt__p_UICheckBox = {"_p_UICheckBox", "UICheckBox *", 0, 0, (void*)&_wrap_class_UICheckBox, 0};
static swig_type_info _swigt__p_UIDynamicText = {"_p_UIDynamicText", "UIDynamicText *", 0, 0, (void*)&_wrap_class_UIDynamicText, 0};
static swig_type_info _swigt__p_UIEditBox = {"_p_UIEditBox", "UIEditBox *", 0, 0, (void*)&_wrap_class_UIEditBox, 0};
static swig_type_info _swigt__p_UIEditBoxEx = {"_p_UIEditBoxEx", "UIEditBoxEx *", 0, 0, (void*)&_wrap_class_UIEditBoxEx, 0};
static swig_type_info _swigt__p_UIImage = {"_p_UIImage", "UIImage *", 0, 0, (void*)&_wrap_class_UIImage, 0};
static swig_type_info _swigt__p_UIItem = {"_p_UIItem", "UIItem *", 0, 0, (void*)&_wrap_class_UIItem, 0};
static swig_type_info _swigt__p_UILinerImage = {"_p_UILinerImage", "UILinerImage *", 0, 0, (void*)&_wrap_class_UILinerImage, 0};
static swig_type_info _swigt__p_UILinerImageV = {"_p_UILinerImageV", "UILinerImageV *", 0, 0, (void*)&_wrap_class_UILinerImageV, 0};
static swig_type_info _swigt__p_UIListBox = {"_p_UIListBox", "UIListBox *", 0, 0, (void*)&_wrap_class_UIListBox, 0};
static swig_type_info _swigt__p_UIManager = {"_p_UIManager", "UIManager *", 0, 0, (void*)&_wrap_class_UIManager, 0};
static swig_type_info _swigt__p_UIMiniMap = {"_p_UIMiniMap", "UIMiniMap *", 0, 0, (void*)&_wrap_class_UIMiniMap, 0};
static swig_type_info _swigt__p_UIPanel = {"_p_UIPanel", "UIPanel *", 0, 0, (void*)&_wrap_class_UIPanel, 0};
static swig_type_info _swigt__p_UIPanelEx = {"_p_UIPanelEx", "UIPanelEx *", 0, 0, (void*)&_wrap_class_UIPanelEx, 0};
static swig_type_info _swigt__p_UIPopUpMenu = {"_p_UIPopUpMenu", "UIPopUpMenu *", 0, 0, (void*)&_wrap_class_UIPopUpMenu, 0};
static swig_type_info _swigt__p_UIScrollBarH = {"_p_UIScrollBarH", "UIScrollBarH *", 0, 0, (void*)&_wrap_class_UIScrollBarH, 0};
static swig_type_info _swigt__p_UIScrollBarV = {"_p_UIScrollBarV", "UIScrollBarV *", 0, 0, (void*)&_wrap_class_UIScrollBarV, 0};
static swig_type_info _swigt__p_UIScrollListBox = {"_p_UIScrollListBox", "UIScrollListBox *", 0, 0, (void*)&_wrap_class_UIScrollListBox, 0};
static swig_type_info _swigt__p_UIStaticText = {"_p_UIStaticText", "UIStaticText *", 0, 0, (void*)&_wrap_class_UIStaticText, 0};
static swig_type_info _swigt__p_UInt = {"_p_UInt", "UInt *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WORD = {"_p_WORD", "WORD *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WPARAM = {"_p_WPARAM", "WPARAM *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_bool = {"_p_bool", "bool *|Boolean *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_lua_State = {"_p_lua_State", "lua_State *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_short = {"_p_short", "short *|Int16 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_signed_char = {"_p_signed_char", "signed char *|Int8 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_t = {"_p_size_t", "size_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "unsigned char *|UInt8 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_short = {"_p_unsigned_short", "unsigned short *|ClassID *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wchar_t = {"_p_wchar_t", "wchar_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__size_t = {"_size_t", "size_t", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__UInt,
  &_swigt__WORD,
  &_swigt__WPARAM,
  &_swigt__p_CAccShopProcess,
  &_swigt__p_CAnimatedEntity,
  &_swigt__p_CAntiHack,
  &_swigt__p_CBatBubbleControl,
  &_swigt__p_CBigMap,
  &_swigt__p_CEntityBase,
  &_swigt__p_CGenerationProcess,
  &_swigt__p_CImage,
  &_swigt__p_CMenuAutoWalkProcess,
  &_swigt__p_CMenuBankService,
  &_swigt__p_CMenuBuffIconProcess,
  &_swigt__p_CMenuFriendProcess,
  &_swigt__p_CMenuGiftBox,
  &_swigt__p_CMenuGivenProcess,
  &_swigt__p_CMenuGuildProcess,
  &_swigt__p_CMenuHawkerProcess,
  &_swigt__p_CMenuHelpProcess,
  &_swigt__p_CMenuItemProcess,
  &_swigt__p_CMenuMixProcess,
  &_swigt__p_CMenuOnlineShopProcess,
  &_swigt__p_CMenuPartnerCultivationUpProcess,
  &_swigt__p_CMenuPartnerProcess,
  &_swigt__p_CMenuPetProcess,
  &_swigt__p_CMenuQuestJournal,
  &_swigt__p_CMenuQuestLogProcess,
  &_swigt__p_CMenuRankProcess,
  &_swigt__p_CMenuSellYuanBaoProcess,
  &_swigt__p_CMenuSkillProcess,
  &_swigt__p_CMenuSystemSetting,
  &_swigt__p_CMenuTargetEquipProcess,
  &_swigt__p_CMenuTargetProcess,
  &_swigt__p_CMenuTitleProcess,
  &_swigt__p_CMenuTradingProcess,
  &_swigt__p_CMenuWareHouseProcess,
  &_swigt__p_CPointsShopProcess,
  &_swigt__p_CQuestionProcess,
  &_swigt__p_CRelationSystemProcess,
  &_swigt__p_CTeamDescription,
  &_swigt__p_CWantedProcess,
  &_swigt__p_CWeaponsRank,
  &_swigt__p_ChatLst,
  &_swigt__p_ChatPool,
  &_swigt__p_FSOUND_Manager,
  &_swigt__p_FSound,
  &_swigt__p_RECT,
  &_swigt__p_StringA,
  &_swigt__p_StringW,
  &_swigt__p_UIAniIcon,
  &_swigt__p_UIButton,
  &_swigt__p_UIChatEditPanel,
  &_swigt__p_UIChatItem,
  &_swigt__p_UIChatLink,
  &_swigt__p_UIChatPanel,
  &_swigt__p_UIChatRow,
  &_swigt__p_UIChatString,
  &_swigt__p_UICheckBox,
  &_swigt__p_UIDynamicText,
  &_swigt__p_UIEditBox,
  &_swigt__p_UIEditBoxEx,
  &_swigt__p_UIImage,
  &_swigt__p_UIItem,
  &_swigt__p_UILinerImage,
  &_swigt__p_UILinerImageV,
  &_swigt__p_UIListBox,
  &_swigt__p_UIManager,
  &_swigt__p_UIMiniMap,
  &_swigt__p_UIPanel,
  &_swigt__p_UIPanelEx,
  &_swigt__p_UIPopUpMenu,
  &_swigt__p_UIScrollBarH,
  &_swigt__p_UIScrollBarV,
  &_swigt__p_UIScrollListBox,
  &_swigt__p_UIStaticText,
  &_swigt__p_UInt,
  &_swigt__p_WORD,
  &_swigt__p_WPARAM,
  &_swigt__p_bool,
  &_swigt__p_int,
  &_swigt__p_lua_State,
  &_swigt__p_short,
  &_swigt__p_signed_char,
  &_swigt__p_size_t,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_short,
  &_swigt__p_wchar_t,
  &_swigt__size_t,
};

static swig_cast_info _swigc__UInt[] = {  {&_swigt__UInt, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__WORD[] = {  {&_swigt__WORD, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__WPARAM[] = {  {&_swigt__WPARAM, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CAccShopProcess[] = {  {&_swigt__p_CAccShopProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CAnimatedEntity[] = {  {&_swigt__p_CAnimatedEntity, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CAntiHack[] = {  {&_swigt__p_CAntiHack, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CBatBubbleControl[] = {  {&_swigt__p_CBatBubbleControl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CBigMap[] = {  {&_swigt__p_CBigMap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CEntityBase[] = {  {&_swigt__p_CEntityBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CGenerationProcess[] = {  {&_swigt__p_CGenerationProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CImage[] = {  {&_swigt__p_CImage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuAutoWalkProcess[] = {  {&_swigt__p_CMenuAutoWalkProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuBankService[] = {  {&_swigt__p_CMenuBankService, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuBuffIconProcess[] = {  {&_swigt__p_CMenuBuffIconProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuFriendProcess[] = {  {&_swigt__p_CMenuFriendProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuGiftBox[] = {  {&_swigt__p_CMenuGiftBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuGivenProcess[] = {  {&_swigt__p_CMenuGivenProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuGuildProcess[] = {  {&_swigt__p_CMenuGuildProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuHawkerProcess[] = {  {&_swigt__p_CMenuHawkerProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuHelpProcess[] = {  {&_swigt__p_CMenuHelpProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuItemProcess[] = {  {&_swigt__p_CMenuItemProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuMixProcess[] = {  {&_swigt__p_CMenuMixProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuOnlineShopProcess[] = {  {&_swigt__p_CMenuOnlineShopProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuPartnerCultivationUpProcess[] = {  {&_swigt__p_CMenuPartnerCultivationUpProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuPartnerProcess[] = {  {&_swigt__p_CMenuPartnerProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuPetProcess[] = {  {&_swigt__p_CMenuPetProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuQuestJournal[] = {  {&_swigt__p_CMenuQuestJournal, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuQuestLogProcess[] = {  {&_swigt__p_CMenuQuestLogProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuRankProcess[] = {  {&_swigt__p_CMenuRankProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuSellYuanBaoProcess[] = {  {&_swigt__p_CMenuSellYuanBaoProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuSkillProcess[] = {  {&_swigt__p_CMenuSkillProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuSystemSetting[] = {  {&_swigt__p_CMenuSystemSetting, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuTargetEquipProcess[] = {  {&_swigt__p_CMenuTargetEquipProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuTargetProcess[] = {  {&_swigt__p_CMenuTargetProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuTitleProcess[] = {  {&_swigt__p_CMenuTitleProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuTradingProcess[] = {  {&_swigt__p_CMenuTradingProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CMenuWareHouseProcess[] = {  {&_swigt__p_CMenuWareHouseProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CPointsShopProcess[] = {  {&_swigt__p_CPointsShopProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CQuestionProcess[] = {  {&_swigt__p_CQuestionProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CRelationSystemProcess[] = {  {&_swigt__p_CRelationSystemProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CTeamDescription[] = {  {&_swigt__p_CTeamDescription, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CWantedProcess[] = {  {&_swigt__p_CWantedProcess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CWeaponsRank[] = {  {&_swigt__p_CWeaponsRank, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ChatLst[] = {  {&_swigt__p_ChatLst, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ChatPool[] = {  {&_swigt__p_ChatPool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FSOUND_Manager[] = {  {&_swigt__p_FSOUND_Manager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FSound[] = {  {&_swigt__p_FSound, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RECT[] = {  {&_swigt__p_RECT, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_StringA[] = {  {&_swigt__p_StringA, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_StringW[] = {  {&_swigt__p_StringW, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIAniIcon[] = {  {&_swigt__p_UIAniIcon, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIButton[] = {  {&_swigt__p_UIButton, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIChatEditPanel[] = {  {&_swigt__p_UIChatEditPanel, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIChatItem[] = {  {&_swigt__p_UIChatItem, 0, 0, 0},  {&_swigt__p_UIChatString, _p_UIChatStringTo_p_UIChatItem, 0, 0},  {&_swigt__p_UIChatLink, _p_UIChatLinkTo_p_UIChatItem, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIChatLink[] = {  {&_swigt__p_UIChatLink, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIChatPanel[] = {  {&_swigt__p_UIChatPanel, 0, 0, 0},  {&_swigt__p_UIChatEditPanel, _p_UIChatEditPanelTo_p_UIChatPanel, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIChatRow[] = {  {&_swigt__p_UIChatRow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIChatString[] = {  {&_swigt__p_UIChatString, 0, 0, 0},  {&_swigt__p_UIChatLink, _p_UIChatLinkTo_p_UIChatString, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UICheckBox[] = {  {&_swigt__p_UICheckBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIDynamicText[] = {  {&_swigt__p_UIDynamicText, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIEditBox[] = {  {&_swigt__p_UIEditBox, 0, 0, 0},  {&_swigt__p_UIEditBoxEx, _p_UIEditBoxExTo_p_UIEditBox, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIEditBoxEx[] = {  {&_swigt__p_UIEditBoxEx, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIImage[] = {  {&_swigt__p_UIImage, 0, 0, 0},  {&_swigt__p_UILinerImageV, _p_UILinerImageVTo_p_UIImage, 0, 0},  {&_swigt__p_UILinerImage, _p_UILinerImageTo_p_UIImage, 0, 0},  {&_swigt__p_UIAniIcon, _p_UIAniIconTo_p_UIImage, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIItem[] = {  {&_swigt__p_UIListBox, _p_UIListBoxTo_p_UIItem, 0, 0},  {&_swigt__p_UIScrollListBox, _p_UIScrollListBoxTo_p_UIItem, 0, 0},  {&_swigt__p_UILinerImage, _p_UILinerImageTo_p_UIItem, 0, 0},  {&_swigt__p_UIDynamicText, _p_UIDynamicTextTo_p_UIItem, 0, 0},  {&_swigt__p_UIButton, _p_UIButtonTo_p_UIItem, 0, 0},  {&_swigt__p_UIEditBox, _p_UIEditBoxTo_p_UIItem, 0, 0},  {&_swigt__p_UIPanelEx, _p_UIPanelExTo_p_UIItem, 0, 0},  {&_swigt__p_UIChatEditPanel, _p_UIChatEditPanelTo_p_UIItem, 0, 0},  {&_swigt__p_UIChatPanel, _p_UIChatPanelTo_p_UIItem, 0, 0},  {&_swigt__p_UIPopUpMenu, _p_UIPopUpMenuTo_p_UIItem, 0, 0},  {&_swigt__p_UIItem, 0, 0, 0},  {&_swigt__p_UIEditBoxEx, _p_UIEditBoxExTo_p_UIItem, 0, 0},  {&_swigt__p_UILinerImageV, _p_UILinerImageVTo_p_UIItem, 0, 0},  {&_swigt__p_UIMiniMap, _p_UIMiniMapTo_p_UIItem, 0, 0},  {&_swigt__p_UIScrollBarV, _p_UIScrollBarVTo_p_UIItem, 0, 0},  {&_swigt__p_UIScrollBarH, _p_UIScrollBarHTo_p_UIItem, 0, 0},  {&_swigt__p_UICheckBox, _p_UICheckBoxTo_p_UIItem, 0, 0},  {&_swigt__p_UIPanel, _p_UIPanelTo_p_UIItem, 0, 0},  {&_swigt__p_UIAniIcon, _p_UIAniIconTo_p_UIItem, 0, 0},  {&_swigt__p_UIImage, _p_UIImageTo_p_UIItem, 0, 0},  {&_swigt__p_UIStaticText, _p_UIStaticTextTo_p_UIItem, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UILinerImage[] = {  {&_swigt__p_UILinerImageV, _p_UILinerImageVTo_p_UILinerImage, 0, 0},  {&_swigt__p_UILinerImage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UILinerImageV[] = {  {&_swigt__p_UILinerImageV, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIListBox[] = {  {&_swigt__p_UIListBox, 0, 0, 0},  {&_swigt__p_UIPopUpMenu, _p_UIPopUpMenuTo_p_UIListBox, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIManager[] = {  {&_swigt__p_UIManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIMiniMap[] = {  {&_swigt__p_UIMiniMap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIPanel[] = {  {&_swigt__p_UIPanelEx, _p_UIPanelExTo_p_UIPanel, 0, 0},  {&_swigt__p_UIPanel, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIPanelEx[] = {  {&_swigt__p_UIPanelEx, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIPopUpMenu[] = {  {&_swigt__p_UIPopUpMenu, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIScrollBarH[] = {  {&_swigt__p_UIScrollBarH, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIScrollBarV[] = {  {&_swigt__p_UIScrollBarV, 0, 0, 0},  {&_swigt__p_UIScrollBarH, _p_UIScrollBarHTo_p_UIScrollBarV, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIScrollListBox[] = {  {&_swigt__p_UIScrollListBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UIStaticText[] = {  {&_swigt__p_UIDynamicText, _p_UIDynamicTextTo_p_UIStaticText, 0, 0},  {&_swigt__p_UIEditBox, _p_UIEditBoxTo_p_UIStaticText, 0, 0},  {&_swigt__p_UIEditBoxEx, _p_UIEditBoxExTo_p_UIStaticText, 0, 0},  {&_swigt__p_UIStaticText, 0, 0, 0},  {&_swigt__p_UIListBox, _p_UIListBoxTo_p_UIStaticText, 0, 0},  {&_swigt__p_UIPopUpMenu, _p_UIPopUpMenuTo_p_UIStaticText, 0, 0},  {&_swigt__p_UIChatPanel, _p_UIChatPanelTo_p_UIStaticText, 0, 0},  {&_swigt__p_UIChatEditPanel, _p_UIChatEditPanelTo_p_UIStaticText, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UInt[] = {  {&_swigt__p_UInt, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WORD[] = {  {&_swigt__p_WORD, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WPARAM[] = {  {&_swigt__p_WPARAM, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_bool[] = {  {&_swigt__p_bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_lua_State[] = {  {&_swigt__p_lua_State, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_short[] = {  {&_swigt__p_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_signed_char[] = {  {&_swigt__p_signed_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_t[] = {  {&_swigt__p_size_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_short[] = {  {&_swigt__p_unsigned_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wchar_t[] = {  {&_swigt__p_wchar_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__size_t[] = {  {&_swigt__size_t, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__UInt,
  _swigc__WORD,
  _swigc__WPARAM,
  _swigc__p_CAccShopProcess,
  _swigc__p_CAnimatedEntity,
  _swigc__p_CAntiHack,
  _swigc__p_CBatBubbleControl,
  _swigc__p_CBigMap,
  _swigc__p_CEntityBase,
  _swigc__p_CGenerationProcess,
  _swigc__p_CImage,
  _swigc__p_CMenuAutoWalkProcess,
  _swigc__p_CMenuBankService,
  _swigc__p_CMenuBuffIconProcess,
  _swigc__p_CMenuFriendProcess,
  _swigc__p_CMenuGiftBox,
  _swigc__p_CMenuGivenProcess,
  _swigc__p_CMenuGuildProcess,
  _swigc__p_CMenuHawkerProcess,
  _swigc__p_CMenuHelpProcess,
  _swigc__p_CMenuItemProcess,
  _swigc__p_CMenuMixProcess,
  _swigc__p_CMenuOnlineShopProcess,
  _swigc__p_CMenuPartnerCultivationUpProcess,
  _swigc__p_CMenuPartnerProcess,
  _swigc__p_CMenuPetProcess,
  _swigc__p_CMenuQuestJournal,
  _swigc__p_CMenuQuestLogProcess,
  _swigc__p_CMenuRankProcess,
  _swigc__p_CMenuSellYuanBaoProcess,
  _swigc__p_CMenuSkillProcess,
  _swigc__p_CMenuSystemSetting,
  _swigc__p_CMenuTargetEquipProcess,
  _swigc__p_CMenuTargetProcess,
  _swigc__p_CMenuTitleProcess,
  _swigc__p_CMenuTradingProcess,
  _swigc__p_CMenuWareHouseProcess,
  _swigc__p_CPointsShopProcess,
  _swigc__p_CQuestionProcess,
  _swigc__p_CRelationSystemProcess,
  _swigc__p_CTeamDescription,
  _swigc__p_CWantedProcess,
  _swigc__p_CWeaponsRank,
  _swigc__p_ChatLst,
  _swigc__p_ChatPool,
  _swigc__p_FSOUND_Manager,
  _swigc__p_FSound,
  _swigc__p_RECT,
  _swigc__p_StringA,
  _swigc__p_StringW,
  _swigc__p_UIAniIcon,
  _swigc__p_UIButton,
  _swigc__p_UIChatEditPanel,
  _swigc__p_UIChatItem,
  _swigc__p_UIChatLink,
  _swigc__p_UIChatPanel,
  _swigc__p_UIChatRow,
  _swigc__p_UIChatString,
  _swigc__p_UICheckBox,
  _swigc__p_UIDynamicText,
  _swigc__p_UIEditBox,
  _swigc__p_UIEditBoxEx,
  _swigc__p_UIImage,
  _swigc__p_UIItem,
  _swigc__p_UILinerImage,
  _swigc__p_UILinerImageV,
  _swigc__p_UIListBox,
  _swigc__p_UIManager,
  _swigc__p_UIMiniMap,
  _swigc__p_UIPanel,
  _swigc__p_UIPanelEx,
  _swigc__p_UIPopUpMenu,
  _swigc__p_UIScrollBarH,
  _swigc__p_UIScrollBarV,
  _swigc__p_UIScrollListBox,
  _swigc__p_UIStaticText,
  _swigc__p_UInt,
  _swigc__p_WORD,
  _swigc__p_WPARAM,
  _swigc__p_bool,
  _swigc__p_int,
  _swigc__p_lua_State,
  _swigc__p_short,
  _swigc__p_signed_char,
  _swigc__p_size_t,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_short,
  _swigc__p_wchar_t,
  _swigc__size_t,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found;

  clientdata = clientdata;

  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
  }

  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);

    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }

  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
  
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif

    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
	type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }

    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
    
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
	if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
	if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
	  printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
	  cast->type = ret;
	  ret = 0;
	} else {
	  /* Check for casting already in the list */
	  swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
	  if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
	  if (!ocast) ret = 0;
	}
      }

      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
	printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;

#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
  printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;

  if (init_run) return;
  init_run = 1;

  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
            SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{ /* c-mode */
#endif
}
#endif



/* Forward declaration of where the user's %init{} gets inserted */
#ifdef __cplusplus
extern "C" {
#endif
void SWIG_init_user(lua_State* L );

/* this is the initialization function
	added at the very end of the code
	the function is always called SWIG_init, but an eariler #define will rename it
*/
SWIGEXPORT int SWIG_init(lua_State* L)
{
	int i;

	/* start with global table */
	lua_pushvalue(L,LUA_GLOBALSINDEX);

	SWIG_InitializeModule((void*)L);
	SWIG_PropagateClientData();

	/* invoke user-specific initialization */
	SWIG_init_user(L);

	/* add a global fn */
	SWIG_Lua_add_function(L,"swig_type",SWIG_Lua_type);
	SWIG_Lua_add_function(L,"swig_equals",SWIG_Lua_equal);

	/* begin the module (its a table with the same name as the module) */
	SWIG_Lua_module_begin(L,SWIG_name);
	/* add commands/functions */
	for (i = 0; swig_commands[i].name; i++){
		SWIG_Lua_module_add_function(L,swig_commands[i].name,swig_commands[i].func);
	}
	/*luaL_openlib(L,NULL,swig_commands,0);*/
	/* all in one */
	/*luaL_openlib(L,SWIG_name,swig_commands,0);*/
	/* add variables */
	for (i = 0; swig_variables[i].name; i++){
		SWIG_Lua_module_add_variable(L,swig_variables[i].name,swig_variables[i].get,swig_variables[i].set);
	}

	/* additional registration structs & classes in lua: */
	for (i = 0; swig_types[i]; i++){
		if (swig_types[i]->clientdata){
			SWIG_Lua_class_register(L,(swig_lua_class*)(swig_types[i]->clientdata));
		}
	}

	/* constants */
	SWIG_Lua_InstallConstants(L,swig_constants);

	/* end module */
	/*SWIG_Lua_module_end(L);*/
	lua_pop(L,1);  /* tidy stack (remove module table)*/
	lua_pop(L,1);  /* tidy stack (remove global table)*/

	return 1;
}

/* Lua 5.1 has a different name for importing libraries
luaopen_XXX, where XXX is the name of the module (not capitalised)
this function will allow Lua 5.1 to import correctly.
There is a #define in the wrapper to rename 'SWIG_import' to the correct name
*/

SWIGEXPORT int SWIG_import(lua_State* L)
{
	return SWIG_init(L);
}

#ifdef __cplusplus
}
#endif


#ifdef __cplusplus
extern "C"
#endif
void SWIG_init_user(lua_State* L)
{
  
}

